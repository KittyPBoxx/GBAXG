
// This file is autogenerated do not edit

#ifndef SB_INSTR_TABLES
#define SB_INSTR_TABLES 1

#include "sb_instr_impl.h"
#include <stdint.h>

typedef struct{
  sb_opcode_impl_t impl;
  const char* opcode_name;
  uint8_t flag_mask[5];
  uint8_t length; // in bytes
  uint8_t mcycles;
  uint8_t mcycles_branch_taken;
  uint8_t op_src1;
  uint8_t op_src2;
}sb_instr_t;

const static sb_instr_t sb_decode_table[]={
  { sb_nop_impl     , "NOP"           , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_ld_impl      , "LD BC,u16"     , "----", 3,3, 3, SB_OP_BC, SB_OP_U16 },
  { sb_ld_impl      , "LD (BC),A"     , "----", 1,2, 2, SB_OP_BC_INDIRECT, SB_OP_A },
  { sb_inc_impl     , "INC BC"        , "----", 1,2, 2, SB_OP_BC, SB_OP_NONE },
  { sb_inc_impl     , "INC B"         , "Z0H-", 1,1, 1, SB_OP_B, SB_OP_NONE },
  { sb_dec_impl     , "DEC B"         , "Z1H-", 1,1, 1, SB_OP_B, SB_OP_NONE },
  { sb_ld_impl      , "LD B,u8"       , "----", 2,2, 2, SB_OP_B, SB_OP_U8 },
  { sb_rlca_impl    , "RLCA"          , "000C", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_ld_impl      , "LD (u16),SP"   , "----", 3,5, 5, SB_OP_U16_INDIRECT, SB_OP_SP },
  { sb_add_impl     , "ADD HL,BC"     , "-0HC", 1,2, 2, SB_OP_HL, SB_OP_BC },
  { sb_ld_impl      , "LD A,(BC)"     , "----", 1,2, 2, SB_OP_A, SB_OP_BC_INDIRECT },
  { sb_dec_impl     , "DEC BC"        , "----", 1,2, 2, SB_OP_BC, SB_OP_NONE },
  { sb_inc_impl     , "INC C"         , "Z0H-", 1,1, 1, SB_OP_C, SB_OP_NONE },
  { sb_dec_impl     , "DEC C"         , "Z1H-", 1,1, 1, SB_OP_C, SB_OP_NONE },
  { sb_ld_impl      , "LD C,u8"       , "----", 2,2, 2, SB_OP_C, SB_OP_U8 },
  { sb_rrca_impl    , "RRCA"          , "000C", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_stop_impl    , "STOP"          , "----", 2,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_ld_impl      , "LD DE,u16"     , "----", 3,3, 3, SB_OP_DE, SB_OP_U16 },
  { sb_ld_impl      , "LD (DE),A"     , "----", 1,2, 2, SB_OP_DE_INDIRECT, SB_OP_A },
  { sb_inc_impl     , "INC DE"        , "----", 1,2, 2, SB_OP_DE, SB_OP_NONE },
  { sb_inc_impl     , "INC D"         , "Z0H-", 1,1, 1, SB_OP_D, SB_OP_NONE },
  { sb_dec_impl     , "DEC D"         , "Z1H-", 1,1, 1, SB_OP_D, SB_OP_NONE },
  { sb_ld_impl      , "LD D,u8"       , "----", 2,2, 2, SB_OP_D, SB_OP_U8 },
  { sb_rla_impl     , "RLA"           , "000C", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_jr_impl      , "JR i8"         , "----", 2,3, 3, SB_OP_I8, SB_OP_NONE },
  { sb_add_impl     , "ADD HL,DE"     , "-0HC", 1,2, 2, SB_OP_HL, SB_OP_DE },
  { sb_ld_impl      , "LD A,(DE)"     , "----", 1,2, 2, SB_OP_A, SB_OP_DE_INDIRECT },
  { sb_dec_impl     , "DEC DE"        , "----", 1,2, 2, SB_OP_DE, SB_OP_NONE },
  { sb_inc_impl     , "INC E"         , "Z0H-", 1,1, 1, SB_OP_E, SB_OP_NONE },
  { sb_dec_impl     , "DEC E"         , "Z1H-", 1,1, 1, SB_OP_E, SB_OP_NONE },
  { sb_ld_impl      , "LD E,u8"       , "----", 2,2, 2, SB_OP_E, SB_OP_U8 },
  { sb_rra_impl     , "RRA"           , "000C", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_jrc_impl     , "JRC NZ_FLAG,i8", "----", 2,2, 3, SB_OP_NZ_FLAG, SB_OP_I8 },
  { sb_ld_impl      , "LD HL,u16"     , "----", 3,3, 3, SB_OP_HL, SB_OP_U16 },
  { sb_ld_impl      , "LD (HL+),A"    , "----", 1,2, 2, SB_OP_HL_INC_INDIRECT, SB_OP_A },
  { sb_inc_impl     , "INC HL"        , "----", 1,2, 2, SB_OP_HL, SB_OP_NONE },
  { sb_inc_impl     , "INC H"         , "Z0H-", 1,1, 1, SB_OP_H, SB_OP_NONE },
  { sb_dec_impl     , "DEC H"         , "Z1H-", 1,1, 1, SB_OP_H, SB_OP_NONE },
  { sb_ld_impl      , "LD H,u8"       , "----", 2,2, 2, SB_OP_H, SB_OP_U8 },
  { sb_daa_impl     , "DAA"           , "Z-0C", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_jrc_impl     , "JRC Z_FLAG,i8" , "----", 2,2, 3, SB_OP_Z_FLAG, SB_OP_I8 },
  { sb_add_impl     , "ADD HL,HL"     , "-0HC", 1,2, 2, SB_OP_HL, SB_OP_HL },
  { sb_ld_impl      , "LD A,(HL+)"    , "----", 1,2, 2, SB_OP_A, SB_OP_HL_INC_INDIRECT },
  { sb_dec_impl     , "DEC HL"        , "----", 1,2, 2, SB_OP_HL, SB_OP_NONE },
  { sb_inc_impl     , "INC L"         , "Z0H-", 1,1, 1, SB_OP_L, SB_OP_NONE },
  { sb_dec_impl     , "DEC L"         , "Z1H-", 1,1, 1, SB_OP_L, SB_OP_NONE },
  { sb_ld_impl      , "LD L,u8"       , "----", 2,2, 2, SB_OP_L, SB_OP_U8 },
  { sb_cpl_impl     , "CPL"           , "-11-", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_jrc_impl     , "JRC NC_FLAG,i8", "----", 2,2, 3, SB_OP_NC_FLAG, SB_OP_I8 },
  { sb_ld_impl      , "LD SP,u16"     , "----", 3,3, 3, SB_OP_SP, SB_OP_U16 },
  { sb_ld_impl      , "LD (HL-),A"    , "----", 1,2, 2, SB_OP_HL_DEC_INDIRECT, SB_OP_A },
  { sb_inc_impl     , "INC SP"        , "----", 1,2, 2, SB_OP_SP, SB_OP_NONE },
  { sb_inc_impl     , "INC (HL)"      , "Z0H-", 1,3, 3, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_dec_impl     , "DEC (HL)"      , "Z1H-", 1,3, 3, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_ld_impl      , "LD (HL),u8"    , "----", 2,3, 3, SB_OP_HL_INDIRECT, SB_OP_U8 },
  { sb_scf_impl     , "SCF"           , "-001", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_jrc_impl     , "JRC C_FLAG,i8" , "----", 2,2, 3, SB_OP_C_FLAG, SB_OP_I8 },
  { sb_add_impl     , "ADD HL,SP"     , "-0HC", 1,2, 2, SB_OP_HL, SB_OP_SP },
  { sb_ld_impl      , "LD A,(HL-)"    , "----", 1,2, 2, SB_OP_A, SB_OP_HL_DEC_INDIRECT },
  { sb_dec_impl     , "DEC SP"        , "----", 1,2, 2, SB_OP_SP, SB_OP_NONE },
  { sb_inc_impl     , "INC A"         , "Z0H-", 1,1, 1, SB_OP_A, SB_OP_NONE },
  { sb_dec_impl     , "DEC A"         , "Z1H-", 1,1, 1, SB_OP_A, SB_OP_NONE },
  { sb_ld_impl      , "LD A,u8"       , "----", 2,2, 2, SB_OP_A, SB_OP_U8 },
  { sb_ccf_impl     , "CCF"           , "-00C", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_ld_impl      , "LD B,B"        , "----", 1,1, 1, SB_OP_B, SB_OP_B },
  { sb_ld_impl      , "LD B,C"        , "----", 1,1, 1, SB_OP_B, SB_OP_C },
  { sb_ld_impl      , "LD B,D"        , "----", 1,1, 1, SB_OP_B, SB_OP_D },
  { sb_ld_impl      , "LD B,E"        , "----", 1,1, 1, SB_OP_B, SB_OP_E },
  { sb_ld_impl      , "LD B,H"        , "----", 1,1, 1, SB_OP_B, SB_OP_H },
  { sb_ld_impl      , "LD B,L"        , "----", 1,1, 1, SB_OP_B, SB_OP_L },
  { sb_ld_impl      , "LD B,(HL)"     , "----", 1,2, 2, SB_OP_B, SB_OP_HL_INDIRECT },
  { sb_ld_impl      , "LD B,A"        , "----", 1,1, 1, SB_OP_B, SB_OP_A },
  { sb_ld_impl      , "LD C,B"        , "----", 1,1, 1, SB_OP_C, SB_OP_B },
  { sb_ld_impl      , "LD C,C"        , "----", 1,1, 1, SB_OP_C, SB_OP_C },
  { sb_ld_impl      , "LD C,D"        , "----", 1,1, 1, SB_OP_C, SB_OP_D },
  { sb_ld_impl      , "LD C,E"        , "----", 1,1, 1, SB_OP_C, SB_OP_E },
  { sb_ld_impl      , "LD C,H"        , "----", 1,1, 1, SB_OP_C, SB_OP_H },
  { sb_ld_impl      , "LD C,L"        , "----", 1,1, 1, SB_OP_C, SB_OP_L },
  { sb_ld_impl      , "LD C,(HL)"     , "----", 1,2, 2, SB_OP_C, SB_OP_HL_INDIRECT },
  { sb_ld_impl      , "LD C,A"        , "----", 1,1, 1, SB_OP_C, SB_OP_A },
  { sb_ld_impl      , "LD D,B"        , "----", 1,1, 1, SB_OP_D, SB_OP_B },
  { sb_ld_impl      , "LD D,C"        , "----", 1,1, 1, SB_OP_D, SB_OP_C },
  { sb_ld_impl      , "LD D,D"        , "----", 1,1, 1, SB_OP_D, SB_OP_D },
  { sb_ld_impl      , "LD D,E"        , "----", 1,1, 1, SB_OP_D, SB_OP_E },
  { sb_ld_impl      , "LD D,H"        , "----", 1,1, 1, SB_OP_D, SB_OP_H },
  { sb_ld_impl      , "LD D,L"        , "----", 1,1, 1, SB_OP_D, SB_OP_L },
  { sb_ld_impl      , "LD D,(HL)"     , "----", 1,2, 2, SB_OP_D, SB_OP_HL_INDIRECT },
  { sb_ld_impl      , "LD D,A"        , "----", 1,1, 1, SB_OP_D, SB_OP_A },
  { sb_ld_impl      , "LD E,B"        , "----", 1,1, 1, SB_OP_E, SB_OP_B },
  { sb_ld_impl      , "LD E,C"        , "----", 1,1, 1, SB_OP_E, SB_OP_C },
  { sb_ld_impl      , "LD E,D"        , "----", 1,1, 1, SB_OP_E, SB_OP_D },
  { sb_ld_impl      , "LD E,E"        , "----", 1,1, 1, SB_OP_E, SB_OP_E },
  { sb_ld_impl      , "LD E,H"        , "----", 1,1, 1, SB_OP_E, SB_OP_H },
  { sb_ld_impl      , "LD E,L"        , "----", 1,1, 1, SB_OP_E, SB_OP_L },
  { sb_ld_impl      , "LD E,(HL)"     , "----", 1,2, 2, SB_OP_E, SB_OP_HL_INDIRECT },
  { sb_ld_impl      , "LD E,A"        , "----", 1,1, 1, SB_OP_E, SB_OP_A },
  { sb_ld_impl      , "LD H,B"        , "----", 1,1, 1, SB_OP_H, SB_OP_B },
  { sb_ld_impl      , "LD H,C"        , "----", 1,1, 1, SB_OP_H, SB_OP_C },
  { sb_ld_impl      , "LD H,D"        , "----", 1,1, 1, SB_OP_H, SB_OP_D },
  { sb_ld_impl      , "LD H,E"        , "----", 1,1, 1, SB_OP_H, SB_OP_E },
  { sb_ld_impl      , "LD H,H"        , "----", 1,1, 1, SB_OP_H, SB_OP_H },
  { sb_ld_impl      , "LD H,L"        , "----", 1,1, 1, SB_OP_H, SB_OP_L },
  { sb_ld_impl      , "LD H,(HL)"     , "----", 1,2, 2, SB_OP_H, SB_OP_HL_INDIRECT },
  { sb_ld_impl      , "LD H,A"        , "----", 1,1, 1, SB_OP_H, SB_OP_A },
  { sb_ld_impl      , "LD L,B"        , "----", 1,1, 1, SB_OP_L, SB_OP_B },
  { sb_ld_impl      , "LD L,C"        , "----", 1,1, 1, SB_OP_L, SB_OP_C },
  { sb_ld_impl      , "LD L,D"        , "----", 1,1, 1, SB_OP_L, SB_OP_D },
  { sb_ld_impl      , "LD L,E"        , "----", 1,1, 1, SB_OP_L, SB_OP_E },
  { sb_ld_impl      , "LD L,H"        , "----", 1,1, 1, SB_OP_L, SB_OP_H },
  { sb_ld_impl      , "LD L,L"        , "----", 1,1, 1, SB_OP_L, SB_OP_L },
  { sb_ld_impl      , "LD L,(HL)"     , "----", 1,2, 2, SB_OP_L, SB_OP_HL_INDIRECT },
  { sb_ld_impl      , "LD L,A"        , "----", 1,1, 1, SB_OP_L, SB_OP_A },
  { sb_ld_impl      , "LD (HL),B"     , "----", 1,2, 2, SB_OP_HL_INDIRECT, SB_OP_B },
  { sb_ld_impl      , "LD (HL),C"     , "----", 1,2, 2, SB_OP_HL_INDIRECT, SB_OP_C },
  { sb_ld_impl      , "LD (HL),D"     , "----", 1,2, 2, SB_OP_HL_INDIRECT, SB_OP_D },
  { sb_ld_impl      , "LD (HL),E"     , "----", 1,2, 2, SB_OP_HL_INDIRECT, SB_OP_E },
  { sb_ld_impl      , "LD (HL),H"     , "----", 1,2, 2, SB_OP_HL_INDIRECT, SB_OP_H },
  { sb_ld_impl      , "LD (HL),L"     , "----", 1,2, 2, SB_OP_HL_INDIRECT, SB_OP_L },
  { sb_halt_impl    , "HALT"          , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_ld_impl      , "LD (HL),A"     , "----", 1,2, 2, SB_OP_HL_INDIRECT, SB_OP_A },
  { sb_ld_impl      , "LD A,B"        , "----", 1,1, 1, SB_OP_A, SB_OP_B },
  { sb_ld_impl      , "LD A,C"        , "----", 1,1, 1, SB_OP_A, SB_OP_C },
  { sb_ld_impl      , "LD A,D"        , "----", 1,1, 1, SB_OP_A, SB_OP_D },
  { sb_ld_impl      , "LD A,E"        , "----", 1,1, 1, SB_OP_A, SB_OP_E },
  { sb_ld_impl      , "LD A,H"        , "----", 1,1, 1, SB_OP_A, SB_OP_H },
  { sb_ld_impl      , "LD A,L"        , "----", 1,1, 1, SB_OP_A, SB_OP_L },
  { sb_ld_impl      , "LD A,(HL)"     , "----", 1,2, 2, SB_OP_A, SB_OP_HL_INDIRECT },
  { sb_ld_impl      , "LD A,A"        , "----", 1,1, 1, SB_OP_A, SB_OP_A },
  { sb_add_impl     , "ADD A,B"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_B },
  { sb_add_impl     , "ADD A,C"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_C },
  { sb_add_impl     , "ADD A,D"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_D },
  { sb_add_impl     , "ADD A,E"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_E },
  { sb_add_impl     , "ADD A,H"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_H },
  { sb_add_impl     , "ADD A,L"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_L },
  { sb_add_impl     , "ADD A,(HL)"    , "Z0HC", 1,2, 2, SB_OP_A, SB_OP_HL_INDIRECT },
  { sb_add_impl     , "ADD A,A"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_A },
  { sb_adc_impl     , "ADC A,B"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_B },
  { sb_adc_impl     , "ADC A,C"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_C },
  { sb_adc_impl     , "ADC A,D"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_D },
  { sb_adc_impl     , "ADC A,E"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_E },
  { sb_adc_impl     , "ADC A,H"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_H },
  { sb_adc_impl     , "ADC A,L"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_L },
  { sb_adc_impl     , "ADC A,(HL)"    , "Z0HC", 1,2, 2, SB_OP_A, SB_OP_HL_INDIRECT },
  { sb_adc_impl     , "ADC A,A"       , "Z0HC", 1,1, 1, SB_OP_A, SB_OP_A },
  { sb_sub_impl     , "SUB A,B"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_B },
  { sb_sub_impl     , "SUB A,C"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_C },
  { sb_sub_impl     , "SUB A,D"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_D },
  { sb_sub_impl     , "SUB A,E"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_E },
  { sb_sub_impl     , "SUB A,H"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_H },
  { sb_sub_impl     , "SUB A,L"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_L },
  { sb_sub_impl     , "SUB A,(HL)"    , "Z1HC", 1,2, 2, SB_OP_A, SB_OP_HL_INDIRECT },
  { sb_sub_impl     , "SUB A,A"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_A },
  { sb_sbc_impl     , "SBC A,B"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_B },
  { sb_sbc_impl     , "SBC A,C"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_C },
  { sb_sbc_impl     , "SBC A,D"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_D },
  { sb_sbc_impl     , "SBC A,E"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_E },
  { sb_sbc_impl     , "SBC A,H"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_H },
  { sb_sbc_impl     , "SBC A,L"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_L },
  { sb_sbc_impl     , "SBC A,(HL)"    , "Z1HC", 1,2, 2, SB_OP_A, SB_OP_HL_INDIRECT },
  { sb_sbc_impl     , "SBC A,A"       , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_A },
  { sb_and_impl     , "AND A,B"       , "Z010", 1,1, 1, SB_OP_A, SB_OP_B },
  { sb_and_impl     , "AND A,C"       , "Z010", 1,1, 1, SB_OP_A, SB_OP_C },
  { sb_and_impl     , "AND A,D"       , "Z010", 1,1, 1, SB_OP_A, SB_OP_D },
  { sb_and_impl     , "AND A,E"       , "Z010", 1,1, 1, SB_OP_A, SB_OP_E },
  { sb_and_impl     , "AND A,H"       , "Z010", 1,1, 1, SB_OP_A, SB_OP_H },
  { sb_and_impl     , "AND A,L"       , "Z010", 1,1, 1, SB_OP_A, SB_OP_L },
  { sb_and_impl     , "AND A,(HL)"    , "Z010", 1,2, 2, SB_OP_A, SB_OP_HL_INDIRECT },
  { sb_and_impl     , "AND A,A"       , "Z010", 1,1, 1, SB_OP_A, SB_OP_A },
  { sb_xor_impl     , "XOR A,B"       , "Z000", 1,1, 1, SB_OP_A, SB_OP_B },
  { sb_xor_impl     , "XOR A,C"       , "Z000", 1,1, 1, SB_OP_A, SB_OP_C },
  { sb_xor_impl     , "XOR A,D"       , "Z000", 1,1, 1, SB_OP_A, SB_OP_D },
  { sb_xor_impl     , "XOR A,E"       , "Z000", 1,1, 1, SB_OP_A, SB_OP_E },
  { sb_xor_impl     , "XOR A,H"       , "Z000", 1,1, 1, SB_OP_A, SB_OP_H },
  { sb_xor_impl     , "XOR A,L"       , "Z000", 1,1, 1, SB_OP_A, SB_OP_L },
  { sb_xor_impl     , "XOR A,(HL)"    , "Z000", 1,2, 2, SB_OP_A, SB_OP_HL_INDIRECT },
  { sb_xor_impl     , "XOR A,A"       , "Z000", 1,1, 1, SB_OP_A, SB_OP_A },
  { sb_or_impl      , "OR A,B"        , "Z000", 1,1, 1, SB_OP_A, SB_OP_B },
  { sb_or_impl      , "OR A,C"        , "Z000", 1,1, 1, SB_OP_A, SB_OP_C },
  { sb_or_impl      , "OR A,D"        , "Z000", 1,1, 1, SB_OP_A, SB_OP_D },
  { sb_or_impl      , "OR A,E"        , "Z000", 1,1, 1, SB_OP_A, SB_OP_E },
  { sb_or_impl      , "OR A,H"        , "Z000", 1,1, 1, SB_OP_A, SB_OP_H },
  { sb_or_impl      , "OR A,L"        , "Z000", 1,1, 1, SB_OP_A, SB_OP_L },
  { sb_or_impl      , "OR A,(HL)"     , "Z000", 1,2, 2, SB_OP_A, SB_OP_HL_INDIRECT },
  { sb_or_impl      , "OR A,A"        , "Z000", 1,1, 1, SB_OP_A, SB_OP_A },
  { sb_cp_impl      , "CP A,B"        , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_B },
  { sb_cp_impl      , "CP A,C"        , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_C },
  { sb_cp_impl      , "CP A,D"        , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_D },
  { sb_cp_impl      , "CP A,E"        , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_E },
  { sb_cp_impl      , "CP A,H"        , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_H },
  { sb_cp_impl      , "CP A,L"        , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_L },
  { sb_cp_impl      , "CP A,(HL)"     , "Z1HC", 1,2, 2, SB_OP_A, SB_OP_HL_INDIRECT },
  { sb_cp_impl      , "CP A,A"        , "Z1HC", 1,1, 1, SB_OP_A, SB_OP_A },
  { sb_retc_impl    , "RETC NZ_FLAG"  , "----", 1,2, 5, SB_OP_NZ_FLAG, SB_OP_NONE },
  { sb_pop_impl     , "POP BC"        , "----", 1,3, 3, SB_OP_BC, SB_OP_NONE },
  { sb_jpc_impl     , "JPC NZ_FLAG,u16", "----", 3,3, 4, SB_OP_NZ_FLAG, SB_OP_U16 },
  { sb_jp_impl      , "JP u16"        , "----", 3,4, 4, SB_OP_U16, SB_OP_NONE },
  { sb_callc_impl   , "CALLC NZ_FLAG,u16", "----", 3,3, 6, SB_OP_NZ_FLAG, SB_OP_U16 },
  { sb_push_impl    , "PUSH BC"       , "----", 1,4, 4, SB_OP_BC, SB_OP_NONE },
  { sb_add_impl     , "ADD A,u8"      , "Z0HC", 2,2, 2, SB_OP_A, SB_OP_U8 },
  { sb_rst_impl     , "RST 00h"       , "----", 1,4, 4, SB_OP_00H, SB_OP_NONE },
  { sb_retc_impl    , "RETC Z_FLAG"   , "----", 1,2, 5, SB_OP_Z_FLAG, SB_OP_NONE },
  { sb_ret_impl     , "RET"           , "----", 1,4, 4, SB_OP_NONE, SB_OP_NONE },
  { sb_jpc_impl     , "JPC Z_FLAG,u16", "----", 3,3, 4, SB_OP_Z_FLAG, SB_OP_U16 },
  { sb_prefix_impl  , "PREFIX"        , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_callc_impl   , "CALLC Z_FLAG,u16", "----", 3,3, 6, SB_OP_Z_FLAG, SB_OP_U16 },
  { sb_call_impl    , "CALL u16"      , "----", 3,6, 6, SB_OP_U16, SB_OP_NONE },
  { sb_adc_impl     , "ADC A,u8"      , "Z0HC", 2,2, 2, SB_OP_A, SB_OP_U8 },
  { sb_rst_impl     , "RST 08h"       , "----", 1,4, 4, SB_OP_08H, SB_OP_NONE },
  { sb_retc_impl    , "RETC NC_FLAG"  , "----", 1,2, 5, SB_OP_NC_FLAG, SB_OP_NONE },
  { sb_pop_impl     , "POP DE"        , "----", 1,3, 3, SB_OP_DE, SB_OP_NONE },
  { sb_jpc_impl     , "JPC NC_FLAG,u16", "----", 3,3, 4, SB_OP_NC_FLAG, SB_OP_U16 },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_callc_impl   , "CALLC NC_FLAG,u16", "----", 3,3, 6, SB_OP_NC_FLAG, SB_OP_U16 },
  { sb_push_impl    , "PUSH DE"       , "----", 1,4, 4, SB_OP_DE, SB_OP_NONE },
  { sb_sub_impl     , "SUB A,u8"      , "Z1HC", 2,2, 2, SB_OP_A, SB_OP_U8 },
  { sb_rst_impl     , "RST 10h"       , "----", 1,4, 4, SB_OP_10H, SB_OP_NONE },
  { sb_retc_impl    , "RETC C_FLAG"   , "----", 1,2, 5, SB_OP_C_FLAG, SB_OP_NONE },
  { sb_reti_impl    , "RETI"          , "----", 1,4, 4, SB_OP_NONE, SB_OP_NONE },
  { sb_jpc_impl     , "JPC C_FLAG,u16", "----", 3,3, 4, SB_OP_C_FLAG, SB_OP_U16 },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_callc_impl   , "CALLC C_FLAG,u16", "----", 3,3, 6, SB_OP_C_FLAG, SB_OP_U16 },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_sbc_impl     , "SBC A,u8"      , "Z1HC", 2,2, 2, SB_OP_A, SB_OP_U8 },
  { sb_rst_impl     , "RST 18h"       , "----", 1,4, 4, SB_OP_18H, SB_OP_NONE },
  { sb_ld_impl      , "LD (FF00+u8),A", "----", 2,3, 3, SB_OP_FF00_PLUS_U8_INDIRECT, SB_OP_A },
  { sb_pop_impl     , "POP HL"        , "----", 1,3, 3, SB_OP_HL, SB_OP_NONE },
  { sb_ld_impl      , "LD (FF00+C),A" , "----", 1,2, 2, SB_OP_FF00_PLUS_C_INDIRECT, SB_OP_A },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_push_impl    , "PUSH HL"       , "----", 1,4, 4, SB_OP_HL, SB_OP_NONE },
  { sb_and_impl     , "AND A,u8"      , "Z010", 2,2, 2, SB_OP_A, SB_OP_U8 },
  { sb_rst_impl     , "RST 20h"       , "----", 1,4, 4, SB_OP_20H, SB_OP_NONE },
  { sb_add_impl     , "ADD SP,i8"     , "00HC", 2,4, 4, SB_OP_SP, SB_OP_I8 },
  { sb_jp_impl      , "JP HL"         , "----", 1,1, 1, SB_OP_HL, SB_OP_NONE },
  { sb_ld_impl      , "LD (u16),A"    , "----", 3,4, 4, SB_OP_U16_INDIRECT, SB_OP_A },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_xor_impl     , "XOR A,u8"      , "Z000", 2,2, 2, SB_OP_A, SB_OP_U8 },
  { sb_rst_impl     , "RST 28h"       , "----", 1,4, 4, SB_OP_28H, SB_OP_NONE },
  { sb_ld_impl      , "LD A,(FF00+u8)", "----", 2,3, 3, SB_OP_A, SB_OP_FF00_PLUS_U8_INDIRECT },
  { sb_pop_impl     , "POP AF"        , "ZNHC", 1,3, 3, SB_OP_AF, SB_OP_NONE },
  { sb_ld_impl      , "LD A,(FF00+C)" , "----", 1,2, 2, SB_OP_A, SB_OP_FF00_PLUS_C_INDIRECT },
  { sb_di_impl      , "DI"            , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_push_impl    , "PUSH AF"       , "----", 1,4, 4, SB_OP_AF, SB_OP_NONE },
  { sb_or_impl      , "OR A,u8"       , "Z000", 2,2, 2, SB_OP_A, SB_OP_U8 },
  { sb_rst_impl     , "RST 30h"       , "----", 1,4, 4, SB_OP_30H, SB_OP_NONE },
  { sb_ld_impl      , "LD HL,SP+i8"   , "00HC", 2,3, 3, SB_OP_HL, SB_OP_SP_PLUS_I8 },
  { sb_ld_impl      , "LD SP,HL"      , "----", 1,2, 2, SB_OP_SP, SB_OP_HL },
  { sb_ld_impl      , "LD A,(u16)"    , "----", 3,4, 4, SB_OP_A, SB_OP_U16_INDIRECT },
  { sb_ei_impl      , "EI"            , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_nop_no_instr_impl, "NOP_NO_INSTR"  , "----", 1,1, 1, SB_OP_NONE, SB_OP_NONE },
  { sb_cp_impl      , "CP A,u8"       , "Z1HC", 2,2, 2, SB_OP_A, SB_OP_U8 },
  { sb_rst_impl     , "RST 38h"       , "----", 1,4, 4, SB_OP_38H, SB_OP_NONE },
  { sb_rlc_impl     , "RLC B"         , "Z00C", 1,2, 2, SB_OP_B, SB_OP_NONE },
  { sb_rlc_impl     , "RLC C"         , "Z00C", 1,2, 2, SB_OP_C, SB_OP_NONE },
  { sb_rlc_impl     , "RLC D"         , "Z00C", 1,2, 2, SB_OP_D, SB_OP_NONE },
  { sb_rlc_impl     , "RLC E"         , "Z00C", 1,2, 2, SB_OP_E, SB_OP_NONE },
  { sb_rlc_impl     , "RLC H"         , "Z00C", 1,2, 2, SB_OP_H, SB_OP_NONE },
  { sb_rlc_impl     , "RLC L"         , "Z00C", 1,2, 2, SB_OP_L, SB_OP_NONE },
  { sb_rlc_impl     , "RLC (HL)"      , "Z00C", 1,4, 4, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_rlc_impl     , "RLC A"         , "Z00C", 1,2, 2, SB_OP_A, SB_OP_NONE },
  { sb_rrc_impl     , "RRC B"         , "Z00C", 1,2, 2, SB_OP_B, SB_OP_NONE },
  { sb_rrc_impl     , "RRC C"         , "Z00C", 1,2, 2, SB_OP_C, SB_OP_NONE },
  { sb_rrc_impl     , "RRC D"         , "Z00C", 1,2, 2, SB_OP_D, SB_OP_NONE },
  { sb_rrc_impl     , "RRC E"         , "Z00C", 1,2, 2, SB_OP_E, SB_OP_NONE },
  { sb_rrc_impl     , "RRC H"         , "Z00C", 1,2, 2, SB_OP_H, SB_OP_NONE },
  { sb_rrc_impl     , "RRC L"         , "Z00C", 1,2, 2, SB_OP_L, SB_OP_NONE },
  { sb_rrc_impl     , "RRC (HL)"      , "Z00C", 1,4, 4, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_rrc_impl     , "RRC A"         , "Z00C", 1,2, 2, SB_OP_A, SB_OP_NONE },
  { sb_rl_impl      , "RL B"          , "Z00C", 1,2, 2, SB_OP_B, SB_OP_NONE },
  { sb_rl_impl      , "RL C"          , "Z00C", 1,2, 2, SB_OP_C, SB_OP_NONE },
  { sb_rl_impl      , "RL D"          , "Z00C", 1,2, 2, SB_OP_D, SB_OP_NONE },
  { sb_rl_impl      , "RL E"          , "Z00C", 1,2, 2, SB_OP_E, SB_OP_NONE },
  { sb_rl_impl      , "RL H"          , "Z00C", 1,2, 2, SB_OP_H, SB_OP_NONE },
  { sb_rl_impl      , "RL L"          , "Z00C", 1,2, 2, SB_OP_L, SB_OP_NONE },
  { sb_rl_impl      , "RL (HL)"       , "Z00C", 1,4, 4, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_rl_impl      , "RL A"          , "Z00C", 1,2, 2, SB_OP_A, SB_OP_NONE },
  { sb_rr_impl      , "RR B"          , "Z00C", 1,2, 2, SB_OP_B, SB_OP_NONE },
  { sb_rr_impl      , "RR C"          , "Z00C", 1,2, 2, SB_OP_C, SB_OP_NONE },
  { sb_rr_impl      , "RR D"          , "Z00C", 1,2, 2, SB_OP_D, SB_OP_NONE },
  { sb_rr_impl      , "RR E"          , "Z00C", 1,2, 2, SB_OP_E, SB_OP_NONE },
  { sb_rr_impl      , "RR H"          , "Z00C", 1,2, 2, SB_OP_H, SB_OP_NONE },
  { sb_rr_impl      , "RR L"          , "Z00C", 1,2, 2, SB_OP_L, SB_OP_NONE },
  { sb_rr_impl      , "RR (HL)"       , "Z00C", 1,4, 4, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_rr_impl      , "RR A"          , "Z00C", 1,2, 2, SB_OP_A, SB_OP_NONE },
  { sb_sla_impl     , "SLA B"         , "Z00C", 1,2, 2, SB_OP_B, SB_OP_NONE },
  { sb_sla_impl     , "SLA C"         , "Z00C", 1,2, 2, SB_OP_C, SB_OP_NONE },
  { sb_sla_impl     , "SLA D"         , "Z00C", 1,2, 2, SB_OP_D, SB_OP_NONE },
  { sb_sla_impl     , "SLA E"         , "Z00C", 1,2, 2, SB_OP_E, SB_OP_NONE },
  { sb_sla_impl     , "SLA H"         , "Z00C", 1,2, 2, SB_OP_H, SB_OP_NONE },
  { sb_sla_impl     , "SLA L"         , "Z00C", 1,2, 2, SB_OP_L, SB_OP_NONE },
  { sb_sla_impl     , "SLA (HL)"      , "Z00C", 1,4, 4, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_sla_impl     , "SLA A"         , "Z00C", 1,2, 2, SB_OP_A, SB_OP_NONE },
  { sb_sra_impl     , "SRA B"         , "Z00C", 1,2, 2, SB_OP_B, SB_OP_NONE },
  { sb_sra_impl     , "SRA C"         , "Z00C", 1,2, 2, SB_OP_C, SB_OP_NONE },
  { sb_sra_impl     , "SRA D"         , "Z00C", 1,2, 2, SB_OP_D, SB_OP_NONE },
  { sb_sra_impl     , "SRA E"         , "Z00C", 1,2, 2, SB_OP_E, SB_OP_NONE },
  { sb_sra_impl     , "SRA H"         , "Z00C", 1,2, 2, SB_OP_H, SB_OP_NONE },
  { sb_sra_impl     , "SRA L"         , "Z00C", 1,2, 2, SB_OP_L, SB_OP_NONE },
  { sb_sra_impl     , "SRA (HL)"      , "Z00C", 1,4, 4, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_sra_impl     , "SRA A"         , "Z00C", 1,2, 2, SB_OP_A, SB_OP_NONE },
  { sb_swap_impl    , "SWAP B"        , "Z000", 1,2, 2, SB_OP_B, SB_OP_NONE },
  { sb_swap_impl    , "SWAP C"        , "Z000", 1,2, 2, SB_OP_C, SB_OP_NONE },
  { sb_swap_impl    , "SWAP D"        , "Z000", 1,2, 2, SB_OP_D, SB_OP_NONE },
  { sb_swap_impl    , "SWAP E"        , "Z000", 1,2, 2, SB_OP_E, SB_OP_NONE },
  { sb_swap_impl    , "SWAP H"        , "Z000", 1,2, 2, SB_OP_H, SB_OP_NONE },
  { sb_swap_impl    , "SWAP L"        , "Z000", 1,2, 2, SB_OP_L, SB_OP_NONE },
  { sb_swap_impl    , "SWAP (HL)"     , "Z000", 1,4, 4, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_swap_impl    , "SWAP A"        , "Z000", 1,2, 2, SB_OP_A, SB_OP_NONE },
  { sb_srl_impl     , "SRL B"         , "Z00C", 1,2, 2, SB_OP_B, SB_OP_NONE },
  { sb_srl_impl     , "SRL C"         , "Z00C", 1,2, 2, SB_OP_C, SB_OP_NONE },
  { sb_srl_impl     , "SRL D"         , "Z00C", 1,2, 2, SB_OP_D, SB_OP_NONE },
  { sb_srl_impl     , "SRL E"         , "Z00C", 1,2, 2, SB_OP_E, SB_OP_NONE },
  { sb_srl_impl     , "SRL H"         , "Z00C", 1,2, 2, SB_OP_H, SB_OP_NONE },
  { sb_srl_impl     , "SRL L"         , "Z00C", 1,2, 2, SB_OP_L, SB_OP_NONE },
  { sb_srl_impl     , "SRL (HL)"      , "Z00C", 1,4, 4, SB_OP_HL_INDIRECT, SB_OP_NONE },
  { sb_srl_impl     , "SRL A"         , "Z00C", 1,2, 2, SB_OP_A, SB_OP_NONE },
  { sb_bit_impl     , "BIT 0,B"       , "Z01-", 1,2, 2, SB_OP_0, SB_OP_B },
  { sb_bit_impl     , "BIT 0,C"       , "Z01-", 1,2, 2, SB_OP_0, SB_OP_C },
  { sb_bit_impl     , "BIT 0,D"       , "Z01-", 1,2, 2, SB_OP_0, SB_OP_D },
  { sb_bit_impl     , "BIT 0,E"       , "Z01-", 1,2, 2, SB_OP_0, SB_OP_E },
  { sb_bit_impl     , "BIT 0,H"       , "Z01-", 1,2, 2, SB_OP_0, SB_OP_H },
  { sb_bit_impl     , "BIT 0,L"       , "Z01-", 1,2, 2, SB_OP_0, SB_OP_L },
  { sb_bit_impl     , "BIT 0,(HL)"    , "Z01-", 1,3, 3, SB_OP_0, SB_OP_HL_INDIRECT },
  { sb_bit_impl     , "BIT 0,A"       , "Z01-", 1,2, 2, SB_OP_0, SB_OP_A },
  { sb_bit_impl     , "BIT 1,B"       , "Z01-", 1,2, 2, SB_OP_1, SB_OP_B },
  { sb_bit_impl     , "BIT 1,C"       , "Z01-", 1,2, 2, SB_OP_1, SB_OP_C },
  { sb_bit_impl     , "BIT 1,D"       , "Z01-", 1,2, 2, SB_OP_1, SB_OP_D },
  { sb_bit_impl     , "BIT 1,E"       , "Z01-", 1,2, 2, SB_OP_1, SB_OP_E },
  { sb_bit_impl     , "BIT 1,H"       , "Z01-", 1,2, 2, SB_OP_1, SB_OP_H },
  { sb_bit_impl     , "BIT 1,L"       , "Z01-", 1,2, 2, SB_OP_1, SB_OP_L },
  { sb_bit_impl     , "BIT 1,(HL)"    , "Z01-", 1,3, 3, SB_OP_1, SB_OP_HL_INDIRECT },
  { sb_bit_impl     , "BIT 1,A"       , "Z01-", 1,2, 2, SB_OP_1, SB_OP_A },
  { sb_bit_impl     , "BIT 2,B"       , "Z01-", 1,2, 2, SB_OP_2, SB_OP_B },
  { sb_bit_impl     , "BIT 2,C"       , "Z01-", 1,2, 2, SB_OP_2, SB_OP_C },
  { sb_bit_impl     , "BIT 2,D"       , "Z01-", 1,2, 2, SB_OP_2, SB_OP_D },
  { sb_bit_impl     , "BIT 2,E"       , "Z01-", 1,2, 2, SB_OP_2, SB_OP_E },
  { sb_bit_impl     , "BIT 2,H"       , "Z01-", 1,2, 2, SB_OP_2, SB_OP_H },
  { sb_bit_impl     , "BIT 2,L"       , "Z01-", 1,2, 2, SB_OP_2, SB_OP_L },
  { sb_bit_impl     , "BIT 2,(HL)"    , "Z01-", 1,3, 3, SB_OP_2, SB_OP_HL_INDIRECT },
  { sb_bit_impl     , "BIT 2,A"       , "Z01-", 1,2, 2, SB_OP_2, SB_OP_A },
  { sb_bit_impl     , "BIT 3,B"       , "Z01-", 1,2, 2, SB_OP_3, SB_OP_B },
  { sb_bit_impl     , "BIT 3,C"       , "Z01-", 1,2, 2, SB_OP_3, SB_OP_C },
  { sb_bit_impl     , "BIT 3,D"       , "Z01-", 1,2, 2, SB_OP_3, SB_OP_D },
  { sb_bit_impl     , "BIT 3,E"       , "Z01-", 1,2, 2, SB_OP_3, SB_OP_E },
  { sb_bit_impl     , "BIT 3,H"       , "Z01-", 1,2, 2, SB_OP_3, SB_OP_H },
  { sb_bit_impl     , "BIT 3,L"       , "Z01-", 1,2, 2, SB_OP_3, SB_OP_L },
  { sb_bit_impl     , "BIT 3,(HL)"    , "Z01-", 1,3, 3, SB_OP_3, SB_OP_HL_INDIRECT },
  { sb_bit_impl     , "BIT 3,A"       , "Z01-", 1,2, 2, SB_OP_3, SB_OP_A },
  { sb_bit_impl     , "BIT 4,B"       , "Z01-", 1,2, 2, SB_OP_4, SB_OP_B },
  { sb_bit_impl     , "BIT 4,C"       , "Z01-", 1,2, 2, SB_OP_4, SB_OP_C },
  { sb_bit_impl     , "BIT 4,D"       , "Z01-", 1,2, 2, SB_OP_4, SB_OP_D },
  { sb_bit_impl     , "BIT 4,E"       , "Z01-", 1,2, 2, SB_OP_4, SB_OP_E },
  { sb_bit_impl     , "BIT 4,H"       , "Z01-", 1,2, 2, SB_OP_4, SB_OP_H },
  { sb_bit_impl     , "BIT 4,L"       , "Z01-", 1,2, 2, SB_OP_4, SB_OP_L },
  { sb_bit_impl     , "BIT 4,(HL)"    , "Z01-", 1,3, 3, SB_OP_4, SB_OP_HL_INDIRECT },
  { sb_bit_impl     , "BIT 4,A"       , "Z01-", 1,2, 2, SB_OP_4, SB_OP_A },
  { sb_bit_impl     , "BIT 5,B"       , "Z01-", 1,2, 2, SB_OP_5, SB_OP_B },
  { sb_bit_impl     , "BIT 5,C"       , "Z01-", 1,2, 2, SB_OP_5, SB_OP_C },
  { sb_bit_impl     , "BIT 5,D"       , "Z01-", 1,2, 2, SB_OP_5, SB_OP_D },
  { sb_bit_impl     , "BIT 5,E"       , "Z01-", 1,2, 2, SB_OP_5, SB_OP_E },
  { sb_bit_impl     , "BIT 5,H"       , "Z01-", 1,2, 2, SB_OP_5, SB_OP_H },
  { sb_bit_impl     , "BIT 5,L"       , "Z01-", 1,2, 2, SB_OP_5, SB_OP_L },
  { sb_bit_impl     , "BIT 5,(HL)"    , "Z01-", 1,3, 3, SB_OP_5, SB_OP_HL_INDIRECT },
  { sb_bit_impl     , "BIT 5,A"       , "Z01-", 1,2, 2, SB_OP_5, SB_OP_A },
  { sb_bit_impl     , "BIT 6,B"       , "Z01-", 1,2, 2, SB_OP_6, SB_OP_B },
  { sb_bit_impl     , "BIT 6,C"       , "Z01-", 1,2, 2, SB_OP_6, SB_OP_C },
  { sb_bit_impl     , "BIT 6,D"       , "Z01-", 1,2, 2, SB_OP_6, SB_OP_D },
  { sb_bit_impl     , "BIT 6,E"       , "Z01-", 1,2, 2, SB_OP_6, SB_OP_E },
  { sb_bit_impl     , "BIT 6,H"       , "Z01-", 1,2, 2, SB_OP_6, SB_OP_H },
  { sb_bit_impl     , "BIT 6,L"       , "Z01-", 1,2, 2, SB_OP_6, SB_OP_L },
  { sb_bit_impl     , "BIT 6,(HL)"    , "Z01-", 1,3, 3, SB_OP_6, SB_OP_HL_INDIRECT },
  { sb_bit_impl     , "BIT 6,A"       , "Z01-", 1,2, 2, SB_OP_6, SB_OP_A },
  { sb_bit_impl     , "BIT 7,B"       , "Z01-", 1,2, 2, SB_OP_7, SB_OP_B },
  { sb_bit_impl     , "BIT 7,C"       , "Z01-", 1,2, 2, SB_OP_7, SB_OP_C },
  { sb_bit_impl     , "BIT 7,D"       , "Z01-", 1,2, 2, SB_OP_7, SB_OP_D },
  { sb_bit_impl     , "BIT 7,E"       , "Z01-", 1,2, 2, SB_OP_7, SB_OP_E },
  { sb_bit_impl     , "BIT 7,H"       , "Z01-", 1,2, 2, SB_OP_7, SB_OP_H },
  { sb_bit_impl     , "BIT 7,L"       , "Z01-", 1,2, 2, SB_OP_7, SB_OP_L },
  { sb_bit_impl     , "BIT 7,(HL)"    , "Z01-", 1,3, 3, SB_OP_7, SB_OP_HL_INDIRECT },
  { sb_bit_impl     , "BIT 7,A"       , "Z01-", 1,2, 2, SB_OP_7, SB_OP_A },
  { sb_res_impl     , "RES 0,B"       , "----", 1,2, 2, SB_OP_0, SB_OP_B },
  { sb_res_impl     , "RES 0,C"       , "----", 1,2, 2, SB_OP_0, SB_OP_C },
  { sb_res_impl     , "RES 0,D"       , "----", 1,2, 2, SB_OP_0, SB_OP_D },
  { sb_res_impl     , "RES 0,E"       , "----", 1,2, 2, SB_OP_0, SB_OP_E },
  { sb_res_impl     , "RES 0,H"       , "----", 1,2, 2, SB_OP_0, SB_OP_H },
  { sb_res_impl     , "RES 0,L"       , "----", 1,2, 2, SB_OP_0, SB_OP_L },
  { sb_res_impl     , "RES 0,(HL)"    , "----", 1,4, 4, SB_OP_0, SB_OP_HL_INDIRECT },
  { sb_res_impl     , "RES 0,A"       , "----", 1,2, 2, SB_OP_0, SB_OP_A },
  { sb_res_impl     , "RES 1,B"       , "----", 1,2, 2, SB_OP_1, SB_OP_B },
  { sb_res_impl     , "RES 1,C"       , "----", 1,2, 2, SB_OP_1, SB_OP_C },
  { sb_res_impl     , "RES 1,D"       , "----", 1,2, 2, SB_OP_1, SB_OP_D },
  { sb_res_impl     , "RES 1,E"       , "----", 1,2, 2, SB_OP_1, SB_OP_E },
  { sb_res_impl     , "RES 1,H"       , "----", 1,2, 2, SB_OP_1, SB_OP_H },
  { sb_res_impl     , "RES 1,L"       , "----", 1,2, 2, SB_OP_1, SB_OP_L },
  { sb_res_impl     , "RES 1,(HL)"    , "----", 1,4, 4, SB_OP_1, SB_OP_HL_INDIRECT },
  { sb_res_impl     , "RES 1,A"       , "----", 1,2, 2, SB_OP_1, SB_OP_A },
  { sb_res_impl     , "RES 2,B"       , "----", 1,2, 2, SB_OP_2, SB_OP_B },
  { sb_res_impl     , "RES 2,C"       , "----", 1,2, 2, SB_OP_2, SB_OP_C },
  { sb_res_impl     , "RES 2,D"       , "----", 1,2, 2, SB_OP_2, SB_OP_D },
  { sb_res_impl     , "RES 2,E"       , "----", 1,2, 2, SB_OP_2, SB_OP_E },
  { sb_res_impl     , "RES 2,H"       , "----", 1,2, 2, SB_OP_2, SB_OP_H },
  { sb_res_impl     , "RES 2,L"       , "----", 1,2, 2, SB_OP_2, SB_OP_L },
  { sb_res_impl     , "RES 2,(HL)"    , "----", 1,4, 4, SB_OP_2, SB_OP_HL_INDIRECT },
  { sb_res_impl     , "RES 2,A"       , "----", 1,2, 2, SB_OP_2, SB_OP_A },
  { sb_res_impl     , "RES 3,B"       , "----", 1,2, 2, SB_OP_3, SB_OP_B },
  { sb_res_impl     , "RES 3,C"       , "----", 1,2, 2, SB_OP_3, SB_OP_C },
  { sb_res_impl     , "RES 3,D"       , "----", 1,2, 2, SB_OP_3, SB_OP_D },
  { sb_res_impl     , "RES 3,E"       , "----", 1,2, 2, SB_OP_3, SB_OP_E },
  { sb_res_impl     , "RES 3,H"       , "----", 1,2, 2, SB_OP_3, SB_OP_H },
  { sb_res_impl     , "RES 3,L"       , "----", 1,2, 2, SB_OP_3, SB_OP_L },
  { sb_res_impl     , "RES 3,(HL)"    , "----", 1,4, 4, SB_OP_3, SB_OP_HL_INDIRECT },
  { sb_res_impl     , "RES 3,A"       , "----", 1,2, 2, SB_OP_3, SB_OP_A },
  { sb_res_impl     , "RES 4,B"       , "----", 1,2, 2, SB_OP_4, SB_OP_B },
  { sb_res_impl     , "RES 4,C"       , "----", 1,2, 2, SB_OP_4, SB_OP_C },
  { sb_res_impl     , "RES 4,D"       , "----", 1,2, 2, SB_OP_4, SB_OP_D },
  { sb_res_impl     , "RES 4,E"       , "----", 1,2, 2, SB_OP_4, SB_OP_E },
  { sb_res_impl     , "RES 4,H"       , "----", 1,2, 2, SB_OP_4, SB_OP_H },
  { sb_res_impl     , "RES 4,L"       , "----", 1,2, 2, SB_OP_4, SB_OP_L },
  { sb_res_impl     , "RES 4,(HL)"    , "----", 1,4, 4, SB_OP_4, SB_OP_HL_INDIRECT },
  { sb_res_impl     , "RES 4,A"       , "----", 1,2, 2, SB_OP_4, SB_OP_A },
  { sb_res_impl     , "RES 5,B"       , "----", 1,2, 2, SB_OP_5, SB_OP_B },
  { sb_res_impl     , "RES 5,C"       , "----", 1,2, 2, SB_OP_5, SB_OP_C },
  { sb_res_impl     , "RES 5,D"       , "----", 1,2, 2, SB_OP_5, SB_OP_D },
  { sb_res_impl     , "RES 5,E"       , "----", 1,2, 2, SB_OP_5, SB_OP_E },
  { sb_res_impl     , "RES 5,H"       , "----", 1,2, 2, SB_OP_5, SB_OP_H },
  { sb_res_impl     , "RES 5,L"       , "----", 1,2, 2, SB_OP_5, SB_OP_L },
  { sb_res_impl     , "RES 5,(HL)"    , "----", 1,4, 4, SB_OP_5, SB_OP_HL_INDIRECT },
  { sb_res_impl     , "RES 5,A"       , "----", 1,2, 2, SB_OP_5, SB_OP_A },
  { sb_res_impl     , "RES 6,B"       , "----", 1,2, 2, SB_OP_6, SB_OP_B },
  { sb_res_impl     , "RES 6,C"       , "----", 1,2, 2, SB_OP_6, SB_OP_C },
  { sb_res_impl     , "RES 6,D"       , "----", 1,2, 2, SB_OP_6, SB_OP_D },
  { sb_res_impl     , "RES 6,E"       , "----", 1,2, 2, SB_OP_6, SB_OP_E },
  { sb_res_impl     , "RES 6,H"       , "----", 1,2, 2, SB_OP_6, SB_OP_H },
  { sb_res_impl     , "RES 6,L"       , "----", 1,2, 2, SB_OP_6, SB_OP_L },
  { sb_res_impl     , "RES 6,(HL)"    , "----", 1,4, 4, SB_OP_6, SB_OP_HL_INDIRECT },
  { sb_res_impl     , "RES 6,A"       , "----", 1,2, 2, SB_OP_6, SB_OP_A },
  { sb_res_impl     , "RES 7,B"       , "----", 1,2, 2, SB_OP_7, SB_OP_B },
  { sb_res_impl     , "RES 7,C"       , "----", 1,2, 2, SB_OP_7, SB_OP_C },
  { sb_res_impl     , "RES 7,D"       , "----", 1,2, 2, SB_OP_7, SB_OP_D },
  { sb_res_impl     , "RES 7,E"       , "----", 1,2, 2, SB_OP_7, SB_OP_E },
  { sb_res_impl     , "RES 7,H"       , "----", 1,2, 2, SB_OP_7, SB_OP_H },
  { sb_res_impl     , "RES 7,L"       , "----", 1,2, 2, SB_OP_7, SB_OP_L },
  { sb_res_impl     , "RES 7,(HL)"    , "----", 1,4, 4, SB_OP_7, SB_OP_HL_INDIRECT },
  { sb_res_impl     , "RES 7,A"       , "----", 1,2, 2, SB_OP_7, SB_OP_A },
  { sb_set_impl     , "SET 0,B"       , "----", 1,2, 2, SB_OP_0, SB_OP_B },
  { sb_set_impl     , "SET 0,C"       , "----", 1,2, 2, SB_OP_0, SB_OP_C },
  { sb_set_impl     , "SET 0,D"       , "----", 1,2, 2, SB_OP_0, SB_OP_D },
  { sb_set_impl     , "SET 0,E"       , "----", 1,2, 2, SB_OP_0, SB_OP_E },
  { sb_set_impl     , "SET 0,H"       , "----", 1,2, 2, SB_OP_0, SB_OP_H },
  { sb_set_impl     , "SET 0,L"       , "----", 1,2, 2, SB_OP_0, SB_OP_L },
  { sb_set_impl     , "SET 0,(HL)"    , "----", 1,4, 4, SB_OP_0, SB_OP_HL_INDIRECT },
  { sb_set_impl     , "SET 0,A"       , "----", 1,2, 2, SB_OP_0, SB_OP_A },
  { sb_set_impl     , "SET 1,B"       , "----", 1,2, 2, SB_OP_1, SB_OP_B },
  { sb_set_impl     , "SET 1,C"       , "----", 1,2, 2, SB_OP_1, SB_OP_C },
  { sb_set_impl     , "SET 1,D"       , "----", 1,2, 2, SB_OP_1, SB_OP_D },
  { sb_set_impl     , "SET 1,E"       , "----", 1,2, 2, SB_OP_1, SB_OP_E },
  { sb_set_impl     , "SET 1,H"       , "----", 1,2, 2, SB_OP_1, SB_OP_H },
  { sb_set_impl     , "SET 1,L"       , "----", 1,2, 2, SB_OP_1, SB_OP_L },
  { sb_set_impl     , "SET 1,(HL)"    , "----", 1,4, 4, SB_OP_1, SB_OP_HL_INDIRECT },
  { sb_set_impl     , "SET 1,A"       , "----", 1,2, 2, SB_OP_1, SB_OP_A },
  { sb_set_impl     , "SET 2,B"       , "----", 1,2, 2, SB_OP_2, SB_OP_B },
  { sb_set_impl     , "SET 2,C"       , "----", 1,2, 2, SB_OP_2, SB_OP_C },
  { sb_set_impl     , "SET 2,D"       , "----", 1,2, 2, SB_OP_2, SB_OP_D },
  { sb_set_impl     , "SET 2,E"       , "----", 1,2, 2, SB_OP_2, SB_OP_E },
  { sb_set_impl     , "SET 2,H"       , "----", 1,2, 2, SB_OP_2, SB_OP_H },
  { sb_set_impl     , "SET 2,L"       , "----", 1,2, 2, SB_OP_2, SB_OP_L },
  { sb_set_impl     , "SET 2,(HL)"    , "----", 1,4, 4, SB_OP_2, SB_OP_HL_INDIRECT },
  { sb_set_impl     , "SET 2,A"       , "----", 1,2, 2, SB_OP_2, SB_OP_A },
  { sb_set_impl     , "SET 3,B"       , "----", 1,2, 2, SB_OP_3, SB_OP_B },
  { sb_set_impl     , "SET 3,C"       , "----", 1,2, 2, SB_OP_3, SB_OP_C },
  { sb_set_impl     , "SET 3,D"       , "----", 1,2, 2, SB_OP_3, SB_OP_D },
  { sb_set_impl     , "SET 3,E"       , "----", 1,2, 2, SB_OP_3, SB_OP_E },
  { sb_set_impl     , "SET 3,H"       , "----", 1,2, 2, SB_OP_3, SB_OP_H },
  { sb_set_impl     , "SET 3,L"       , "----", 1,2, 2, SB_OP_3, SB_OP_L },
  { sb_set_impl     , "SET 3,(HL)"    , "----", 1,4, 4, SB_OP_3, SB_OP_HL_INDIRECT },
  { sb_set_impl     , "SET 3,A"       , "----", 1,2, 2, SB_OP_3, SB_OP_A },
  { sb_set_impl     , "SET 4,B"       , "----", 1,2, 2, SB_OP_4, SB_OP_B },
  { sb_set_impl     , "SET 4,C"       , "----", 1,2, 2, SB_OP_4, SB_OP_C },
  { sb_set_impl     , "SET 4,D"       , "----", 1,2, 2, SB_OP_4, SB_OP_D },
  { sb_set_impl     , "SET 4,E"       , "----", 1,2, 2, SB_OP_4, SB_OP_E },
  { sb_set_impl     , "SET 4,H"       , "----", 1,2, 2, SB_OP_4, SB_OP_H },
  { sb_set_impl     , "SET 4,L"       , "----", 1,2, 2, SB_OP_4, SB_OP_L },
  { sb_set_impl     , "SET 4,(HL)"    , "----", 1,4, 4, SB_OP_4, SB_OP_HL_INDIRECT },
  { sb_set_impl     , "SET 4,A"       , "----", 1,2, 2, SB_OP_4, SB_OP_A },
  { sb_set_impl     , "SET 5,B"       , "----", 1,2, 2, SB_OP_5, SB_OP_B },
  { sb_set_impl     , "SET 5,C"       , "----", 1,2, 2, SB_OP_5, SB_OP_C },
  { sb_set_impl     , "SET 5,D"       , "----", 1,2, 2, SB_OP_5, SB_OP_D },
  { sb_set_impl     , "SET 5,E"       , "----", 1,2, 2, SB_OP_5, SB_OP_E },
  { sb_set_impl     , "SET 5,H"       , "----", 1,2, 2, SB_OP_5, SB_OP_H },
  { sb_set_impl     , "SET 5,L"       , "----", 1,2, 2, SB_OP_5, SB_OP_L },
  { sb_set_impl     , "SET 5,(HL)"    , "----", 1,4, 4, SB_OP_5, SB_OP_HL_INDIRECT },
  { sb_set_impl     , "SET 5,A"       , "----", 1,2, 2, SB_OP_5, SB_OP_A },
  { sb_set_impl     , "SET 6,B"       , "----", 1,2, 2, SB_OP_6, SB_OP_B },
  { sb_set_impl     , "SET 6,C"       , "----", 1,2, 2, SB_OP_6, SB_OP_C },
  { sb_set_impl     , "SET 6,D"       , "----", 1,2, 2, SB_OP_6, SB_OP_D },
  { sb_set_impl     , "SET 6,E"       , "----", 1,2, 2, SB_OP_6, SB_OP_E },
  { sb_set_impl     , "SET 6,H"       , "----", 1,2, 2, SB_OP_6, SB_OP_H },
  { sb_set_impl     , "SET 6,L"       , "----", 1,2, 2, SB_OP_6, SB_OP_L },
  { sb_set_impl     , "SET 6,(HL)"    , "----", 1,4, 4, SB_OP_6, SB_OP_HL_INDIRECT },
  { sb_set_impl     , "SET 6,A"       , "----", 1,2, 2, SB_OP_6, SB_OP_A },
  { sb_set_impl     , "SET 7,B"       , "----", 1,2, 2, SB_OP_7, SB_OP_B },
  { sb_set_impl     , "SET 7,C"       , "----", 1,2, 2, SB_OP_7, SB_OP_C },
  { sb_set_impl     , "SET 7,D"       , "----", 1,2, 2, SB_OP_7, SB_OP_D },
  { sb_set_impl     , "SET 7,E"       , "----", 1,2, 2, SB_OP_7, SB_OP_E },
  { sb_set_impl     , "SET 7,H"       , "----", 1,2, 2, SB_OP_7, SB_OP_H },
  { sb_set_impl     , "SET 7,L"       , "----", 1,2, 2, SB_OP_7, SB_OP_L },
  { sb_set_impl     , "SET 7,(HL)"    , "----", 1,4, 4, SB_OP_7, SB_OP_HL_INDIRECT },
  { sb_set_impl     , "SET 7,A"       , "----", 1,2, 2, SB_OP_7, SB_OP_A },

};
#endif
