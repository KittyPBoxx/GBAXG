{"mappings":"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","sources":["dist/IodineGBA/core/graphics/ColorEffects.js"],"sourcesContent":["\"use strict\";\n/*\n Copyright (C) 2012-2016 Grant Galitz\n\n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction GameBoyAdvanceColorEffectsRenderer(buffer) {\n    this.effectsTarget1 = 0;\n    this.colorEffectsType = 0;\n    this.effectsTarget2 = 0;\n    this.initialize(buffer);\n}\nif (typeof SIMD == \"object\" && typeof SIMD.Int32x4 == \"function\") {\n    //SIMD support found, insert the optimized SIMD path in:\n    GameBoyAdvanceColorEffectsRenderer.prototype.initialize = function (buffer) {\n        this.alphaBlendAmountTarget1 = SIMD.Int32x4.splat(0);\n        this.alphaBlendAmountTarget2 = SIMD.Int32x4.splat(0);\n        this.brightnessEffectAmount = SIMD.Int32x4.splat(0);\n        this.brightnessEffectAmountReverse = SIMD.Int32x4.splat(0x10);\n        this.buffer = buffer;\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.pixelMask = SIMD.Int32x4.splat(0x1F);\n    GameBoyAdvanceColorEffectsRenderer.prototype.temporaryPixelBuffer = new Int32Array(4);\n    GameBoyAdvanceColorEffectsRenderer.prototype.alphaBlend = function (topPixel, lowerPixel) {\n        topPixel = topPixel | 0;\n        lowerPixel = lowerPixel | 0;\n        var p1 = SIMD.Int32x4(topPixel >> 10, topPixel >> 5, topPixel, 0);\n        var p2 = SIMD.Int32x4(lowerPixel >> 10, lowerPixel >> 5, lowerPixel, 0);\n        p1 = SIMD.Int32x4.and(p1, this.pixelMask);\n        p2 = SIMD.Int32x4.and(p2, this.pixelMask);\n        p1 = SIMD.Int32x4.mul(p1, this.alphaBlendAmountTarget1);\n        p2 = SIMD.Int32x4.mul(p2, this.alphaBlendAmountTarget2);\n        var presult = SIMD.Int32x4.add(p1, p2);\n        presult = SIMD.Int32x4.shiftRightByScalar(presult, 4);\n        var selectMask = SIMD.Int32x4.lessThanOrEqual(presult, this.pixelMask);\n        presult = SIMD.Int32x4.select(selectMask, presult, this.pixelMask);\n        SIMD.Int32x4.store(this.temporaryPixelBuffer, 0, presult);\n        return (this.temporaryPixelBuffer[0] << 10) | (this.temporaryPixelBuffer[1] << 5) | this.temporaryPixelBuffer[2];\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.brightnessIncrease = function (topPixel) {\n        topPixel = topPixel | 0;\n        var p1 = SIMD.Int32x4(topPixel >> 10, topPixel >> 5, topPixel, 0);\n        p1 = SIMD.Int32x4.and(p1, this.pixelMask);\n        var pTemp = SIMD.Int32x4.sub(this.pixelMask, p1);\n        pTemp = SIMD.Int32x4.mul(pTemp, this.brightnessEffectAmount);\n        pTemp = SIMD.Int32x4.shiftRightByScalar(pTemp, 4);\n        p1 = SIMD.Int32x4.add(p1, pTemp);\n        SIMD.Int32x4.store(this.temporaryPixelBuffer, 0, p1);\n        return (this.temporaryPixelBuffer[0] << 10) | (this.temporaryPixelBuffer[1] << 5) | this.temporaryPixelBuffer[2];\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.brightnessDecrease = function (topPixel) {\n        topPixel = topPixel | 0;\n        var p1 = SIMD.Int32x4(topPixel >> 10, topPixel >> 5, topPixel, 0);\n        p1 = SIMD.Int32x4.and(p1, this.pixelMask);\n        p1 = SIMD.Int32x4.mul(p1, this.brightnessEffectAmountReverse);\n        p1 = SIMD.Int32x4.shiftRightByScalar(p1, 4);\n        SIMD.Int32x4.store(this.temporaryPixelBuffer, 0, p1);\n        return (this.temporaryPixelBuffer[0] << 10) | (this.temporaryPixelBuffer[1] << 5) | this.temporaryPixelBuffer[2];\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDALPHA8_0 = function (data) {\n        data = data | 0;\n        var alphaBlendAmountTarget1Scratch = data & 0x1F;\n        this.alphaBlendAmountTarget1 = SIMD.Int32x4.splat(Math.min(alphaBlendAmountTarget1Scratch | 0, 0x10) | 0);\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDALPHA8_1 = function (data) {\n        data = data | 0;\n        var alphaBlendAmountTarget2Scratch = data & 0x1F;\n        this.alphaBlendAmountTarget2 = SIMD.Int32x4.splat(Math.min(alphaBlendAmountTarget2Scratch | 0, 0x10) | 0);\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDALPHA16 = function (data) {\n        data = data | 0;\n        var alphaBlendAmountTarget1Scratch = data & 0x1F;\n        this.alphaBlendAmountTarget1 = SIMD.Int32x4.splat(Math.min(alphaBlendAmountTarget1Scratch | 0, 0x10) | 0);\n        var alphaBlendAmountTarget2Scratch = (data >> 8) & 0x1F;\n        this.alphaBlendAmountTarget2 = SIMD.Int32x4.splat(Math.min(alphaBlendAmountTarget2Scratch | 0, 0x10) | 0);\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDCNT32 = function (data) {\n        data = data | 0;\n        //Select target 1 and color effects mode:\n        this.effectsTarget1 = (data & 0x3F) << 16;\n        this.colorEffectsType = (data >> 6) & 0x3;\n        //Select target 2:\n        this.effectsTarget2 = (data & 0x3F00) << 8;\n        var alphaBlendAmountTarget1Scratch = (data >> 16) & 0x1F;\n        this.alphaBlendAmountTarget1 = SIMD.Int32x4.splat(Math.min(alphaBlendAmountTarget1Scratch | 0, 0x10) | 0);\n        var alphaBlendAmountTarget2Scratch = (data >> 24) & 0x1F;\n        this.alphaBlendAmountTarget2 = SIMD.Int32x4.splat(Math.min(alphaBlendAmountTarget2Scratch | 0, 0x10) | 0);\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDY8 = function (data) {\n        data = data | 0;\n        var data = Math.min(data & 0x1F, 0x10) | 0;\n        this.brightnessEffectAmount = SIMD.Int32x4.splat(data | 0);\n        this.brightnessEffectAmountReverse = SIMD.Int32x4.splat((0x10 - (data | 0)) | 0);\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.processFullNormalEffectsNoSprites = function () {\n        for (var index = 0; (index | 0) < 240; index = ((index | 0) + 4) | 0) {\n            this.buffer[index | 0] = this.processPixelNormal(this.buffer[index | 0x700] | 0, this.buffer[index | 0x800] | 0);\n            this.buffer[index | 1] = this.processPixelNormal(this.buffer[index | 0x701] | 0, this.buffer[index | 0x801] | 0);\n            this.buffer[index | 2] = this.processPixelNormal(this.buffer[index | 0x702] | 0, this.buffer[index | 0x802] | 0);\n            this.buffer[index | 3] = this.processPixelNormal(this.buffer[index | 0x703] | 0, this.buffer[index | 0x803] | 0);\n        }\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.processWindowNormalEffectsNoSprites = function (xStart, xEnd) {\n        xStart = xStart | 0;\n        xEnd = xEnd | 0;\n        while ((xStart | 0) < (xEnd | 0)) {\n            this.buffer[xStart | 0] = this.processPixelNormal(this.buffer[xStart | 0x700] | 0, this.buffer[xStart | 0x800] | 0);\n            xStart = ((xStart | 0) + 1) | 0;\n        }\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.processFullNormalEffectsWithSprites = function () {\n        for (var index = 0; (index | 0) < 240; index = ((index | 0) + 4) | 0) {\n            this.buffer[index | 0] = this.processPixelTestFull(this.buffer[index | 0x700] | 0, this.buffer[index | 0x800] | 0);\n            this.buffer[index | 1] = this.processPixelTestFull(this.buffer[index | 0x701] | 0, this.buffer[index | 0x801] | 0);\n            this.buffer[index | 2] = this.processPixelTestFull(this.buffer[index | 0x702] | 0, this.buffer[index | 0x802] | 0);\n            this.buffer[index | 3] = this.processPixelTestFull(this.buffer[index | 0x703] | 0, this.buffer[index | 0x803] | 0);\n        }\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.processWindowNormalEffectsWithSprites = function (xStart, xEnd) {\n        xStart = xStart | 0;\n        xEnd = xEnd | 0;\n        while ((xStart | 0) < (xEnd | 0)) {\n            this.buffer[xStart | 0] = this.processPixelTestFull(this.buffer[xStart | 0x700] | 0, this.buffer[xStart | 0x800] | 0);\n            xStart = ((xStart | 0) + 1) | 0;\n        }\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.processFullNoEffectsWithSprites = function () {\n        for (var index = 0; (index | 0) < 240; index = ((index | 0) + 4) | 0) {\n            this.buffer[index | 0] = this.processPixelTestSprite(this.buffer[index | 0x700] | 0, this.buffer[index | 0x800] | 0);\n            this.buffer[index | 1] = this.processPixelTestSprite(this.buffer[index | 0x701] | 0, this.buffer[index | 0x801] | 0);\n            this.buffer[index | 2] = this.processPixelTestSprite(this.buffer[index | 0x702] | 0, this.buffer[index | 0x802] | 0);\n            this.buffer[index | 3] = this.processPixelTestSprite(this.buffer[index | 0x703] | 0, this.buffer[index | 0x803] | 0);\n        }\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.processWindowNoEffectsWithSprites = function (xStart, xEnd) {\n        xStart = xStart | 0;\n        xEnd = xEnd | 0;\n        while ((xStart | 0) < (xEnd | 0)) {\n            this.buffer[xStart | 0] = this.processPixelTestSprite(this.buffer[xStart | 0x700] | 0, this.buffer[xStart | 0x800] | 0);\n            xStart = ((xStart | 0) + 1) | 0;\n        }\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.processPixelTestFull = function (lowerPixel, currentPixel) {\n        lowerPixel = lowerPixel | 0;\n        currentPixel = currentPixel | 0;\n        if ((currentPixel & 0x400000) == 0) {\n            return this.processPixelNormal(lowerPixel | 0, currentPixel | 0) | 0;\n        }\n        else {\n            return this.processPixelSprite(lowerPixel | 0, currentPixel | 0) | 0;\n        }\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.processPixelTestSprite = function (lowerPixel, currentPixel) {\n        lowerPixel = lowerPixel | 0;\n        currentPixel = currentPixel | 0;\n        if ((currentPixel & 0x400000) == 0) {\n            return currentPixel | 0;\n        }\n        else {\n            return this.processPixelSprite(lowerPixel | 0, currentPixel | 0) | 0;\n        }\n    }\n}\nelse {\n    //No SIMD support found, use the scalar path instead:\n    GameBoyAdvanceColorEffectsRenderer.prototype.initialize = function (buffer) {\n        this.alphaBlendAmountTarget1 = 0;\n        this.alphaBlendAmountTarget2 = 0;\n        this.brightnessEffectAmount = 0;\n    }\n    if (typeof Math.imul == \"function\") {\n        //Math.imul found, insert the optimized path in:\n        GameBoyAdvanceColorEffectsRenderer.prototype.alphaBlend = function (topPixel, lowerPixel) {\n            topPixel = topPixel | 0;\n            lowerPixel = lowerPixel | 0;\n            var b1 = (topPixel >> 10) & 0x1F;\n            var g1 = (topPixel >> 5) & 0x1F;\n            var r1 = topPixel & 0x1F;\n            var b2 = (lowerPixel >> 10) & 0x1F;\n            var g2 = (lowerPixel >> 5) & 0x1F;\n            var r2 = lowerPixel & 0x1F;\n            b1 = Math.imul(b1 | 0, this.alphaBlendAmountTarget1 | 0) | 0;\n            g1 = Math.imul(g1 | 0, this.alphaBlendAmountTarget1 | 0) | 0;\n            r1 = Math.imul(r1 | 0, this.alphaBlendAmountTarget1 | 0) | 0;\n            b2 = Math.imul(b2 | 0, this.alphaBlendAmountTarget2 | 0) | 0;\n            g2 = Math.imul(g2 | 0, this.alphaBlendAmountTarget2 | 0) | 0;\n            r2 = Math.imul(r2 | 0, this.alphaBlendAmountTarget2 | 0) | 0;\n            //Keep this not inlined in the return, firefox 22 grinds on it:\n            var b = Math.min(((b1 | 0) + (b2 | 0)) >> 4, 0x1F) | 0;\n            var g = Math.min(((g1 | 0) + (g2 | 0)) >> 4, 0x1F) | 0;\n            var r = Math.min(((r1 | 0) + (r2 | 0)) >> 4, 0x1F) | 0;\n            return (b << 10) | (g << 5) | r;\n        }\n        GameBoyAdvanceColorEffectsRenderer.prototype.brightnessIncrease = function (topPixel) {\n            topPixel = topPixel | 0;\n            var b1 = (topPixel >> 10) & 0x1F;\n            var g1 = (topPixel >> 5) & 0x1F;\n            var r1 = topPixel & 0x1F;\n            b1 = ((b1 | 0) + (Math.imul((0x1F - (b1 | 0)) | 0, this.brightnessEffectAmount | 0) >> 4)) | 0;\n            g1 = ((g1 | 0) + (Math.imul((0x1F - (g1 | 0)) | 0, this.brightnessEffectAmount | 0) >> 4)) | 0;\n            r1 = ((r1 | 0) + (Math.imul((0x1F - (r1 | 0)) | 0, this.brightnessEffectAmount | 0) >> 4)) | 0;\n            return (b1 << 10) | (g1 << 5) | r1;\n        }\n        GameBoyAdvanceColorEffectsRenderer.prototype.brightnessDecrease = function (topPixel) {\n            topPixel = topPixel | 0;\n            var b1 = (topPixel >> 10) & 0x1F;\n            var g1 = (topPixel >> 5) & 0x1F;\n            var r1 = topPixel & 0x1F;\n            var decreaseMultiplier = (0x10 - (this.brightnessEffectAmount | 0)) | 0;\n            b1 = Math.imul(b1 | 0, decreaseMultiplier | 0) >> 4;\n            g1 = Math.imul(g1 | 0, decreaseMultiplier | 0) >> 4;\n            r1 = Math.imul(r1 | 0, decreaseMultiplier | 0) >> 4;\n            return (b1 << 10) | (g1 << 5) | r1;\n        }\n    }\n    else {\n        //Math.imul not found, use the compatibility method:\n        GameBoyAdvanceColorEffectsRenderer.prototype.alphaBlend = function (topPixel, lowerPixel) {\n            topPixel = topPixel | 0;\n            lowerPixel = lowerPixel | 0;\n            var b1 = (topPixel >> 10) & 0x1F;\n            var g1 = (topPixel >> 5) & 0x1F;\n            var r1 = (topPixel & 0x1F);\n            var b2 = (lowerPixel >> 10) & 0x1F;\n            var g2 = (lowerPixel >> 5) & 0x1F;\n            var r2 = lowerPixel & 0x1F;\n            b1 = b1 * this.alphaBlendAmountTarget1;\n            g1 = g1 * this.alphaBlendAmountTarget1;\n            r1 = r1 * this.alphaBlendAmountTarget1;\n            b2 = b2 * this.alphaBlendAmountTarget2;\n            g2 = g2 * this.alphaBlendAmountTarget2;\n            r2 = r2 * this.alphaBlendAmountTarget2;\n            return (Math.min((b1 + b2) >> 4, 0x1F) << 10) | (Math.min((g1 + g2) >> 4, 0x1F) << 5) | Math.min((r1 + r2) >> 4, 0x1F);\n        }\n        GameBoyAdvanceColorEffectsRenderer.prototype.brightnessIncrease = function (topPixel) {\n            topPixel = topPixel | 0;\n            var b1 = (topPixel >> 10) & 0x1F;\n            var g1 = (topPixel >> 5) & 0x1F;\n            var r1 = topPixel & 0x1F;\n            b1 += ((0x1F - b1) * this.brightnessEffectAmount) >> 4;\n            g1 += ((0x1F - g1) * this.brightnessEffectAmount) >> 4;\n            r1 += ((0x1F - r1) * this.brightnessEffectAmount) >> 4;\n            return (b1 << 10) | (g1 << 5) | r1;\n        }\n        GameBoyAdvanceColorEffectsRenderer.prototype.brightnessDecrease = function (topPixel) {\n            topPixel = topPixel | 0;\n            var b1 = (topPixel >> 10) & 0x1F;\n            var g1 = (topPixel >> 5) & 0x1F;\n            var r1 = topPixel & 0x1F;\n            var decreaseMultiplier = 0x10 - this.brightnessEffectAmount;\n            b1 = (b1 * decreaseMultiplier) >> 4;\n            g1 = (g1 * decreaseMultiplier) >> 4;\n            r1 = (r1 * decreaseMultiplier) >> 4;\n            return (b1 << 10) | (g1 << 5) | r1;\n        }\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDALPHA8_0 = function (data) {\n        data = data | 0;\n        var alphaBlendAmountTarget1Scratch = data & 0x1F;\n        this.alphaBlendAmountTarget1 = Math.min(alphaBlendAmountTarget1Scratch | 0, 0x10) | 0;\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDALPHA8_1 = function (data) {\n        data = data | 0;\n        var alphaBlendAmountTarget2Scratch = data & 0x1F;\n        this.alphaBlendAmountTarget2 = Math.min(alphaBlendAmountTarget2Scratch | 0, 0x10) | 0;\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDALPHA16 = function (data) {\n        data = data | 0;\n        var alphaBlendAmountTarget1Scratch = data & 0x1F;\n        this.alphaBlendAmountTarget1 = Math.min(alphaBlendAmountTarget1Scratch | 0, 0x10) | 0;\n        var alphaBlendAmountTarget2Scratch = (data >> 8) & 0x1F;\n        this.alphaBlendAmountTarget2 = Math.min(alphaBlendAmountTarget2Scratch | 0, 0x10) | 0;\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDCNT32 = function (data) {\n        data = data | 0;\n        //Select target 1 and color effects mode:\n        this.effectsTarget1 = (data & 0x3F) << 16;\n        this.colorEffectsType = (data >> 6) & 0x3;\n        //Select target 2:\n        this.effectsTarget2 = (data & 0x3F00) << 8;\n        var alphaBlendAmountTarget1Scratch = (data >> 16) & 0x1F;\n        this.alphaBlendAmountTarget1 = Math.min(alphaBlendAmountTarget1Scratch | 0, 0x10) | 0;\n        var alphaBlendAmountTarget2Scratch = (data >> 24) & 0x1F;\n        this.alphaBlendAmountTarget2 = Math.min(alphaBlendAmountTarget2Scratch | 0, 0x10) | 0;\n    }\n    GameBoyAdvanceColorEffectsRenderer.prototype.writeBLDY8 = function (data) {\n        data = data | 0;\n        this.brightnessEffectAmount = Math.min(data & 0x1F, 0x10) | 0;\n    }\n}\nGameBoyAdvanceColorEffectsRenderer.prototype.processPixelNormal = function (lowerPixel, topPixel) {\n    lowerPixel = lowerPixel | 0;\n    topPixel = topPixel | 0;\n    if (((topPixel | 0) & (this.effectsTarget1 | 0)) != 0) {\n        switch (this.colorEffectsType | 0) {\n            case 1:\n                if (((lowerPixel | 0) & (this.effectsTarget2 | 0)) != 0 && (topPixel | 0) != (lowerPixel | 0)) {\n                    return this.alphaBlend(topPixel | 0, lowerPixel | 0) | 0;\n                }\n                break;\n            case 2:\n                return this.brightnessIncrease(topPixel | 0) | 0;\n            case 3:\n                return this.brightnessDecrease(topPixel | 0) | 0;\n        }\n    }\n    return topPixel | 0;\n}\nGameBoyAdvanceColorEffectsRenderer.prototype.processPixelSprite = function (lowerPixel, topPixel) {\n    lowerPixel = lowerPixel | 0;\n    topPixel = topPixel | 0;\n    if (((lowerPixel | 0) & (this.effectsTarget2 | 0)) != 0) {\n        return this.alphaBlend(topPixel | 0, lowerPixel | 0) | 0;\n    }\n    else if (((topPixel | 0) & (this.effectsTarget1 | 0)) != 0) {\n        switch (this.colorEffectsType | 0) {\n            case 2:\n                return this.brightnessIncrease(topPixel | 0) | 0;\n            case 3:\n                return this.brightnessDecrease(topPixel | 0) | 0;\n        }\n    }\n    return topPixel | 0;\n}\nGameBoyAdvanceColorEffectsRenderer.prototype.writeBLDCNT8_0 = function (data) {\n    data = data | 0;\n    //Select target 1 and color effects mode:\n    this.effectsTarget1 = (data & 0x3F) << 16;\n    this.colorEffectsType = data >> 6;\n}\nGameBoyAdvanceColorEffectsRenderer.prototype.writeBLDCNT8_1 = function (data) {\n    data = data | 0;\n    //Select target 2:\n    this.effectsTarget2 = (data & 0x3F) << 16;\n}\nGameBoyAdvanceColorEffectsRenderer.prototype.writeBLDCNT16 = function (data) {\n    data = data | 0;\n    //Select target 1 and color effects mode:\n    this.effectsTarget1 = (data & 0x3F) << 16;\n    this.colorEffectsType = (data >> 6) & 0x3;\n    //Select target 2:\n    this.effectsTarget2 = (data & 0x3F00) << 8;\n}\n"],"names":["GameBoyAdvanceColorEffectsRenderer","buffer","this","effectsTarget1","colorEffectsType","effectsTarget2","initialize","SIMD","Int32x4","prototype","alphaBlendAmountTarget1","splat","alphaBlendAmountTarget2","brightnessEffectAmount","brightnessEffectAmountReverse","pixelMask","temporaryPixelBuffer","Int32Array","alphaBlend","topPixel","lowerPixel","p1","p2","and","mul","presult","add","shiftRightByScalar","selectMask","lessThanOrEqual","select","store","brightnessIncrease","pTemp","sub","brightnessDecrease","writeBLDALPHA8_0","data","alphaBlendAmountTarget1Scratch","Math","min","writeBLDALPHA8_1","alphaBlendAmountTarget2Scratch","writeBLDALPHA16","writeBLDCNT32","writeBLDY8","processFullNormalEffectsNoSprites","index","processPixelNormal","processWindowNormalEffectsNoSprites","xStart","xEnd","processFullNormalEffectsWithSprites","processPixelTestFull","processWindowNormalEffectsWithSprites","processFullNoEffectsWithSprites","processPixelTestSprite","processWindowNoEffectsWithSprites","currentPixel","processPixelSprite","imul","b1","g1","r1","b2","g2","r2","decreaseMultiplier","writeBLDCNT8_0","writeBLDCNT8_1","writeBLDCNT16"],"version":3,"file":"index.24c915ba.js.map"}