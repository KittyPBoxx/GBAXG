{"mappings":"AAGC,SAASA,gBACNC,KAAKC,UAAY,GACjBD,KAAKE,mBAAqB,IAAIC,GAClC,CA4EA,SAASC,cAAcC,EAAMC,EAAQC,GACjCP,KAAKK,KAAOA,EACZL,KAAKM,OAASA,EACdN,KAAKO,KAAOA,CAChB,CAgBA,SAASC,mBAAmBD,GACxB,IAAIE,EAAgB,GAKhB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAK,GAIvB,IAASD,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAKJ,EAAKG,EAAK,IAIjC,IAASA,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAKJ,EAAKG,EAAK,KAIjC,IAASA,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAK,GAMvB,IAASD,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAK,GAIvB,IAASD,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAKJ,EAAKG,EAAK,KAIjC,IAASA,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAKJ,EAAKG,EAAK,KAIjC,IAASA,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAK,GAMvB,IAASD,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAK,GAIvB,IAASD,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAKJ,EAAKG,EAAK,MAIjC,IAASA,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAKJ,EAAKG,EAAK,MAIjC,IAASA,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAK,GAMvB,IAASD,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAK,GAIvB,IAASD,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAKJ,EAAKG,EAAK,MAIjC,IAASA,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAKJ,EAAKG,EAAK,MAIjC,IAASA,EAAI,EAAGA,EAAI,GAAOA,IACvBD,EAAcE,KAAK,GAG3B,OAAOF,CACX,CA1LAV,cAAca,UAAUC,SAAW,SAASC,GACxC,IAAIC,EAAMC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,IAE/DO,EAAkBtB,KAAKuB,mBAAmBT,GAG9C,GAAIQ,EAAkBtB,KAAKC,UAAUuB,OAAST,EAAIS,OAAQ,CAGtD,IAAIC,EAAc,IAAIC,WAAWJ,EAAkBtB,KAAKC,UAAUuB,QAClEC,EAAYE,IAAIZ,GAChBU,EAAYE,IAAI3B,KAAKC,UAAWqB,GAEhCN,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASc,UAAYN,EAAkBtB,KAAKC,UAAUuB,OACtGR,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,IAAOU,EAChET,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASe,MAAQC,cAAcd,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,KACxIC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASiB,MAAQC,aAAahB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,IAE3I,MAGIC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,IAAIY,IAAI3B,KAAKC,UAAWqB,GACjFN,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASe,MAAQC,cAAcd,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,KACxIC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASiB,MAAQC,aAAahB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,IAI/I,EAEAhB,cAAca,UAAUqB,gBAAkB,SAASC,EAAepB,GAE9D,OADgBd,KAAKE,mBAAmBmB,IAAIa,GAC3B5B,OAAS,UAAaN,KAAKuB,mBAAmBT,EACnE,EAEAf,cAAca,UAAUuB,cAAgB,SAAUrB,EAASsB,EAAYC,GACnE,IAAIC,EAAW,IAAIC,SAAS,IAAIC,YAAY,CAACH,IAASI,QAEtDzB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAAS4B,UAAUN,EAAYE,EAASK,SAAS,GAAG,IACpG3B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAAS4B,UAAUN,EAAa,EAAGE,EAASK,SAAS,GAAG,IACxG3B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAAS4B,UAAUN,EAAa,EAAGE,EAASK,SAAS,GAAG,IACxG3B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAAS4B,UAAUN,EAAa,EAAGE,EAASK,SAAS,GAAG,IAExG3B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASe,MAAQC,cAAcd,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,KACxIC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASiB,MAAQC,aAAahB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,IAC3I,EAEAhB,cAAca,UAAUgC,oBAAsB,SAAU9B,EAASsB,EAAY/B,GACzE,IAAIgC,EAASrC,KAAKiC,gBAAgB5B,EAAMS,GACxCd,KAAKmC,cAAcrB,EAASsB,EAAYC,EAC5C,EAEAtC,cAAca,UAAUiC,sBAAwB,SAASxC,EAAMS,EAASgC,EAAatB,EAAQuB,EAAY,MACrG,IAAIC,EAAeF,EACfG,EAAaD,EAAexB,EAC5BjB,EAAOS,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAIP,GAASC,IAAImC,MAAMF,EAAcC,GACxFF,IACAxC,EAAOwC,EAAUI,MAAM,KAAM,CAAC5C,KAElC,IAAID,EAASN,KAAKC,UAAUuB,OAC5BxB,KAAKC,UAAYD,KAAKC,UAAUmD,OAAOC,MAAMC,KAAK/C,IAClDP,KAAKE,mBAAmByB,IAAItB,EAAM,IAAID,cAAcC,EAAMC,EAAQ+C,MAAMC,KAAK/C,IACjF,EAEAR,cAAca,UAAU2C,sBAAwB,SAASlD,EAAME,GAC3D,IAAID,EAASN,KAAKC,UAAUuB,OAC5BxB,KAAKC,UAAYD,KAAKC,UAAUmD,OAAOC,MAAMC,KAAK/C,IAClDP,KAAKE,mBAAmByB,IAAItB,EAAM,IAAID,cAAcC,EAAMC,EAAQ+C,MAAMC,KAAK/C,IACjF,EAEAR,cAAca,UAAUW,mBAAqB,SAAUT,GAEnD,OAAO,QACX,EAQAV,cAAcQ,UAAU4C,UAAY,WAChC,OAAOxD,KAAKO,KAAKiB,MACrB,EA0GA,IAAIiC,IAAM,KACNC,MAAQ,KACZC,eAAeC,qBAEX,IAAK5C,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MACjD,OAIJ,IAAIwC,EAAmB7C,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMN,IAAI,KAEtE,MAAP0C,MACAA,IAAM,IAAI1D,cACV2D,MAAQ,IAAI3D,cAMZ0D,IAAIF,sBAAsB,cAAeO,cACzCJ,MAAMH,sBAAsB,cAAeQ,eAU3CC,OAAOC,KAAKC,8BAA8BC,SAAQC,IAC9C,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,WAAauB,EAAG,KAAMC,EAAiBH,6BAA6BE,GAAM,UAAY,QAGpHJ,OAAOC,KAAKM,6BAA6BJ,SAAQC,IAC7C,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,UAAYuB,EAAG,KAAMC,EAAiBE,4BAA4BH,GAAM,UAAY,QAIlHJ,OAAOC,KAAKO,8BAA8BL,SAAQC,IAC9C,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,gBAAkBuB,EAAG,KAAMC,EAAiBG,6BAA6BJ,GAAM,UAAY,QAGzHJ,OAAOC,KAAKQ,6BAA6BN,SAAQC,IAC7C,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,eAAiBuB,EAAG,KAAMC,EAAiBI,4BAA4BL,GAAM,UAAY,QAIvHJ,OAAOC,KAAKS,8BAA8BP,SAAQC,IAC9C,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,gBAAkBuB,EAAG,KAAMC,EAAiBK,6BAA6BN,GAAM,UAAY,IAAK5D,mBAAA,IAG9HwD,OAAOC,KAAKU,6BAA6BR,SAAQC,IAC7C,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,eAAiBuB,EAAG,KAAMC,EAAiBM,4BAA4BP,GAAM,UAAY,IAAK5D,mBAAA,IAI5HwD,OAAOC,KAAKW,6BAA6BT,SAAQC,IAC7C,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,eAAiBuB,EAAG,KAAMC,EAAiBO,4BAA4BR,GAAM,UAAY,IAAK5D,mBAAA,IAG5HwD,OAAOC,KAAKY,4BAA4BV,SAAQC,IAC5C,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,cAAgBuB,EAAG,KAAMC,EAAiBQ,2BAA2BT,GAAM,UAAY,IAAK5D,mBAAA,IAI1HwD,OAAOC,KAAKa,iCAAiCX,SAAQC,IACjD,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,mBAAqBuB,EAAG,KAAMC,EAAiBS,gCAAgCV,GAAM,UAAY,QAG/HJ,OAAOC,KAAKc,gCAAgCZ,SAAQC,IAChD,IAAIC,EAAgB,EAChBR,IACAQ,EAAgBC,4BAEpBb,IAAIZ,sBAAsB,kBAAoBuB,EAAG,KAAMC,EAAiBU,+BAA+BX,GAAM,UAAY,QAI7HJ,OAAOC,KAAKe,oBAAoBb,SAAQC,IACpCX,IAAIZ,sBAAsB,gBAAkBuB,EAAG,KAAMY,mBAAoBZ,GAAM,UAAYa,0BAAA,KAI/FjE,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,OAGhD2C,OAAOC,KAAKiB,6BAA6Bf,SAAQC,IAC7CX,IAAIb,oBAAoB,IAAKsC,4BAA4Bd,GAAK,UAAY,WAAaA,EAAA,IAE3FJ,OAAOC,KAAKkB,4BAA4BhB,SAAQC,IAC5CX,IAAIb,oBAAoB,IAAKuC,2BAA2Bf,GAAK,UAAY,UAAYA,EAAA,IAEzFJ,OAAOC,KAAKmB,6BAA6BjB,SAAQC,IAC7CX,IAAIb,oBAAoB,IAAKwC,4BAA4BhB,GAAK,UAAY,gBAAkBA,EAAA,IAEhGJ,OAAOC,KAAKoB,4BAA4BlB,SAAQC,IAC5CX,IAAIb,oBAAoB,IAAKyC,2BAA2BjB,GAAK,UAAY,eAAiBA,EAAA,IAE9FJ,OAAOC,KAAKqB,6BAA6BnB,SAAQC,IAC7CX,IAAIb,oBAAoB,IAAK0C,4BAA4BlB,GAAK,UAAY,gBAAkBA,EAAA,IAEhGJ,OAAOC,KAAKsB,4BAA4BpB,SAAQC,IAC5CX,IAAIb,oBAAoB,IAAK2C,2BAA2BnB,GAAK,UAAY,eAAiBA,EAAA,IAE9FJ,OAAOC,KAAKuB,4BAA4BrB,SAAQC,IAC5CX,IAAIb,oBAAoB,IAAK4C,2BAA2BpB,GAAK,UAAY,eAAiBA,EAAA,IAE9FJ,OAAOC,KAAKwB,2BAA2BtB,SAAQC,IAC3CX,IAAIb,oBAAoB,IAAK6C,0BAA0BrB,GAAK,UAAY,cAAgBA,EAAA,IAE5FJ,OAAOC,KAAKyB,gCAAgCvB,SAAQC,IAChDX,IAAIb,oBAAoB,IAAK8C,+BAA+BtB,GAAK,UAAY,mBAAqBA,EAAA,IAEtGJ,OAAOC,KAAK0B,+BAA+BxB,SAAQC,IAC/CX,IAAIb,oBAAoB,IAAK+C,8BAA8BvB,GAAK,UAAY,kBAAoBA,EAAA,IAIpGJ,OAAOC,KAAK2B,mBAAmBzB,SAAQC,IACnCX,IAAIb,oBAAoB,IAAKgD,kBAAkBxB,GAAK,UAAY,gBAAkBA,EAAA,KAMtFpD,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,OAGhD2C,OAAOC,KAAKiB,6BAA6Bf,SAAQC,IAC7CX,IAAIb,oBAAoB,IAAKsC,4BAA4Bd,GAAK,UAAY,WAAaA,EAAA,IAE3FJ,OAAOC,KAAKkB,4BAA4BhB,SAAQC,IAC5CX,IAAIb,oBAAoB,IAAKuC,2BAA2Bf,GAAK,UAAY,UAAYA,EAAA,IAEzFJ,OAAOC,KAAKmB,6BAA6BjB,SAAQC,IAC7CX,IAAIb,oBAAoB,IAAKwC,4BAA4BhB,GAAK,UAAY,gBAAkBA,EAAA,IAEhGJ,OAAOC,KAAKoB,4BAA4BlB,SAAQC,IAC5CX,IAAIb,oBAAoB,IAAKyC,2BAA2BjB,GAAK,UAAY,eAAiBA,EAAA,IAE9FJ,OAAOC,KAAKqB,6BAA6BnB,SAAQC,IAC7CX,IAAIb,oBAAoB,IAAK0C,4BAA4BlB,GAAK,UAAY,gBAAkBA,EAAA,IAEhGJ,OAAOC,KAAKsB,4BAA4BpB,SAAQC,IAC5CX,IAAIb,oBAAoB,IAAK2C,2BAA2BnB,GAAK,UAAY,eAAiBA,EAAA,IAE9FJ,OAAOC,KAAKuB,4BAA4BrB,SAAQC,IAC5CX,IAAIb,oBAAoB,IAAK4C,2BAA2BpB,GAAK,UAAY,eAAiBA,EAAA,IAE9FJ,OAAOC,KAAKwB,2BAA2BtB,SAAQC,IAC3CX,IAAIb,oBAAoB,IAAK6C,0BAA0BrB,GAAK,UAAY,cAAgBA,EAAA,IAE5FJ,OAAOC,KAAKyB,gCAAgCvB,SAAQC,IAChDX,IAAIb,oBAAoB,IAAK8C,+BAA+BtB,GAAK,UAAY,mBAAqBA,EAAA,IAEtGJ,OAAOC,KAAK0B,+BAA+BxB,SAAQC,IAC/CX,IAAIb,oBAAoB,IAAK+C,8BAA8BvB,GAAK,UAAY,kBAAoBA,EAAA,IAIpGX,IAAItB,cAAc,IAAK0D,mCAAoC7E,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKyE,UAAUC,iCAC1HtC,IAAItB,cAAc,IAAK6D,+BAAgChF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKyE,UAAUG,kCAGtHjC,OAAOC,KAAKiC,mBAAmB/B,SAAQC,IACnCX,IAAIb,oBAAoB,IAAKsD,kBAAkB9B,GAAK,UAAY,gBAAkBA,EAAA,KAO1F,IAAI+B,EAAsBtC,EAAmBuC,oCAAsCC,oCAEnF,IAAIC,EAAsB,GACtBC,EAA2B,GAC3BC,EAA0B,GAC9B,IAAKC,EAAI,EAAGA,EAAIC,+BAAgCD,IAAK,CACjD,IAAIE,EAAQR,EAAsBM,EAAI,UACtCH,EAAoB3F,KAAKK,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMN,IAAI4F,GACvF,CAEA,IAAKF,EAAI,EAAGA,EAAIG,0BAA2BH,IAAK,CAC5C,IAAII,EAAsBC,iCAAmCL,EAAI,UACjEF,EAAyB5F,KAAKK,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMN,IAAI8F,IAExF,IAAIE,EAAqBC,gCAAkCP,EAAI,UAC/DD,EAAwB7F,KAAKK,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMN,IAAIgG,GAC3F,CAEA,GAAI/F,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAM,CAGtD,IAAKoF,EAAI,EAAGA,EAAIH,EAAoB9E,OAAQiF,IAAK,CAC7C,IAAIQ,EAAqBC,mCAAqCT,EAAI,UAClEzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAUuE,EAAoBX,EAAoBG,IAEvG,IAAIU,EAAoBC,kCAAoCX,EAAI,UAChEzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAUyE,EAAmBb,EAAoBG,GAC1G,CACA,IAAKA,EAAI,EAAGA,EAAIG,0BAA2BH,IAAK,CAC5C,IAAIY,EAAsBC,gCAAkCb,EAAI,UAChEzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU2E,EAAqBd,EAAyBE,IAE7G,IAAIc,EAAqBC,+BAAiCf,EAAI,UAC9DzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU6E,EAAoBf,EAAwBC,GAC/G,CACAzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKQ,MAAQC,cAAcd,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKN,KAChIC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKU,MAAQC,aAAahB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKN,KAG/HC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,OAAS,IAExE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,OACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,OACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,OACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,MAC7E,CAEA,GAAI1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAM,CAGtD,IAAKoF,EAAI,EAAGA,EAAIH,EAAoB9E,OAAQiF,IAAK,CAC7C,IAAIgB,EAAqBC,mCAAqCjB,EAAI,UAClEzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU+E,EAAoBnB,EAAoBG,IAEvG,IAAIkB,EAAoBC,kCAAoCnB,EAAI,UAChEzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAUiF,EAAmBrB,EAAoBG,GAC1G,CAEA,IAAKA,EAAI,EAAGA,EAAIG,0BAA2BH,IAAK,CAC5C,IAAIoB,EAAsBC,gCAAkCrB,EAAI,UAChEzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAUmF,EAAqBtB,EAAyBE,IAE7G,IAAIsB,EAAqBC,+BAAiCvB,EAAI,UAC9DzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAUqF,EAAoBvB,EAAwBC,GAC/G,CACAzF,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKQ,MAAQC,cAAcd,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKN,KAChIC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKU,MAAQC,aAAahB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKN,IAEnI,CAOIC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,OAChDqC,MAAM7C,SAAS,MAEfG,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAChDoC,IAAI5C,SAAS,KAEbG,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAChDoC,IAAI5C,SAAS,IAErB,CAEA,IAAIiD,aAAe,CAAC,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,EAAM,IAAM,EAAM,GAAO,GAAM,IAC5F,GAAM,GAAM,EAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAM,GAAO,IAAM,IAC3F,EAAM,GAAM,GAAM,IAAM,GAAM,GAAM,EAAM,IAAM,GAAM,IAAM,EAAM,EAAM,EAAM,GAAO,EAAM,GAC3F,GAAM,IAAM,EAAM,GAAM,EAAM,IAAM,EAAM,GAAM,EAAM,IAAM,GAAM,IAAM,IAAM,GAAO,EAAM,EAC3F,IAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,GAAO,EAAM,IAC3F,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAM,IAAM,EAAM,GAAM,GAAM,IAAO,GAAM,GAC3F,EAAM,GAAM,EAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,EAAM,IAC3F,EAAM,GAAM,GAAM,IAAM,GAAM,GAAM,EAAM,GAAM,EAAM,IAAM,GAAM,IAAM,GAAM,IAAO,EAAM,GAC3F,IAAM,IAAM,GAAM,IAAM,EAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,EAAM,GAC3F,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAO,GAAM,IAC3F,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAO,EAAM,EAC3F,IAAM,GAAM,IAAM,GAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAO,GAAM,EAC3F,IAAM,GAAM,IAAM,GAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAO,EAAM,EAC3F,IAAM,GAAM,IAAM,GAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAO,EAAM,GAE1GC,cAAgB,CAAC,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,EAAM,GAAM,IAAM,GAAM,IAAM,GAC3F,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,IAAM,IAAM,EAAM,GAAM,GAAM,IAAM,GAAM,GAAM,EAAM,IAC1F,GAAM,IAAM,EAAM,EAAM,EAAM,GAAM,EAAM,GAAM,GAAM,IAAM,EAAM,GAAM,EAAM,IAAM,EAAM,GAC1F,EAAM,IAAM,GAAM,IAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAC1F,EAAM,GAAM,EAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAM,IAAM,EAAM,GAC1F,GAAM,IAAM,GAAM,GAAM,EAAM,GAAM,EAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,EAAM,IAAM,EAAM,GAAM,GAAM,IAAM,GAAM,GAAM,EAAM,GAAM,EAAM,IAAM,GAAM,IAC1F,GAAM,IAAM,EAAM,GAAM,IAAM,IAAM,GAAM,IAAM,EAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,EAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAC1F,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,EAAM,GAAM,EAAM,EAC1F,IAAM,GAAM,IAAM,GAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,EAC1F,IAAM,GAAM,IAAM,GAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,EAAM,EAC1F,IAAM,GAAM,IAAM,GAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,GAE9G,SAASkE,qBAEL,GAAIjH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,OAE5CL,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMN,IAAI,KAAO,CAEjEC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,QAAU,GAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,QAAU,GAE1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,GAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,IAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,IAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,IAE1E,IAAIN,EAAasB,MAAMzB,gBAAgB,cAAe,MAAMiG,SAAS,IAAIC,SAAS,EAAG,GAAGC,MAAM,IAE9FpH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU2F,SAASjG,EAAW,GAAKA,EAAW,GAAI,IAAM,GACxHpB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU2F,SAASjG,EAAW,GAAKA,EAAW,GAAI,KAClHpB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU2F,SAASjG,EAAW,GAAKA,EAAW,GAAI,KAClHpB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU2F,SAASjG,EAAW,GAAKA,EAAW,GAAI,IAEtH,CAKJ,GAAIpB,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAM,CAEtDL,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,GACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,GAEzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,GACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IAEzE,IAAI4F,EAAa7E,IAAIxB,gBAAgB,cAAe,KAAKiG,SAAS,IAAIC,SAAS,EAAG,GAAGC,MAAM,IAE3FpH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU2F,SAASC,EAAW,GAAKA,EAAW,GAAI,IAAM,GACvHtH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU2F,SAASC,EAAW,GAAKA,EAAW,GAAI,KACjHtH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU2F,SAASC,EAAW,GAAKA,EAAW,GAAI,KACjHtH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU2F,SAASC,EAAW,GAAKA,EAAW,GAAI,IAErH,CACA,GAAItH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAM,CAEtDL,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,GACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,GAEzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,GACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IAEzE,IAAI6F,EAAa9E,IAAIxB,gBAAgB,cAAe,KAAKiG,SAAS,IAAIC,SAAS,EAAG,GAAGC,MAAM,IAE3FpH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU2F,SAASE,EAAW,GAAKA,EAAW,GAAI,IAAM,GACvHvH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU2F,SAASE,EAAW,GAAKA,EAAW,GAAI,KACjHvH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU2F,SAASE,EAAW,GAAKA,EAAW,GAAI,KACjHvH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU2F,SAASE,EAAW,GAAKA,EAAW,GAAI,IAErH,CAEJ,CAEA,SAASC,sBAEDxH,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,OAE5CL,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMN,IAAI,OAE1DC,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,QAAU,GAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,QAAU,GAE1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,KAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,KAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,IAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,IAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,KAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,KAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,IAC1E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,MAAMqB,UAAU,MAAU,KAO9E1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,OAEhDL,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,GACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,GAEzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,KAGzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,OAEhDL,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,GACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,QAAU,GAEzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,KACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IACzE1B,UAAUC,OAAOC,OAAOC,UAAUC,UAAUC,IAAI,KAAKqB,UAAU,MAAU,IAGjF","sources":["dist/Patching/ExpansionPack.js"],"sourcesContent":["/**\n *  Handle expanding roms to add additional data from other roms and creadting expansions from existing roms\n */\n function ExpansionPack() {\n    this.expansion = [];\n    this.nameExpanstionData = new Map();\n}\n\nExpansionPack.prototype.addToRom = function(romCode) {\n    let ROM = IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM;\n\n    let freeMemoryStart = this.getPatchPointStart(romCode);\n\n\n    if (freeMemoryStart + this.expansion.length > ROM.length) {\n\n        // Appending to the rom (i.e for a 16mb rom we can increase the size upto 32mb)\n        var mergedArray = new Uint8Array(freeMemoryStart + this.expansion.length);\n        mergedArray.set(ROM);\n        mergedArray.set(this.expansion, freeMemoryStart);\n    \n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROMLength = freeMemoryStart + this.expansion.length;\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM =  mergedArray;\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM16 = getUint16View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM32 = getInt32View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n\n    } else {\n\n        // Splicing into (i.e rom is already 32mb so when have to write into a block of free space)\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM.set(this.expansion, freeMemoryStart);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM16 = getUint16View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM32 = getInt32View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n\n    }\n\n}\n\nExpansionPack.prototype.getExpansionPtr = function(expansionName, romCode) {\n    let expansion = this.nameExpanstionData.get(expansionName);\n    return expansion.offset + 0x08000000 + this.getPatchPointStart(romCode);\n}\n\nExpansionPack.prototype.patchRomPtr32 = function (romCode, ptrAddress, newPtr) {\n    let davaView = new DataView(new Uint32Array([newPtr]).buffer);\n\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).patchROM8(ptrAddress, davaView.getUint8(0, true));\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).patchROM8(ptrAddress + 1, davaView.getUint8(1, true));\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).patchROM8(ptrAddress + 2, davaView.getUint8(2, true));\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).patchROM8(ptrAddress + 3, davaView.getUint8(3, true));\n\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM16 = getUint16View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM32 = getInt32View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n}\n\nExpansionPack.prototype.patchRomPtr32ByName = function (romCode, ptrAddress, name) {\n    let newPtr = this.getExpansionPtr(name, romCode);\n    this.patchRomPtr32(romCode, ptrAddress, newPtr);\n}\n\nExpansionPack.prototype.addElementToExpansion = function(name, romCode, offsetInRom, length, transform = null) {\n    let startAddress = offsetInRom;\n    let endAddress = startAddress + length;\n    let data = IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM.slice(startAddress, endAddress);\n    if (transform) {\n        data = transform.apply(null, [data]);\n    }\n    let offset = this.expansion.length; \n    this.expansion = this.expansion.concat(Array.from(data));\n    this.nameExpanstionData.set(name, new ExpansionData(name, offset, Array.from(data)))\n} \n\nExpansionPack.prototype.addNewDataToExpansion = function(name, data) {\n    let offset = this.expansion.length; \n    this.expansion = this.expansion.concat(Array.from(data));\n    this.nameExpanstionData.set(name, new ExpansionData(name, offset, Array.from(data)))\n} \n\nExpansionPack.prototype.getPatchPointStart = function (romCode) {\n    // For a 16mb rom we can just append to the end for 32mb+ roms we might need to find some free space to patch into\n    return 0x1000000;\n}\n\nfunction ExpansionData(name, offset, data) {\n    this.name = name;\n    this.offset = offset;\n    this.data = data;\n}\n\nExpansionData.prototype.getLength = function() {\n    return this.data.length;\n}\n\n/* \n    Sprites data is stored as 8x8 blocks (top -> bottom, left -> right) from the top left\n    Each pixle is 4 BITS i.e each byte represents 2 pixels\n    We need to transpose\n    [1, 2]       [1 , 2 , 3 , 4 ]\n    [3, 4]   ->  [5 , 6 , 7 , 8 ]\n    [5, 6]       [9 , 10, 11, 12]\n    [7, 8]       [13, 14, 15, 16]\n    by padding with 0's\n*/\nfunction sprite16x32To32x32(data) {\n    let newSpriteData = [];\n\n    // ROW 1\n\n        // BLOCK 1\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n        // BLOCK 2\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (0*8*8/2)]);\n        } \n\n        // BLOCK 3\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (1*8*8/2)]);\n        } \n\n        // BLOCK 4\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n    // ROW 2\n\n        // BLOCK 5\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n        // BLOCK 6\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (2*8*8/2)]);\n        } \n\n        // BLOCK 7\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (3*8*8/2)]);\n        } \n\n        // BLOCK 8\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n    // ROW 3\n\n        // BLOCK 9\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n        // BLOCK 10\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (4*8*8/2)]);\n        } \n\n        // BLOCK 11\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (5*8*8/2)]);\n        } \n\n        // BLOCK 12\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        }\n\n    // ROW 4\n\n        // BLOCK 13\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n        // BLOCK 14\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (6*8*8/2)]);\n        } \n\n        // BLOCK 15\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (7*8*8/2)]);\n        } \n\n        // BLOCK 16\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n    return newSpriteData;\n}\n\nvar exp = null;\nvar expfr = null;\nasync function patchExpansionData() {\n\n    if (!IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\")) {\n        return;\n    }\n\n\n    var isPatchedFireRed = IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[0xBC];\n\n    if (exp == null) {\n        exp = new ExpansionPack();\n        expfr = new ExpansionPack();\n\n        /***********************/\n        /** NEW DATA PATCHING **/\n        /***********************/\n        \n        exp.addNewDataToExpansion(\"instantText\", instantTextE);\n        expfr.addNewDataToExpansion(\"instantText\", instantTextFR);\n\n        /*********************/\n        /** SPRITE PATCHING **/\n        /*********************/\n\n        /* COPY DATA FROM FIRE RED */\n\n        // WALKING\n\n        Object.keys(FR_1_0_GIRL_WALK_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_WALK_SPRITE_DATA[k]) - 0x08000000, 256);\n        });\n\n        Object.keys(FR_1_0_BOY_WALK_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_WALK_SPRITE_DATA[k]) - 0x08000000, 256);\n        });\n\n        // BIKING \n        Object.keys(FR_1_0_GIRL_BIKE_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_bike_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_BIKE_SPRITE_DATA[k]) - 0x08000000, 512);\n        });\n\n        Object.keys(FR_1_0_BOY_BIKE_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_bike_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_BIKE_SPRITE_DATA[k]) - 0x08000000, 512);\n        });\n\n        // SURFING \n        Object.keys(FR_1_0_GIRL_SURF_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_surf_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_SURF_SPRITE_DATA[k]) - 0x08000000, 256, sprite16x32To32x32);\n        });\n\n        Object.keys(FR_1_0_BOY_SURF_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_surf_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_SURF_SPRITE_DATA[k]) - 0x08000000, 256, sprite16x32To32x32);\n        });\n\n        // USE ITEM\n        Object.keys(FR_1_0_GIRL_BAG_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_bag_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_BAG_SPRITE_DATA[k]) - 0x08000000, 256, sprite16x32To32x32);\n        });\n\n        Object.keys(FR_1_0_BOY_BAG_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_bag_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_BAG_SPRITE_DATA[k]) - 0x08000000, 256, sprite16x32To32x32);\n        });\n\n        // FISHING\n        Object.keys(FR_1_0_GIRL_FISHING_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_fishing_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_FISHING_SPRITE_DATA[k]) - 0x08000000, 512);\n        });\n\n        Object.keys(FR_1_0_BOY_FISHING_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_fishing_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_FISHING_SPRITE_DATA[k]) - 0x08000000, 512);\n        });\n\n        // Backsprites\n        Object.keys(FR_BACKSPRITE_DATA).forEach(k => {\n            exp.addElementToExpansion(\"fr_backsprite\" + k, \"FR\", (FR_BACKSPRITE_DATA[k]) - 0x08000000, FR_BACKSPRITE_DATA_LENGTH);\n        });\n    }\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n    \n        /* COPY DATA TO CRYSTAL */\n        Object.keys(E_1_0_GIRL_WALK_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_WALK_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_\" + k);\n        });\n        Object.keys(E_1_0_BOY_WALK_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_WALK_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_BIKE_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_BIKE_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_bike_\" + k);\n        });\n        Object.keys(E_1_0_BOY_BIKE_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_BIKE_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_bike_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_SURF_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_SURF_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_surf_\" + k);\n        });\n        Object.keys(E_1_0_BOY_SURF_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_SURF_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_surf_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_BAG_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_BAG_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_bag_\" + k);\n        });\n        Object.keys(E_1_0_BOY_BAG_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_BAG_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_bag_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_FISHING_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_FISHING_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_fishing_\" + k);\n        });\n        Object.keys(E_1_0_BOY_FISHING_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_FISHING_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_fishing_\" + k);\n        });\n\n        // Backsprites\n        Object.keys(C_BACKSPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", C_BACKSPRITE_PTRS[k] - 0x08000000, \"fr_backsprite\" + k);\n        });\n\n    }\n\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n\n        /* COPY DATA TO EMERALD */\n        Object.keys(E_1_0_GIRL_WALK_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_WALK_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_\" + k);\n        });\n        Object.keys(E_1_0_BOY_WALK_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_WALK_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_BIKE_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_BIKE_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_bike_\" + k);\n        });\n        Object.keys(E_1_0_BOY_BIKE_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_BIKE_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_bike_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_SURF_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_SURF_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_surf_\" + k);\n        });\n        Object.keys(E_1_0_BOY_SURF_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_SURF_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_surf_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_BAG_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_BAG_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_bag_\" + k);\n        });\n        Object.keys(E_1_0_BOY_BAG_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_BAG_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_bag_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_FISHING_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_FISHING_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_fishing_\" + k);\n        });\n        Object.keys(E_1_0_BOY_FISHING_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_FISHING_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_fishing_\" + k);\n        });\n\n        // Fix Emerald Trainer Sprites\n        exp.patchRomPtr32(\"E\", EMERALD_BRANDON_TRAINER_SPRITE_PTR, IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").readROM32(EMERALD_RED_TRAINER_SPRITE_PTR));\n        exp.patchRomPtr32(\"E\", EMERALD_MAY_TRAINER_SPRITE_PTR, IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").readROM32(EMERALD_LEAF_TRAINER_SPRITE_PTR));\n\n        // Backsprites\n        Object.keys(E_BACKSPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_BACKSPRITE_PTRS[k] - 0x08000000, \"fr_backsprite\" + k);\n        });\n\n    }\n\n\n    /* COPY COLOUR PALLETS FROM FIRE RED */\n    var fireRedPalletOffset = isPatchedFireRed ? FR_1_1_GIRL_PALLET_DATA_BASE_OFFSET : FR_1_0_GIRL_PALLET_DATA_BASE_OFFSET;\n\n    let overworldPalletData = []; // In  FireRed boy and Girl use the same overworld pallet\n    let girlBackspritePalletData = [];\n    let boyBackspritePalletData = [];\n    for (i = 0; i < FR_1_0_GIRL_PALLET_DATA_LENGTH; i++) {\n        let index = fireRedPalletOffset + i - 0x08000000;\n        overworldPalletData.push(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[index]);\n    }\n\n    for (i = 0; i < BACKSPRITES_PALLET_LENGTH; i++) {\n        let girlBackspriteIndex = FR_GIRL_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n        girlBackspritePalletData.push(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[girlBackspriteIndex]);\n\n        let boyBackspriteIndex = FR_BOY_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n        boyBackspritePalletData.push(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[boyBackspriteIndex]);\n    }\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n\n        /* COPY COLOUR PALLETS TO EMERALD */\n        for (i = 0; i < overworldPalletData.length; i++) {\n            let girlOverworldIndex = E_1_0_GIRL_PALLET_DATA_BASE_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(girlOverworldIndex, overworldPalletData[i]);\n\n            let boyOverworldIndex = E_1_0_BOY_PALLET_DATA_BASE_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(boyOverworldIndex, overworldPalletData[i]);\n        }\n        for (i = 0; i < BACKSPRITES_PALLET_LENGTH; i++) {\n            let girlBackspriteIndex = E_GIRL_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(girlBackspriteIndex, girlBackspritePalletData[i]);\n\n            let boyBackspriteIndex = E_BOY_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(boyBackspriteIndex, boyBackspritePalletData[i]);\n        }\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").ROM16 = getUint16View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").ROM);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").ROM32 = getInt32View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").ROM);\n\n        // Partially fix reflection pallets\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x499c2c, 0xfc);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x499c2d, 0x45);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x499c2e, 0xfc);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x499c2, 0x45);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4a42ac, 0x9b77);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4a42ad, 0x9b77);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4a42ae, 0x9b77);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4a42af, 0x9b77);\n    }\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n\n        /* COPY COLOUR PALLETS TO CRYSTAL */\n        for (i = 0; i < overworldPalletData.length; i++) {\n            let girlOverworldIndex = C_1_0_GIRL_PALLET_DATA_BASE_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(girlOverworldIndex, overworldPalletData[i]);\n\n            let boyOverworldIndex = C_1_0_BOY_PALLET_DATA_BASE_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(boyOverworldIndex, overworldPalletData[i]);\n        }\n\n        for (i = 0; i < BACKSPRITES_PALLET_LENGTH; i++) {\n            let girlBackspriteIndex = C_GIRL_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(girlBackspriteIndex, girlBackspritePalletData[i]);\n\n            let boyBackspriteIndex = C_BOY_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(boyBackspriteIndex, boyBackspritePalletData[i]);\n        }\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").ROM16 = getUint16View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").ROM);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").ROM32 = getInt32View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").ROM);\n\n    }\n\n\n    /*************************************/\n    /** Add the expansion into the roms **/\n    /*************************************/\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\")) {\n        expfr.addToRom(\"FR\");\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n        exp.addToRom(\"C\");\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n        exp.addToRom(\"E\");\n    }\n}\n\nvar instantTextE = [0xf0, 0xb5, 0x4f, 0x46, 0x46, 0x46, 0xc0, 0xb4, 0x0c, 0x48, 0x00, 0x78, 0x00, 0x28,  0x46, 0xd1,\n                   0x0b, 0x4e, 0x00, 0x20, 0x81, 0x46, 0x80, 0x46, 0x34, 0x1d, 0x35, 0x1c, 0x00, 0x27,  0xe0, 0x7d,\n                   0x00, 0x28, 0x2f, 0xd0, 0x28, 0x1c, 0x00, 0xf0, 0x4b, 0xf8, 0x00, 0x04, 0x00, 0x0c,  0x01, 0x28,\n                   0x25, 0xd0, 0x01, 0x28, 0x06, 0xdc, 0x00, 0x28, 0x07, 0xd0, 0x25, 0xe0, 0x84, 0x2f,  0x00, 0x03,\n                   0xb0, 0x01, 0x02, 0x02, 0x03, 0x28, 0x0f, 0xd0, 0x1e, 0xe0, 0x20, 0x78, 0x02, 0x21,  0x00, 0xf0,\n                   0x3f, 0xf8, 0x30, 0x1c, 0x10, 0x30, 0x38, 0x18, 0x02, 0x68, 0x00, 0x2a, 0x14, 0xd0,  0x28, 0x1c,\n                   0x00, 0x21, 0x00, 0xf0, 0x25, 0xf8, 0x0f, 0xe0, 0x30, 0x1c, 0x10, 0x30, 0x38, 0x18,  0x02, 0x68,\n                   0x00, 0x2a, 0x14, 0xd0, 0x28, 0x1c, 0x03, 0x21, 0x00, 0xf0, 0x1a, 0xf8, 0x0f, 0xe0,  0x00, 0x20,\n                   0xe0, 0x75, 0x0c, 0xe0, 0x01, 0x20, 0x81, 0x44, 0x24, 0x34, 0x24, 0x35, 0x24, 0x37,  0x01, 0x20,\n                   0x80, 0x44, 0x40, 0x46, 0x1f, 0x28, 0xc2, 0xdd, 0x48, 0x46, 0x20, 0x28, 0xb9, 0xd1,  0x18, 0xbc,\n                   0x98, 0x46, 0xa1, 0x46, 0xf0, 0xbc, 0x01, 0xbc, 0x00, 0x47, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00,\n                   0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0xd9, 0x70,  0x2e, 0x08,\n                   0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x19, 0x48,  0x00, 0x08,\n                   0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x59, 0x36,  0x00, 0x08];\n\nvar instantTextFR = [0xf0, 0xb5, 0x4f, 0x46, 0x46, 0x46, 0xc0, 0xb4, 0x0a, 0x4e, 0x00, 0x20, 0x81, 0x46, 0x80, 0x46,        \n                    0x34, 0x1d, 0x35, 0x1c, 0x00, 0x27, 0xe0, 0x7d, 0x00, 0x28, 0x2d, 0xd0, 0x28, 0x1c, 0x00, 0xf0,        \n                    0x4f, 0xf8, 0x00, 0x04, 0x00, 0x0c, 0x01, 0x28, 0x23, 0xd0, 0x01, 0x28, 0x04, 0xdc, 0x00, 0x28,        \n                    0x05, 0xd0, 0x23, 0xe0, 0x34, 0x00, 0x02, 0x02, 0x03, 0x28, 0x0f, 0xd0, 0x1e, 0xe0, 0x20, 0x78,        \n                    0x02, 0x21, 0x00, 0xf0, 0x35, 0xf8, 0x30, 0x1c, 0x10, 0x30, 0x38, 0x18, 0x02, 0x68, 0x00, 0x2a,        \n                    0x14, 0xd0, 0x28, 0x1c, 0x00, 0x21, 0x00, 0xf0, 0x23, 0xf8, 0x0f, 0xe0, 0x30, 0x1c, 0x10, 0x30,        \n                    0x38, 0x18, 0x02, 0x68, 0x00, 0x2a, 0x14, 0xd0, 0x28, 0x1c, 0x03, 0x21, 0x00, 0xf0, 0x18, 0xf8,        \n                    0x0f, 0xe0, 0x00, 0x20, 0xe0, 0x75, 0x0c, 0xe0, 0x01, 0x20, 0x81, 0x44, 0x24, 0x34, 0x24, 0x35,        \n                    0x24, 0x37, 0x01, 0x20, 0x80, 0x44, 0x40, 0x46, 0x1f, 0x28, 0xc4, 0xdd, 0x48, 0x46, 0x20, 0x28,        \n                    0xbb, 0xd1, 0x18, 0xbc, 0x98, 0x46, 0xa1, 0x46, 0xf0, 0xbc, 0x01, 0xbc, 0x00, 0x47, 0x00, 0x00,        \n                    0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x20, 0x3c, 0x1e, 0x08,        \n                    0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x35, 0x3f, 0x00, 0x08,        \n                    0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x91, 0x2e, 0x00, 0x08]\n\nfunction patchInInstantText() {\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\")) {\n\n        if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[0xBC]) {\n            // dealing with 1.1\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x41f498, 0x01);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x41f499, 0x01);\n    \n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfc  , 0x00);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfd  , 0x4a);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfe  , 0x10);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dff  , 0x47);\n    \n            let ptrAddress = expfr.getExpansionPtr(\"instantText\", \"FR\").toString(16).padStart(8, 0).split(\"\");\n    \n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e00  , parseInt(ptrAddress[6] + ptrAddress[7], 16) + 1);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e01  , parseInt(ptrAddress[4] + ptrAddress[5], 16)    );\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e02  , parseInt(ptrAddress[2] + ptrAddress[3], 16)    );\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e03  , parseInt(ptrAddress[0] + ptrAddress[1], 16)    );\n\n        } else {\n            // TODO support instant text for Fire Red 1.0\n        }\n\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x60f094, 0x01);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x60f095, 0x01);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x4778  , 0x00);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x4779  , 0x4a);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477A  , 0x10);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477B  , 0x47);\n\n        let ptrAddress = exp.getExpansionPtr(\"instantText\", \"C\").toString(16).padStart(8, 0).split(\"\");\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477C  , parseInt(ptrAddress[6] + ptrAddress[7], 16) + 1);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477D  , parseInt(ptrAddress[4] + ptrAddress[5], 16)    );\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477E  , parseInt(ptrAddress[2] + ptrAddress[3], 16)    );\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477F  , parseInt(ptrAddress[0] + ptrAddress[1], 16)    );\n\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x60f094, 0x01);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x60f095, 0x01);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4778  , 0x00);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4779  , 0x4a);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477A  , 0x10);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477B  , 0x47);\n\n        let ptrAddress = exp.getExpansionPtr(\"instantText\", \"E\").toString(16).padStart(8, 0).split(\"\");\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477C  , parseInt(ptrAddress[6] + ptrAddress[7], 16) + 1);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477D  , parseInt(ptrAddress[4] + ptrAddress[5], 16)    );\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477E  , parseInt(ptrAddress[2] + ptrAddress[3], 16)    );\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477F  , parseInt(ptrAddress[0] + ptrAddress[1], 16)    );\n        \n    }\n\n}\n\nfunction patchOutInstantText() {\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\")) {\n\n        if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[0xBC]) {\n            // dealing with 1.1\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x41f498, 0x08);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x41f499, 0x04);\n    \n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfc  , 0xf0);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfd  , 0xb5);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfe  , 0x47);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dff  , 0x46);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e00  , 0x80);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e01  , 0xb4);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e02  , 0x0a);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e03  , 0x48);\n\n        } else {\n            // TODO support instant text for Fire Red 1.0\n        }\n\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x60f094, 0x08);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x60f095, 0x04);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x4778  , 0xf0);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x4779  , 0xb5);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477A  , 0x47);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477B  , 0x46);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477C  , 0x80);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477D  , 0xb4);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477E  , 0x0c);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477F  , 0x48);\n\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x60f094, 0x08);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x60f095, 0x04);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4778  , 0xf0);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4779  , 0xb5);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477A  , 0x47);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477B  , 0x46);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477C  , 0x80);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477D  , 0xb4);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477E  , 0x0c);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477F  , 0x48);\n\n    }\n}"],"names":["ExpansionPack","this","expansion","nameExpanstionData","Map","ExpansionData","name","offset","data","sprite16x32To32x32","newSpriteData","i1","push","prototype","addToRom","romCode","ROM","IodineGUI","Iodine","IOCore","cartridge","cartriges","get","freeMemoryStart","getPatchPointStart","length","mergedArray","Uint8Array","set","ROMLength","ROM16","getUint16View","ROM32","getInt32View","getExpansionPtr","expansionName","patchRomPtr32","ptrAddress","newPtr","davaView","DataView","Uint32Array","buffer","patchROM8","getUint8","patchRomPtr32ByName","addElementToExpansion","offsetInRom","transform","startAddress","endAddress","slice","apply","concat","Array","from","addNewDataToExpansion","getLength","exp","expfr","async","patchExpansionData","isPatchedFireRed","instantTextE","instantTextFR","Object","keys","FR_1_0_GIRL_WALK_SPRITE_DATA","forEach","k","versionOffset","FR_1_1_SPRITE_OFFSET_SHIFT","FR_1_0_BOY_WALK_SPRITE_DATA","FR_1_0_GIRL_BIKE_SPRITE_DATA","FR_1_0_BOY_BIKE_SPRITE_DATA","FR_1_0_GIRL_SURF_SPRITE_DATA","FR_1_0_BOY_SURF_SPRITE_DATA","FR_1_0_GIRL_BAG_SPRITE_DATA","FR_1_0_BOY_BAG_SPRITE_DATA","FR_1_0_GIRL_FISHING_SPRITE_DATA","FR_1_0_BOY_FISHING_SPRITE_DATA","FR_BACKSPRITE_DATA","FR_BACKSPRITE_DATA_LENGTH","E_1_0_GIRL_WALK_SPRITE_PTRS","E_1_0_BOY_WALK_SPRITE_PTRS","E_1_0_GIRL_BIKE_SPRITE_PTRS","E_1_0_BOY_BIKE_SPRITE_PTRS","E_1_0_GIRL_SURF_SPRITE_PTRS","E_1_0_BOY_SURF_SPRITE_PTRS","E_1_0_GIRL_BAG_SPRITE_PTRS","E_1_0_BOY_BAG_SPRITE_PTRS","E_1_0_GIRL_FISHING_SPRITE_PTRS","E_1_0_BOY_FISHING_SPRITE_PTRS","C_BACKSPRITE_PTRS","EMERALD_BRANDON_TRAINER_SPRITE_PTR","readROM32","EMERALD_RED_TRAINER_SPRITE_PTR","EMERALD_MAY_TRAINER_SPRITE_PTR","EMERALD_LEAF_TRAINER_SPRITE_PTR","E_BACKSPRITE_PTRS","fireRedPalletOffset","FR_1_1_GIRL_PALLET_DATA_BASE_OFFSET","FR_1_0_GIRL_PALLET_DATA_BASE_OFFSET","overworldPalletData","girlBackspritePalletData","boyBackspritePalletData","i","FR_1_0_GIRL_PALLET_DATA_LENGTH","index","BACKSPRITES_PALLET_LENGTH","girlBackspriteIndex","FR_GIRL_BACKSPRITE_PALLET_OFFSET","boyBackspriteIndex","FR_BOY_BACKSPRITE_PALLET_OFFSET","girlOverworldIndex","E_1_0_GIRL_PALLET_DATA_BASE_OFFSET","boyOverworldIndex","E_1_0_BOY_PALLET_DATA_BASE_OFFSET","girlBackspriteIndex1","E_GIRL_BACKSPRITE_PALLET_OFFSET","boyBackspriteIndex1","E_BOY_BACKSPRITE_PALLET_OFFSET","girlOverworldIndex1","C_1_0_GIRL_PALLET_DATA_BASE_OFFSET","boyOverworldIndex1","C_1_0_BOY_PALLET_DATA_BASE_OFFSET","girlBackspriteIndex2","C_GIRL_BACKSPRITE_PALLET_OFFSET","boyBackspriteIndex2","C_BOY_BACKSPRITE_PALLET_OFFSET","patchInInstantText","toString","padStart","split","parseInt","ptrAddress1","ptrAddress2","patchOutInstantText"],"version":3,"file":"index.ceac971c.js.map"}