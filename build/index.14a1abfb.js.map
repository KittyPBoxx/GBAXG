{"mappings":"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","sources":["dist/user_scripts/CommandExecution/ButtonCommands.js"],"sourcesContent":["/**\n * Requires:    - CommandExecutor.js\n */\n\n\n/* Register button commands for pressing and releasing */\n\nCommandExecutor.register(\"AKeyDown\"     , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(0) : null);               // A\nCommandExecutor.register(\"AKeyUp\"       , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (0) : menuInput(\"A\"));\nCommandExecutor.register(\"BKeyDown\"     , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(1) : null);               // B\nCommandExecutor.register(\"BKeyUp\"       , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (1) : menuInput(\"B\"));\nCommandExecutor.register(\"SelectKeyDown\", args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(2) : null);               // Select\nCommandExecutor.register(\"SelectKeyUp\"  , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (2) : menuInput(\"SELECT\"));\nCommandExecutor.register(\"StartKeyDown\" , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(3) : null);               // Start\nCommandExecutor.register(\"StartKeyUp\"   , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (3) : menuInput(\"START\"));\nCommandExecutor.register(\"RightKeyDown\" , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(4) : null);               // Right\nCommandExecutor.register(\"RightKeyUp\"   , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (4) : menuInput(\"RIGHT\"));\nCommandExecutor.register(\"LeftKeyDown\"  , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(5) : null);               // Left\nCommandExecutor.register(\"LeftKeyUp\"    , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (5) : menuInput(\"LEFT\"));\nCommandExecutor.register(\"UpKeyDown\"    , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(6) : null);               // Up\nCommandExecutor.register(\"UpKeyUp\"      , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (6) : menuInput(\"UP\"));\nCommandExecutor.register(\"DownKeyDown\"  , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(7) : null);               // Down\nCommandExecutor.register(\"DownKeyUp\"    , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (7) : menuInput(\"DOWN\"));\nCommandExecutor.register(\"RKeyDown\"     , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(8) : null);               // R\nCommandExecutor.register(\"RKeyUp\"       , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (8) : menuInput(\"R\"));\nCommandExecutor.register(\"LKeyDown\"     , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyDown(9) : null);               // L\nCommandExecutor.register(\"LKeyUp\"       , args => IodineGUI.isPlaying ? IodineGUI.Iodine.keyUp  (9) : menuInput(\"L\"));\n\n\n/* Register Commands to simulate button tap */\n\nCommandExecutor.register(\"A\"     , args => IodineGUI.isPlaying ? keyPress(0) /* A      */ : menuInput(\"A\")); \nCommandExecutor.register(\"B\"     , args => IodineGUI.isPlaying ? keyPress(1) /* B      */ : menuInput(\"B\")); \nCommandExecutor.register(\"Select\", args => IodineGUI.isPlaying ? keyPress(2) /* Select */ : menuInput(\"SELECT\")); \nCommandExecutor.register(\"Start\" , args => IodineGUI.isPlaying ? keyPress(3) /* Start  */ : menuInput(\"START\")); \nCommandExecutor.register(\"Right\" , args => IodineGUI.isPlaying ? keyPress(4) /* Right  */ : menuInput(\"RIGHT\")); \nCommandExecutor.register(\"Left\"  , args => IodineGUI.isPlaying ? keyPress(5) /* Left   */ : menuInput(\"LEFT\")); \nCommandExecutor.register(\"Up\"    , args => IodineGUI.isPlaying ? keyPress(6) /* Up     */ : menuInput(\"UP\")); \nCommandExecutor.register(\"Down\"  , args => IodineGUI.isPlaying ? keyPress(7) /* Down   */ : menuInput(\"DOWN\")); \nCommandExecutor.register(\"R\"     , args => IodineGUI.isPlaying ? keyPress(8) /* R      */ : menuInput(\"R\")); \nCommandExecutor.register(\"L\"     , args => IodineGUI.isPlaying ? keyPress(9) /* L      */ : menuInput(\"L\")); \n\n/* Iodine functions */\nlet speedUpSpeed = 4;\nCommandExecutor.register(\"SpeedUp\", args => IodineGUI.Iodine.setSpeed(IodineGUI.Iodine.getSpeed() == 1 ? speedUpSpeed : 1));\nCommandExecutor.register(\"BigSpeedUp\", args => IodineGUI.Iodine.setSpeed(IodineGUI.Iodine.getSpeed() == 1 ? 10 : 1));\nCommandExecutor.register(\"Restart\", args => restartFromLastSave());\nCommandExecutor.register(\"Start\", args => IodineGUI.Iodine.play());\nCommandExecutor.register(\"Stop\", args => IodineGUI.Iodine.stop());\n\n/* State functions */\nCommandExecutor.register(\"SaveSlot1\", args => {\n  let preview = IodineGUI.Iodine.saveStateManager.saveMultiState(\"MS1\").preview;\n  document.getElementById(\"saveState1Preiew\").src = preview;\n  M.toast({html: 'State Saved', displayLength:500});\n});\nCommandExecutor.register(\"LoadSlot1\", args => {\n  IodineGUI.Iodine.saveStateManager.loadMultiState(\"MS1\");\n});\n\nvar keyPress = async(k) => { IodineGUI.Iodine.keyDown(k); await delay(50); IodineGUI.Iodine.keyUp(k) }\nasync function delay(time) {\n    return new Promise(function (resolve) {\n      setTimeout(resolve, time);\n    });\n}\n\n/* Hack Functions */\nCommandExecutor.register(\"ToggleWarps\", args => {\n  randomWarpsEnabled = !randomWarpsEnabled;\n  document.getElementById(\"enableWarpsCheckbox\").checked = randomWarpsEnabled;\n});\n\nCommandExecutor.register(\"ToggleWalls\", args => {\n  walkThroughWalls = !walkThroughWalls;\n  document.getElementById(\"disableWalls\").checked = walkThroughWalls;\n});\n\nCommandExecutor.register(\"ToggleBike\", args => {\n  autoBike = !autoBike;\n  document.getElementById(\"autoBike\").checked = autoBike;\n  if (autoBike) {\n    forcePlayerState(MOVEMENT_MODE_BIKE);\n  } else {\n    forcePlayerState(MOVEMENT_MODE_WALK);\n  }\n});"],"names":["CommandExecutor","register","args","IodineGUI","isPlaying","Iodine","keyDown","keyUp","menuInput","keyPress","speedUpSpeed","setSpeed","getSpeed","restartFromLastSave","play","stop","preview","saveStateManager","saveMultiState","document","getElementById","src","M","toast","html","displayLength","loadMultiState","async","k","delay","time","Promise","resolve","setTimeout","randomWarpsEnabled","checked","walkThroughWalls","autoBike","forcePlayerState","MOVEMENT_MODE_BIKE","MOVEMENT_MODE_WALK"],"version":3,"file":"index.14a1abfb.js.map"}