{"mappings":"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","sources":["dist/IodineGBA/core/memory/DMA0.js"],"sourcesContent":["\"use strict\";\n/*\n Copyright (C) 2012-2015 Grant Galitz\n \n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n \n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n \n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction GameBoyAdvanceDMA0(IOCore) {\n    this.IOCore = IOCore;\n}\nGameBoyAdvanceDMA0.prototype.DMA_ENABLE_TYPE = [            //DMA Channel 0 Mapping:\n    0x1,\n    0x2,\n    0x4,\n    0x40\n];\nGameBoyAdvanceDMA0.prototype.initialize = function () {\n    this.enabled = 0;\n    this.pending = 0;\n    this.source = 0;\n    this.sourceShadow = 0;\n    this.destination = 0;\n    this.destinationShadow = 0;\n    this.wordCount = 0;\n    this.wordCountShadow = 0;\n    this.irqFlagging = 0;\n    this.dmaType = 0;\n    this.is32Bit = 0;\n    this.repeat = 0;\n    this.sourceControl = 0;\n    this.destinationControl = 0;\n    this.DMACore = this.IOCore.dma;\n    this.memory = this.IOCore.memory;\n    this.gfxState = this.IOCore.gfxState;\n    this.irq = this.IOCore.irq;\n}\nGameBoyAdvanceDMA0.prototype.validateDMASource = function (address) {\n    address = address | 0;\n    if ((address | 0) >= 0x2000000) {\n        if ((address | 0) <= 0x7FFFFFF || (address | 0) >= 0xE000000) {\n            this.source = address | 0;\n        }\n    }\n}\nGameBoyAdvanceDMA0.prototype.validateDMADestination = function (address) {\n    address = address | 0;\n    if ((address | 0) <= 0x7FFFFFF) {\n        this.destination = address | 0;\n    }\n}\nGameBoyAdvanceDMA0.prototype.writeDMASource8_0 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFFFF00;\n    data = data & 0xFF;\n    source = source | data;\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMASource8_1 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFF00FF;\n    data = data & 0xFF;\n    source = source | (data << 8);\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMASource8_2 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xF00FFFF;\n    data = data & 0xFF;\n    source = source | (data << 16);\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMASource8_3 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFFFFF;\n    data = data & 0xF;\n    source = source | (data << 24);\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMASource16_0 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFF0000;\n    data = data & 0xFFFF;\n    source = source | data;\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMASource16_1 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFFF;\n    data = data & 0xFFF;\n    source = source | (data << 16);\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMASource32 = function (data) {\n    data = data | 0;\n    var source = data & 0xFFFFFFF;\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMADestination8_0 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFFFF00;\n    data = data & 0xFF;\n    destination = destination | data;\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMADestination8_1 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFF00FF;\n    data = data & 0xFF;\n    destination = destination | (data << 8);\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMADestination8_2 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xF00FFFF;\n    data = data & 0xFF;\n    destination = destination | (data << 16);\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMADestination8_3 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFFFFF;\n    data = data & 0xF;\n    destination = destination | (data << 24);\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMADestination16_0 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFF0000;\n    data = data & 0xFFFF;\n    destination = destination | data;\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMADestination16_1 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFFF;\n    data = data & 0xFFF;\n    destination = destination | (data << 16);\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMADestination32 = function (data) {\n    data = data | 0;\n    var destination = data & 0xFFFFFFF;\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA0.prototype.writeDMAWordCount8_0 = function (data) {\n    data = data | 0;\n    this.wordCount = this.wordCount & 0x3F00;\n    data = data & 0xFF;\n    this.wordCount = this.wordCount | data;\n}\nGameBoyAdvanceDMA0.prototype.writeDMAWordCount8_1 = function (data) {\n    data = data | 0;\n    this.wordCount = this.wordCount & 0xFF;\n    data = data & 0x3F;\n    this.wordCount = this.wordCount | (data << 8);\n}\nGameBoyAdvanceDMA0.prototype.writeDMAWordCount16 = function (data) {\n    data = data | 0;\n    this.wordCount = data & 0x3FFF;\n}\nGameBoyAdvanceDMA0.prototype.writeDMAControl8_0 = function (data) {\n    data = data | 0;\n    this.destinationControl = (data >> 5) & 0x3;\n    this.sourceControl = this.sourceControl & 0x2;\n    this.sourceControl = this.sourceControl | ((data >> 7) & 0x1);\n}\nGameBoyAdvanceDMA0.prototype.writeDMAControl8_1 = function (data) {\n    data = data | 0;\n    //Spill state machine clocks:\n    this.IOCore.updateCoreClocking();\n    this.sourceControl = (this.sourceControl & 0x1) | ((data & 0x1) << 1);\n    this.repeat = data & 0x2;\n    this.is32Bit = data & 0x4;\n    this.dmaType = (data >> 4) & 0x3;\n    this.irqFlagging = data & 0x40;\n    this.enableDMAChannel(data & 0x80);\n    //Calculate next event:\n    this.IOCore.updateCoreEventTime();\n}\nGameBoyAdvanceDMA0.prototype.writeDMAControl16 = function (data) {\n    data = data | 0;\n    //Spill state machine clocks:\n    this.IOCore.updateCoreClocking();\n    this.destinationControl = (data >> 5) & 0x3;\n    this.sourceControl = (data >> 7) & 0x3;\n    this.repeat = (data >> 8) & 0x2;\n    this.is32Bit = (data >> 8) & 0x4;\n    this.dmaType = (data >> 12) & 0x3;\n    this.irqFlagging = (data >> 8) & 0x40;\n    this.enableDMAChannel(data & 0x8000);\n    //Calculate next event:\n    this.IOCore.updateCoreEventTime();\n}\nGameBoyAdvanceDMA0.prototype.writeDMAControl32 = function (data) {\n    data = data | 0;\n    this.writeDMAWordCount16(data | 0);\n    this.writeDMAControl16(data >> 16);\n}\nGameBoyAdvanceDMA0.prototype.readDMAControl8_0 = function () {\n    var data = this.destinationControl << 5;\n    data = data | ((this.sourceControl & 0x1) << 7);\n    return data | 0;\n}\nGameBoyAdvanceDMA0.prototype.readDMAControl8_1 = function () {\n    var data = this.sourceControl >> 1;\n    data = data | this.repeat;\n    data = data | this.is32Bit;\n    data = data | (this.dmaType << 4);\n    data = data | this.irqFlagging;\n    if ((this.enabled | 0) != 0) {\n        data = data | 0x80;\n    }\n    return data | 0;\n}\nGameBoyAdvanceDMA0.prototype.readDMAControl16 = function () {\n    var data = this.destinationControl << 5;\n    data = data | (this.sourceControl << 7);\n    data = data | (this.repeat << 8);\n    data = data | (this.is32Bit << 8);\n    data = data | (this.dmaType << 12);\n    data = data | (this.irqFlagging << 8);\n    if ((this.enabled | 0) != 0) {\n        data = data | 0x8000;\n    }\n    return data | 0;\n}\nGameBoyAdvanceDMA0.prototype.getMatchStatus = function () {\n    return this.enabled & this.pending;\n}\nGameBoyAdvanceDMA0.prototype.requestDMA = function (DMAType) {\n    DMAType = DMAType | 0;\n    if ((this.enabled & DMAType) != 0) {\n        this.pending = DMAType | 0;\n        this.DMACore.update();\n    }\n}\nGameBoyAdvanceDMA0.prototype.enableDMAChannel = function (enabled) {\n    enabled = enabled | 0;\n    if ((enabled | 0) != 0) {\n        //If DMA was previously disabled, reload control registers:\n        if ((this.enabled | 0) == 0) {\n            //Flag immediate DMA transfers for processing now:\n            this.pending = 0x1;\n            //Shadow copy the word count:\n            this.wordCountShadow = this.wordCount | 0;\n            //Shadow copy the source address:\n            this.sourceShadow = this.source | 0;\n            //Shadow copy the destination address:\n            this.destinationShadow = this.destination | 0;\n        }\n        //DMA type changed:\n        this.enabled = this.DMA_ENABLE_TYPE[this.dmaType | 0] | 0;\n        this.pending = this.pending & this.enabled;\n    }\n    else {\n        //DMA Disabled:\n        this.enabled = 0;\n    }\n    //Run some DMA channel activity checks:\n    this.DMACore.update();\n}\nGameBoyAdvanceDMA0.prototype.handleDMACopy = function () {\n    //Get the addesses:\n    var source = this.sourceShadow | 0;\n    var destination = this.destinationShadow | 0;\n    //Transfer Data:\n    if ((this.is32Bit | 0) == 4) {\n        //32-bit Transfer:\n        this.copy32(source | 0, destination | 0);\n    }\n    else {\n        //16-bit Transfer:\n        this.copy16(source | 0, destination | 0);\n    }\n}\nGameBoyAdvanceDMA0.prototype.copy16 = function (source, destination) {\n    source = source | 0;\n    destination = destination | 0;\n    var data = this.memory.memoryReadDMA16(source | 0) | 0;\n    this.memory.memoryWriteDMA16(destination | 0, data | 0);\n    this.decrementWordCount(source | 0, destination | 0, 2);\n    this.DMACore.updateFetch(data | (data << 16));\n}\nGameBoyAdvanceDMA0.prototype.copy32 = function (source, destination) {\n    source = source | 0;\n    destination = destination | 0;\n    var data = this.memory.memoryReadDMA32(source | 0) | 0;\n    this.memory.memoryWriteDMA32(destination | 0, data | 0);\n    this.decrementWordCount(source | 0, destination | 0, 4);\n    this.DMACore.updateFetch(data | 0);\n}\nGameBoyAdvanceDMA0.prototype.decrementWordCount = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    //Decrement the word count:\n    var wordCountShadow = ((this.wordCountShadow | 0) - 1) & 0x3FFF;\n    if ((wordCountShadow | 0) == 0) {\n        //DMA transfer ended, handle accordingly:\n        wordCountShadow = this.finalizeDMA(source | 0, destination | 0, transferred | 0) | 0;\n    }\n    else {\n        //Update addresses:\n        this.incrementDMAAddresses(source | 0, destination | 0, transferred | 0);\n    }\n    //Save the new word count:\n    this.wordCountShadow = wordCountShadow | 0;\n}\nGameBoyAdvanceDMA0.prototype.finalizeDMA = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    var wordCountShadow = 0;\n    //Reset pending requests:\n    this.pending = 0;\n    //Check Repeat Status:\n    if ((this.repeat | 0) == 0 || (this.enabled | 0) == 0x1) {\n        //Disable the enable bit:\n        this.enabled = 0;\n    }\n    else {\n        //Reload word count:\n        wordCountShadow = this.wordCount | 0;\n    }\n    //Run the DMA channel checks:\n    this.DMACore.update();\n    //Check to see if we should flag for IRQ:\n    this.checkIRQTrigger();\n    //Update addresses:\n    this.finalDMAAddresses(source | 0, destination | 0, transferred | 0);\n    return wordCountShadow | 0;\n}\nGameBoyAdvanceDMA0.prototype.checkIRQTrigger = function () {\n    if ((this.irqFlagging | 0) != 0) {\n        this.irq.requestIRQ(0x100);\n    }\n}\nGameBoyAdvanceDMA0.prototype.finalDMAAddresses = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    //Update source address:\n    switch (this.sourceControl | 0) {\n        case 0:    //Increment\n        case 3:    //Forbidden (VBA has it increment)\n            this.sourceShadow = ((source | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:    //Decrement\n            this.sourceShadow = ((source | 0) - (transferred | 0)) | 0;\n    }\n    //Update destination address:\n    switch (this.destinationControl | 0) {\n        case 0:    //Increment\n            this.destinationShadow = ((destination | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:    //Decrement\n            this.destinationShadow = ((destination | 0) - (transferred | 0)) | 0;\n            break;\n        case 3:    //Reload\n            this.destinationShadow = this.destination | 0;\n    }\n}\nGameBoyAdvanceDMA0.prototype.incrementDMAAddresses = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    //Update source address:\n    switch (this.sourceControl | 0) {\n        case 0:    //Increment\n        case 3:    //Forbidden (VBA has it increment)\n            this.sourceShadow = ((source | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:\n            this.sourceShadow = ((source | 0) - (transferred | 0)) | 0;\n    }\n    //Update destination address:\n    switch (this.destinationControl | 0) {\n        case 0:    //Increment\n        case 3:    //Increment\n            this.destinationShadow = ((destination | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:    //Decrement\n            this.destinationShadow = ((destination | 0) - (transferred | 0)) | 0;\n    }\n}\nGameBoyAdvanceDMA0.prototype.nextEventTime = function () {\n    var clocks = 0x7FFFFFFF;\n    switch (this.enabled | 0) {\n            //V_BLANK\n        case 0x2:\n            clocks = this.gfxState.nextVBlankEventTime() | 0;\n            break;\n            //H_BLANK:\n        case 0x4:\n            clocks = this.gfxState.nextHBlankDMAEventTime() | 0;\n    }\n    return clocks | 0;\n}"],"names":["GameBoyAdvanceDMA0","IOCore","this","prototype","DMA_ENABLE_TYPE","initialize","enabled","pending","source","sourceShadow","destination","destinationShadow","wordCount","wordCountShadow","irqFlagging","dmaType","is32Bit","repeat","sourceControl","destinationControl","DMACore","dma","memory","gfxState","irq","validateDMASource","address","validateDMADestination","writeDMASource8_0","data","writeDMASource8_1","writeDMASource8_2","writeDMASource8_3","writeDMASource16_0","writeDMASource16_1","writeDMASource32","writeDMADestination8_0","writeDMADestination8_1","writeDMADestination8_2","writeDMADestination8_3","writeDMADestination16_0","writeDMADestination16_1","writeDMADestination32","writeDMAWordCount8_0","writeDMAWordCount8_1","writeDMAWordCount16","writeDMAControl8_0","writeDMAControl8_1","updateCoreClocking","enableDMAChannel","updateCoreEventTime","writeDMAControl16","writeDMAControl32","readDMAControl8_0","readDMAControl8_1","readDMAControl16","getMatchStatus","requestDMA","DMAType","update","handleDMACopy","copy32","copy16","memoryReadDMA16","memoryWriteDMA16","decrementWordCount","updateFetch","memoryReadDMA32","memoryWriteDMA32","transferred","finalizeDMA","incrementDMAAddresses","checkIRQTrigger","finalDMAAddresses","requestIRQ","nextEventTime","clocks","nextVBlankEventTime","nextHBlankDMAEventTime"],"version":3,"file":"index.3ab5fb56.js.map"}