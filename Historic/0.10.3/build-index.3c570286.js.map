{"mappings":"AAAA,SAASA,iBACLC,KAAKC,GAAK,IAAIC,MAAM,SACpBF,KAAKC,GAAGE,QAAQ,GAAGC,OAAO,CAAEC,MAAO,SACvC,CAEAN,eAAeO,UAAUC,QAAU,SAAUC,EAAKC,GAC9CT,KAAKC,GAAGI,MAAMK,IAAI,CAAEC,KAAMH,EAAKC,MAAOA,GAC1C,EAEAV,eAAeO,UAAUM,KAAO,SAAUJ,EAAKK,EAAU,MAAQ,MAAM,IAAIC,MAAM,iEAC7E,MAAO,WACH,IAAIC,QAAef,KAAKC,GAAGI,MAAMW,MAAM,QAAQC,OAAOT,GAAKU,QAG3D,OAFKH,GAAQF,MAETE,GACOA,EAAON,KAItB,EATO,EAUX,EAEAV,eAAeO,UAAUa,OAAS,SAAUX,GACxC,MAAO,iBAAoBR,KAAKC,GAAGI,MAAMW,MAAM,QAAQC,OAAOT,GAAKW,UAAUV,MAAtE,EACX,EAGAW,OAAOC,eAAiB,IAAItB","sources":["dist/user_scripts/Persistence/Storeage.js"],"sourcesContent":["function StorageManager() {\n    this.db = new Dexie(\"GBAXG\");\n    this.db.version(1).stores({ files: \"&name\" });\n}\n\nStorageManager.prototype.persist = function (key, value) {\n    this.db.files.put({ name: key, value: value})\n}\n\nStorageManager.prototype.find = function (key, onError = () => { throw new Error(\"No State Available. A new one will be created on launch...\")}) {\n    return (async () => {\n        let result = await this.db.files.where(\"name\").equals(key).first()\n        if (!result) onError();\n\n        if (result) {\n            return result.value\n        } else {\n            return false;\n        }\n    })();\n}\n\nStorageManager.prototype.delete = function (key) {\n    return (async () => (await this.db.files.where(\"name\").equals(key).delete()).value)();\n}\n\n\nwindow.storageManager = new StorageManager(); "],"names":["StorageManager","this","db","Dexie","version","stores","files","prototype","persist","key","value","put","name","find","onError","Error","result","where","equals","first","delete","window","storageManager"],"version":3,"file":"build-index.3c570286.js.map"}