{"mappings":"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","sources":["dist/IodineGBA/core/sound/Channel4.js"],"sourcesContent":["\"use strict\";\n/*\n Copyright (C) 2012-2015 Grant Galitz\n \n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n \n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n \n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction GameBoyAdvanceChannel4Synth(sound) {\n    this.sound = sound;\n    this.currentSampleLeft = 0;\n    this.currentSampleRight = 0;\n    this.totalLength = 0x40;\n    this.envelopeVolume = 0;\n    this.FrequencyPeriod = 32;\n    this.lastSampleLookup = 0;\n    this.BitRange =  0x7FFF;\n    this.VolumeShifter = 15;\n    this.currentVolume = 0;\n    this.consecutive = true;\n    this.envelopeSweeps = 0;\n    this.envelopeSweepsLast = -1;\n    this.canPlay = false;\n    this.Enabled = 0;\n    this.counter = 0;\n    this.leftEnable = 0;\n    this.rightEnable = 0;\n    this.nr42 = 0;\n    this.nr43 = 0;\n    this.nr44 = 0;\n    this.cachedSample = 0;\n    this.intializeWhiteNoise();\n    this.noiseSampleTable = this.LSFR15Table;\n}\nGameBoyAdvanceChannel4Synth.prototype.intializeWhiteNoise = function () {\n    //Noise Sample Tables:\n    var randomFactor = 1;\n    //15-bit LSFR Cache Generation:\n    this.LSFR15Table = getInt8Array(0x80000);\n    var LSFR = 0x7FFF;    //Seed value has all its bits set.\n    var LSFRShifted = 0x3FFF;\n    for (var index = 0; index < 0x8000; ++index) {\n        //Normalize the last LSFR value for usage:\n        randomFactor = 1 - (LSFR & 1);    //Docs say it's the inverse.\n        //Cache the different volume level results:\n        this.LSFR15Table[0x08000 | index] = randomFactor;\n        this.LSFR15Table[0x10000 | index] = randomFactor * 0x2;\n        this.LSFR15Table[0x18000 | index] = randomFactor * 0x3;\n        this.LSFR15Table[0x20000 | index] = randomFactor * 0x4;\n        this.LSFR15Table[0x28000 | index] = randomFactor * 0x5;\n        this.LSFR15Table[0x30000 | index] = randomFactor * 0x6;\n        this.LSFR15Table[0x38000 | index] = randomFactor * 0x7;\n        this.LSFR15Table[0x40000 | index] = randomFactor * 0x8;\n        this.LSFR15Table[0x48000 | index] = randomFactor * 0x9;\n        this.LSFR15Table[0x50000 | index] = randomFactor * 0xA;\n        this.LSFR15Table[0x58000 | index] = randomFactor * 0xB;\n        this.LSFR15Table[0x60000 | index] = randomFactor * 0xC;\n        this.LSFR15Table[0x68000 | index] = randomFactor * 0xD;\n        this.LSFR15Table[0x70000 | index] = randomFactor * 0xE;\n        this.LSFR15Table[0x78000 | index] = randomFactor * 0xF;\n        //Recompute the LSFR algorithm:\n        LSFRShifted = LSFR >> 1;\n        LSFR = LSFRShifted | (((LSFRShifted ^ LSFR) & 0x1) << 14);\n    }\n    //7-bit LSFR Cache Generation:\n    this.LSFR7Table = getInt8Array(0x800);\n    LSFR = 0x7F;    //Seed value has all its bits set.\n    for (index = 0; index < 0x80; ++index) {\n        //Normalize the last LSFR value for usage:\n        randomFactor = 1 - (LSFR & 1);    //Docs say it's the inverse.\n        //Cache the different volume level results:\n        this.LSFR7Table[0x080 | index] = randomFactor;\n        this.LSFR7Table[0x100 | index] = randomFactor * 0x2;\n        this.LSFR7Table[0x180 | index] = randomFactor * 0x3;\n        this.LSFR7Table[0x200 | index] = randomFactor * 0x4;\n        this.LSFR7Table[0x280 | index] = randomFactor * 0x5;\n        this.LSFR7Table[0x300 | index] = randomFactor * 0x6;\n        this.LSFR7Table[0x380 | index] = randomFactor * 0x7;\n        this.LSFR7Table[0x400 | index] = randomFactor * 0x8;\n        this.LSFR7Table[0x480 | index] = randomFactor * 0x9;\n        this.LSFR7Table[0x500 | index] = randomFactor * 0xA;\n        this.LSFR7Table[0x580 | index] = randomFactor * 0xB;\n        this.LSFR7Table[0x600 | index] = randomFactor * 0xC;\n        this.LSFR7Table[0x680 | index] = randomFactor * 0xD;\n        this.LSFR7Table[0x700 | index] = randomFactor * 0xE;\n        this.LSFR7Table[0x780 | index] = randomFactor * 0xF;\n        //Recompute the LSFR algorithm:\n        LSFRShifted = LSFR >> 1;\n        LSFR = LSFRShifted | (((LSFRShifted ^ LSFR) & 0x1) << 6);\n    }\n}\nGameBoyAdvanceChannel4Synth.prototype.disabled = function () {\n    //Clear NR41:\n    this.totalLength = 0x40;\n    //Clear NR42:\n    this.nr42 = 0;\n    this.envelopeVolume = 0;\n    //Clear NR43:\n    this.nr43 = 0;\n    this.FrequencyPeriod = 32;\n    this.lastSampleLookup = 0;\n    this.BitRange =  0x7FFF;\n    this.VolumeShifter = 15;\n    this.currentVolume = 0;\n    this.noiseSampleTable = this.LSFR15Table;\n    //Clear NR44:\n    this.nr44 = 0;\n    this.consecutive = true;\n    this.envelopeSweeps = 0;\n    this.envelopeSweepsLast = -1;\n    this.canPlay = false;\n    this.Enabled = 0;\n    this.counter = 0;\n}\nGameBoyAdvanceChannel4Synth.prototype.clockAudioLength = function () {\n    if ((this.totalLength | 0) > 1) {\n        this.totalLength = ((this.totalLength | 0) - 1) | 0;\n    }\n    else if ((this.totalLength | 0) == 1) {\n        this.totalLength = 0;\n        this.enableCheck();\n        this.sound.unsetNR52(0xF7);    //Channel #4 On Flag Off\n    }\n}\nGameBoyAdvanceChannel4Synth.prototype.clockAudioEnvelope = function () {\n    if ((this.envelopeSweepsLast | 0) > -1) {\n        if ((this.envelopeSweeps | 0) > 0) {\n            this.envelopeSweeps = ((this.envelopeSweeps | 0) - 1) | 0;\n        }\n        else {\n            if (!this.envelopeType) {\n                if ((this.envelopeVolume | 0) > 0) {\n                    this.envelopeVolume = ((this.envelopeVolume | 0) - 1) | 0;\n                    this.currentVolume = (this.envelopeVolume | 0) << (this.VolumeShifter | 0);\n                    this.envelopeSweeps = this.envelopeSweepsLast | 0;\n                }\n                else {\n                    this.envelopeSweepsLast = -1;\n                }\n            }\n            else if ((this.envelopeVolume | 0) < 0xF) {\n                this.envelopeVolume = ((this.envelopeVolume | 0) + 1) | 0;\n                this.currentVolume = (this.envelopeVolume | 0) << (this.VolumeShifter | 0);\n                this.envelopeSweeps = this.envelopeSweepsLast | 0;\n            }\n            else {\n                this.envelopeSweepsLast = -1;\n            }\n        }\n    }\n}\nGameBoyAdvanceChannel4Synth.prototype.computeAudioChannel = function () {\n    if ((this.counter | 0) == 0) {\n        this.lastSampleLookup = ((this.lastSampleLookup | 0) + 1) & this.BitRange;\n        this.counter = this.FrequencyPeriod | 0;\n    }\n}\nGameBoyAdvanceChannel4Synth.prototype.enableCheck = function () {\n    if ((this.consecutive || (this.totalLength | 0) > 0) && this.canPlay) {\n        this.Enabled = 0xF;\n    }\n    else {\n        this.Enabled = 0;\n    }\n}\nGameBoyAdvanceChannel4Synth.prototype.volumeEnableCheck = function () {\n    this.canPlay = ((this.nr42 | 0) > 7);\n    this.enableCheck();\n}\nGameBoyAdvanceChannel4Synth.prototype.outputLevelCache = function () {\n    var cachedSample = this.cachedSample & this.Enabled;\n    this.currentSampleLeft = this.leftEnable & cachedSample;\n    this.currentSampleRight = this.rightEnable & cachedSample;\n}\nGameBoyAdvanceChannel4Synth.prototype.setChannelOutputEnable = function (data) {\n    data = data | 0;\n    //Set by NR51 handler:\n    this.rightEnable = (data << 28) >> 31;\n    this.leftEnable = (data << 24) >> 31;\n}\nGameBoyAdvanceChannel4Synth.prototype.updateCache = function () {\n    this.cachedSample = this.noiseSampleTable[this.currentVolume | this.lastSampleLookup] | 0;\n    this.outputLevelCache();\n}\nGameBoyAdvanceChannel4Synth.prototype.writeSOUND4CNT_L0 = function (data) {\n    data = data | 0;\n    //NR41:\n    this.totalLength = (0x40 - (data & 0x3F)) | 0;\n    this.enableCheck();\n}\nGameBoyAdvanceChannel4Synth.prototype.writeSOUND4CNT_L1 = function (data) {\n    data = data | 0;\n    //NR42:\n    this.envelopeType = ((data & 0x08) != 0);\n    this.nr42 = data & 0xFF;\n    this.volumeEnableCheck();\n}\nGameBoyAdvanceChannel4Synth.prototype.readSOUND4CNT_L = function () {\n    //NR42:\n    return this.nr42 | 0;\n}\nGameBoyAdvanceChannel4Synth.prototype.writeSOUND4CNT_H0 = function (data) {\n    data = data | 0;\n    //NR43:\n    this.FrequencyPeriod = Math.max((data & 0x7) << 4, 8) << ((((data >> 4) & 0xF) + 2) | 0);\n    var bitWidth = data & 0x8;\n    if (((bitWidth | 0) == 0x8 && (this.BitRange | 0) == 0x7FFF) || ((bitWidth | 0) == 0 && (this.BitRange | 0) == 0x7F)) {\n        this.lastSampleLookup = 0;\n        this.BitRange = ((bitWidth | 0) == 0x8) ? 0x7F : 0x7FFF;\n        this.VolumeShifter = ((bitWidth | 0) == 0x8) ? 7 : 15;\n        this.currentVolume = this.envelopeVolume << (this.VolumeShifter | 0);\n        this.noiseSampleTable = ((bitWidth | 0) == 0x8) ? this.LSFR7Table : this.LSFR15Table;\n    }\n    this.nr43 = data & 0xFF;\n}\nGameBoyAdvanceChannel4Synth.prototype.readSOUND4CNT_H0 = function () {\n    //NR43:\n    return this.nr43 | 0;\n}\nGameBoyAdvanceChannel4Synth.prototype.writeSOUND4CNT_H1 = function (data) {\n    data = data | 0;\n    //NR44:\n    this.nr44 = data & 0xFF;\n    this.consecutive = ((data & 0x40) == 0x0);\n    if ((data & 0x80) != 0) {\n        this.envelopeVolume = this.nr42 >> 4;\n        this.currentVolume = this.envelopeVolume << (this.VolumeShifter | 0);\n        this.envelopeSweepsLast = ((this.nr42 & 0x7) - 1) | 0;\n        if ((this.totalLength | 0) == 0) {\n            this.totalLength = 0x40;\n        }\n        if ((data & 0x40) != 0) {\n            this.sound.setNR52(0x8);\n        }\n    }\n    this.enableCheck();\n}\nGameBoyAdvanceChannel4Synth.prototype.readSOUND4CNT_H1 = function () {\n    //NR44:\n    return this.nr44 | 0;\n}"],"names":["GameBoyAdvanceChannel4Synth","sound","this","currentSampleLeft","currentSampleRight","totalLength","envelopeVolume","FrequencyPeriod","lastSampleLookup","BitRange","VolumeShifter","currentVolume","consecutive","envelopeSweeps","envelopeSweepsLast","canPlay","Enabled","counter","leftEnable","rightEnable","nr42","nr43","nr44","cachedSample","intializeWhiteNoise","noiseSampleTable","LSFR15Table","prototype","randomFactor","getInt8Array","LSFR","LSFRShifted","index","LSFR7Table","disabled","clockAudioLength","enableCheck","unsetNR52","clockAudioEnvelope","envelopeType","computeAudioChannel","volumeEnableCheck","outputLevelCache","setChannelOutputEnable","data","updateCache","writeSOUND4CNT_L0","writeSOUND4CNT_L1","readSOUND4CNT_L","writeSOUND4CNT_H0","Math","max","bitWidth","readSOUND4CNT_H0","writeSOUND4CNT_H1","setNR52","readSOUND4CNT_H1"],"version":3,"file":"build-index.83546636.js.map"}