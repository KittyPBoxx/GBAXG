{"mappings":"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","sources":["dist/IodineGBA/core/Wait.js"],"sourcesContent":["\"use strict\";\n/*\n Copyright (C) 2012-2015 Grant Galitz\n \n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n \n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n \n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction GameBoyAdvanceWait(IOCore) {\n    //Build references:\n    this.IOCore = IOCore;\n}\nGameBoyAdvanceWait.prototype.initialize = function () {\n    this.memory = this.IOCore.memory;\n    this.cpu = this.IOCore.cpu;\n    this.WRAMConfiguration = 0xD000020;     //WRAM configuration control register current data.\n    this.WRAMWaitState = 3;                 //External WRAM wait state.\n    this.SRAMWaitState = 5;                 //SRAM wait state.\n    this.WAITCNT0 = 0;                      //WAITCNT0 control register data.\n    this.WAITCNT1 = 0;                      //WAITCNT1 control register data.\n    this.POSTBOOT = 0;                      //POSTBOOT control register data.\n    this.isRendering = 1;                   //Are we doing memory during screen draw?\n    this.isOAMRendering = 1;                //Are we doing memory during OAM draw?\n    this.nonSequential = 0x10;              //Non-sequential access bit-flag.\n    this.buffer = 0;                        //Tracking of the size of the prebuffer cache.\n    this.clocks = 0;                        //Tracking clocks for prebuffer cache.\n    //Create the wait state address translation cache:\n    this.waitStateClocks16 = getUint8Array(0x20);\n    this.waitStateClocks32 = getUint8Array(0x20);\n    //Wait State 0:\n    this.setWaitState(0, 0);\n    //Wait State 1:\n    this.setWaitState(1, 0);\n    //Wait State 2:\n    this.setWaitState(2, 0);\n    //Initialize out some dynamic references:\n    this.getROMRead16 = this.getROMRead16NoPrefetch;\n    this.getROMRead32 = this.getROMRead32NoPrefetch;\n    this.CPUInternalCyclePrefetch = this.CPUInternalCycleNoPrefetch;\n    this.CPUInternalSingleCyclePrefetch = this.CPUInternalSingleCycleNoPrefetch;\n}\nGameBoyAdvanceWait.prototype.getWaitStateFirstAccess = function (data) {\n    //Get the first access timing:\n    data = data | 0;\n    data = data & 0x3;\n    if ((data | 0) < 0x3) {\n        data = (5 - (data | 0)) | 0;\n    }\n    else {\n        data = 9;\n    }\n    return data | 0;\n}\nGameBoyAdvanceWait.prototype.getWaitStateSecondAccess = function (region, data) {\n    //Get the second access timing:\n    region = region | 0;\n    data = data | 0;\n    if ((data & 0x4) == 0) {\n        data = 0x2 << (region | 0);\n        data = ((data | 0) + 1) | 0;\n    }\n    else {\n        data = 0x2;\n    }\n    return data | 0;\n}\nGameBoyAdvanceWait.prototype.setWaitState = function (region, data) {\n    region = region | 0;\n    data = data | 0;\n    //Wait State First Access:\n    var firstAccess = this.getWaitStateFirstAccess(data & 0x3) | 0;\n    //Wait State Second Access:\n    var secondAccess = this.getWaitStateSecondAccess(region | 0, data | 0) | 0;\n    region = region << 1;\n    //Computing First Access:\n    //8-16 bit access:\n    this.waitStateClocks16[0x18 | region] = firstAccess | 0;\n    this.waitStateClocks16[0x19 | region] = firstAccess | 0;\n    //32 bit access:\n    var accessTime = ((firstAccess | 0) + (secondAccess | 0)) | 0;\n    this.waitStateClocks32[0x18 | region] = accessTime | 0;\n    this.waitStateClocks32[0x19 | region] = accessTime | 0;\n    //Computing Second Access:\n    //8-16 bit access:\n    this.waitStateClocks16[0x8 | region] = secondAccess | 0;\n    this.waitStateClocks16[0x9 | region] = secondAccess | 0;\n    //32 bit access:\n    this.waitStateClocks32[0x8 | region] = secondAccess << 1;\n    this.waitStateClocks32[0x9 | region] = secondAccess << 1;\n}\nGameBoyAdvanceWait.prototype.writeWAITCNT8_0 = function (data) {\n    data = data | 0;\n    //Set SRAM Wait State:\n    if ((data & 0x3) < 0x3) {\n        this.SRAMWaitState = (5 - (data & 0x3)) | 0;\n    }\n    else {\n        this.SRAMWaitState = 9;\n    }\n    data = data & 0xFF;\n    //Set Wait State 0:\n    this.setWaitState(0, data >> 2);\n    //Set Wait State 1:\n    this.setWaitState(1, data >> 5);\n    this.WAITCNT0 = data | 0;\n}\nGameBoyAdvanceWait.prototype.readWAITCNT8_0 = function () {\n    return this.WAITCNT0 | 0;\n}\nGameBoyAdvanceWait.prototype.writeWAITCNT8_1 = function (data) {\n    data = data | 0;\n    //Set Wait State 2:\n    this.setWaitState(2, data & 0xFF);\n    //Set Prefetch Mode:\n    if ((data & 0x40) == 0) {\n        //No Prefetch:\n        this.resetPrebuffer();\n        this.getROMRead16 = this.getROMRead16NoPrefetch;\n        this.getROMRead32 = this.getROMRead32NoPrefetch;\n        this.CPUInternalCyclePrefetch = this.CPUInternalCycleNoPrefetch;\n        this.CPUInternalSingleCyclePrefetch = this.CPUInternalSingleCycleNoPrefetch;\n    }\n    else {\n        //Prefetch Enabled:\n        this.getROMRead16 = this.getROMRead16Prefetch;\n        this.getROMRead32 = this.getROMRead32Prefetch;\n        this.CPUInternalCyclePrefetch = this.multiClock;\n        this.CPUInternalSingleCyclePrefetch = this.singleClock;\n    }\n    this.WAITCNT1 = data & 0x5F;\n}\nGameBoyAdvanceWait.prototype.readWAITCNT8_1 = function () {\n    return this.WAITCNT1 | 0;\n}\nGameBoyAdvanceWait.prototype.writeWAITCNT16 = function (data) {\n    this.writeWAITCNT8_0(data | 0);\n    this.writeWAITCNT8_1(data >> 8);\n}\nGameBoyAdvanceWait.prototype.readWAITCNT16 = function () {\n    var data = this.WAITCNT0 | 0;\n    data = data | (this.WAITCNT1 << 8);\n    return data | 0;\n}\nGameBoyAdvanceWait.prototype.writePOSTBOOT = function (data) {\n    this.POSTBOOT = data & 0xFF;\n}\nGameBoyAdvanceWait.prototype.readPOSTBOOT = function () {\n    return this.POSTBOOT | 0;\n}\nGameBoyAdvanceWait.prototype.writeHALTCNT = function (data) {\n    data = data | 0;\n    this.IOCore.updateCoreSpillRetain();\n    //HALT/STOP mode entrance:\n    if ((data & 0x80) == 0) {\n        //Halt:\n        this.IOCore.flagHalt();\n    }\n    else {\n        //Stop:\n        this.IOCore.flagStop();\n    }\n}\nGameBoyAdvanceWait.prototype.writeHALT16 = function (data) {\n    data = data | 0;\n    this.POSTBOOT = data & 0xFF;\n    this.IOCore.updateCoreSpillRetain();\n    //HALT/STOP mode entrance:\n    if ((data & 0x8000) == 0) {\n        //Halt:\n        this.IOCore.flagHalt();\n    }\n    else {\n        //Stop:\n        this.IOCore.flagStop();\n    }\n}\nGameBoyAdvanceWait.prototype.writeConfigureWRAM8 = function (address, data) {\n    address = address | 0;\n    data = data | 0;\n    switch (address & 0x3) {\n        case 0:\n            this.memory.remapWRAM(data & 0x21);\n            this.WRAMConfiguration = (this.WRAMConfiguration & 0xFFFFFF00) | (data & 0xFF);\n            break;\n        case 1:\n            this.WRAMConfiguration = (this.WRAMConfiguration & 0xFFFF00FF) | ((data & 0xFF) << 8);\n            break;\n        case 2:\n            this.WRAMConfiguration = (this.WRAMConfiguration & 0xFF00FFFF) | ((data & 0xFF) << 16);\n            break;\n        default:\n            this.WRAMWaitState = (0x10 - (data & 0xF)) | 0;\n            this.WRAMConfiguration = (this.WRAMConfiguration & 0xFFFFFF) | (data << 24);\n    }\n}\nGameBoyAdvanceWait.prototype.writeConfigureWRAM16 = function (address, data) {\n    address = address | 0;\n    data = data | 0;\n    if ((address & 0x2) == 0) {\n        this.WRAMConfiguration = (this.WRAMConfiguration & 0xFFFF0000) | (data & 0xFFFF);\n        this.memory.remapWRAM(data & 0x21);\n    }\n    else {\n        this.WRAMConfiguration = (data << 16) | (this.WRAMConfiguration & 0xFFFF);\n        this.WRAMWaitState = (0x10 - ((data >> 8) & 0xF)) | 0;\n    }\n}\nGameBoyAdvanceWait.prototype.writeConfigureWRAM32 = function (data) {\n    data = data | 0;\n    this.WRAMConfiguration = data | 0;\n    this.WRAMWaitState = (0x10 - ((data >> 24) & 0xF)) | 0;\n    this.memory.remapWRAM(data & 0x21);\n}\nGameBoyAdvanceWait.prototype.readConfigureWRAM8 = function (address) {\n    address = address | 0;\n    var data = 0;\n    switch (address & 0x3) {\n        case 0:\n            data = this.WRAMConfiguration & 0x2F;\n            break;\n        case 3:\n            data = this.WRAMConfiguration >>> 24;\n    }\n    return data | 0;\n}\nGameBoyAdvanceWait.prototype.readConfigureWRAM16 = function (address) {\n    address = address | 0;\n    var data = 0;\n    if ((address & 0x2) == 0) {\n        data = this.WRAMConfiguration & 0x2F;\n    }\n    else {\n        data = (this.WRAMConfiguration >> 16) & 0xFF00;\n    }\n    return data | 0;\n}\nGameBoyAdvanceWait.prototype.readConfigureWRAM32 = function () {\n    return this.WRAMConfiguration & 0xFF00002F;\n}\nGameBoyAdvanceWait.prototype.CPUInternalCycleNoPrefetch = function (clocks) {\n    clocks = clocks | 0;\n    //Clock for idle CPU time:\n    this.IOCore.updateCore(clocks | 0);\n    //Prebuffer bug:\n    this.checkPrebufferBug();\n}\nGameBoyAdvanceWait.prototype.CPUInternalSingleCycleNoPrefetch = function () {\n    //Clock for idle CPU time:\n    this.IOCore.updateCoreSingle();\n    //Not enough time for prebuffer buffering, so skip it.\n    //Prebuffer bug:\n    this.checkPrebufferBug();\n}\nGameBoyAdvanceWait.prototype.checkPrebufferBug = function () {\n    //Issue a non-sequential cycle for the next read if we did an I-cycle:\n    var address = this.cpu.registers[15] | 0;\n    if ((address | 0) >= 0x8000000 && (address | 0) < 0xE000000) {\n        this.NonSequentialBroadcast();\n    }\n}\nGameBoyAdvanceWait.prototype.NonSequentialBroadcast = function () {\n    //Flag as N cycle:\n    this.nonSequential = 0x10;\n}\nGameBoyAdvanceWait.prototype.NonSequentialBroadcastClear = function () {\n    //PC branched:\n    this.NonSequentialBroadcast();\n    this.resetPrebuffer();\n}\nGameBoyAdvanceWait.prototype.check128kAlignmentBug = function (address) {\n    address = address | 0;\n    if ((address & 0x1FFFF) == 0) {\n        this.NonSequentialBroadcast();\n    }\n}\nGameBoyAdvanceWait.prototype.multiClock = function (clocks) {\n    clocks = clocks | 0;\n    this.IOCore.updateCore(clocks | 0);\n    var address = this.cpu.registers[15] | 0;\n    if ((address | 0) >= 0x8000000 && (address | 0) < 0xE000000) {\n        if ((this.clocks | 0) < 0xFF) {\n            this.clocks = ((this.clocks | 0) + (clocks | 0)) | 0;\n        }\n    }\n    else {\n        this.resetPrebuffer();\n    }\n}\nGameBoyAdvanceWait.prototype.singleClock = function () {\n    this.IOCore.updateCoreSingle();\n    var address = this.cpu.registers[15] | 0;\n    if ((address | 0) >= 0x8000000 && (address | 0) < 0xE000000) {\n        if ((this.clocks | 0) < 0xFF) {\n            this.clocks = ((this.clocks | 0) + 1) | 0;\n        }\n    }\n    else {\n        this.resetPrebuffer();\n    }\n}\nGameBoyAdvanceWait.prototype.addPrebufferSingleClock = function () {\n    this.clocks = ((this.clocks | 0) + 1) | 0;\n}\nGameBoyAdvanceWait.prototype.decrementBufferSingle = function () {\n    this.buffer = ((this.buffer | 0) - 1) | 0;\n}\nGameBoyAdvanceWait.prototype.decrementBufferDouble = function () {\n    this.buffer = ((this.buffer | 0) - 2) | 0;\n}\nGameBoyAdvanceWait.prototype.resetPrebuffer = function () {\n    //Reset the buffering:\n    this.clocks = 0;\n    this.buffer = 0;\n}\nGameBoyAdvanceWait.prototype.drainOverdueClocks = function () {\n    if ((this.clocks | 0) > 0 && (this.buffer | 0) < 8) {\n        var address = this.cpu.registers[15] >>> 24;\n        //Convert built up clocks to 16 bit word buffer units:\n        do {\n            this.clocks = ((this.clocks | 0) - (this.waitStateClocks16[address | 0] | 0)) | 0;\n            this.buffer = ((this.buffer | 0) + 1) | 0;\n        } while ((this.clocks | 0) > 0 && (this.buffer | 0) < 8);\n        //If we're deficient in clocks, fit them in before the access:\n        if ((this.clocks | 0) < 0) {\n            this.IOCore.updateCoreNegative(this.clocks | 0);\n            this.clocks = 0;\n        }\n    }\n}\nGameBoyAdvanceWait.prototype.computeClocks = function (address) {\n    address = address | 0;\n    //Convert built up clocks to 16 bit word buffer units:\n    while ((this.buffer | 0) < 8 && (this.clocks | 0) >= (this.waitStateClocks16[address | 0] | 0)) {\n        this.clocks = ((this.clocks | 0) - (this.waitStateClocks16[address | 0] | 0)) | 0;\n        this.buffer = ((this.buffer | 0) + 1) | 0;\n    }\n}\nGameBoyAdvanceWait.prototype.drainOverdueClocksCPU = function () {\n    if ((this.clocks | 0) < 0) {\n        //Compute \"overdue\" clocks:\n        this.IOCore.updateCoreNegative(this.clocks | 0);\n        this.clocks = 0;\n    }\n    else {\n        //Buffer satiated, clock 1:\n        this.IOCore.updateCoreSingle();\n    }\n}\nGameBoyAdvanceWait.prototype.doGamePakFetch16 = function (address) {\n    address = address | 0;\n    //Fetch 16 bit word into buffer:\n    this.clocks = ((this.clocks | 0) - (this.waitStateClocks16[address | this.nonSequential] | 0)) | 0;\n    this.nonSequential = 0;\n}\nGameBoyAdvanceWait.prototype.doGamePakFetch32 = function (address) {\n    address = address | 0;\n    //Fetch 16 bit word into buffer:\n    this.clocks = ((this.clocks | 0) - (this.waitStateClocks32[address | this.nonSequential] | 0)) | 0;\n    this.nonSequential = 0;\n}\nGameBoyAdvanceWait.prototype.getROMRead16Prefetch = function (address) {\n    //Caching enabled:\n    address = address | 0;\n    //Resolve clocks to buffer units:\n    this.computeClocks(address | 0);\n    //Need 16 bits minimum buffered:\n    switch (this.buffer | 0) {\n        case 0:\n            //Fetch 16 bit word into buffer:\n            this.doGamePakFetch16(address | 0);\n            break;\n        default:\n            //Instruction fetch is 1 clock wide minimum:\n            this.addPrebufferSingleClock();\n            //Decrement the buffer:\n            this.decrementBufferSingle();\n    }\n    //Clock the state:\n    this.drainOverdueClocksCPU();\n}\nGameBoyAdvanceWait.prototype.getROMRead16NoPrefetch = function (address) {\n    //Caching disabled:\n    address = address | 0;\n    this.IOCore.updateCore(this.waitStateClocks16[address | this.nonSequential] | 0);\n    this.nonSequential = 0;\n}\nGameBoyAdvanceWait.prototype.getROMRead32Prefetch = function (address) {\n    //Caching enabled:\n    address = address | 0;\n    //Resolve clocks to buffer units:\n    this.computeClocks(address | 0);\n    //Need 32 bits minimum buffered:\n    switch (this.buffer | 0) {\n        case 0:\n            //Fetch two 16 bit words into buffer:\n            this.doGamePakFetch32(address | 0);\n            break;\n        case 1:\n            //Fetch a 16 bit word into buffer:\n            this.doGamePakFetch16(address | 0);\n            this.buffer = 0;\n            break;\n        default:\n            //Instruction fetch is 1 clock wide minimum:\n            this.addPrebufferSingleClock();\n            //Decrement the buffer:\n            this.decrementBufferDouble();\n    }\n    //Clock the state:\n    this.drainOverdueClocksCPU();\n}\nGameBoyAdvanceWait.prototype.getROMRead32NoPrefetch = function (address) {\n    //Caching disabled:\n    address = address | 0;\n    this.IOCore.updateCore(this.waitStateClocks32[address | this.nonSequential] | 0);\n    this.nonSequential = 0;\n}\nGameBoyAdvanceWait.prototype.WRAMAccess = function () {\n    this.multiClock(this.WRAMWaitState | 0);\n}\nGameBoyAdvanceWait.prototype.WRAMAccess16CPU = function () {\n    this.IOCore.updateCore(this.WRAMWaitState | 0);\n}\nGameBoyAdvanceWait.prototype.WRAMAccess32 = function () {\n    this.multiClock(this.WRAMWaitState << 1);\n}\nGameBoyAdvanceWait.prototype.WRAMAccess32CPU = function () {\n    this.IOCore.updateCore(this.WRAMWaitState << 1);\n}\nGameBoyAdvanceWait.prototype.ROMAccess = function (address) {\n    address = address | 0;\n    this.drainOverdueClocks();\n    this.check128kAlignmentBug(address | 0);\n    this.IOCore.updateCore(this.waitStateClocks16[(address >> 24) | this.nonSequential] | 0);\n    this.nonSequential = 0;\n}\nGameBoyAdvanceWait.prototype.ROMAccess16CPU = function (address) {\n    address = address | 0;\n    this.check128kAlignmentBug(address | 0);\n    this.getROMRead16(address >> 24);\n}\nGameBoyAdvanceWait.prototype.ROMAccess32 = function (address) {\n    address = address | 0;\n    this.drainOverdueClocks();\n    this.check128kAlignmentBug(address | 0);\n    this.IOCore.updateCore(this.waitStateClocks32[(address >> 24) | this.nonSequential] | 0);\n    this.nonSequential = 0;\n}\nGameBoyAdvanceWait.prototype.ROMAccess32CPU = function (address) {\n    address = address | 0;\n    this.check128kAlignmentBug(address | 0);\n    this.getROMRead32(address >> 24);\n}\nGameBoyAdvanceWait.prototype.SRAMAccess = function () {\n    this.multiClock(this.SRAMWaitState | 0);\n}\nGameBoyAdvanceWait.prototype.SRAMAccessCPU = function () {\n    this.resetPrebuffer();\n    this.IOCore.updateCore(this.SRAMWaitState | 0);\n}\nGameBoyAdvanceWait.prototype.VRAMAccess = function () {\n    this.multiClock(this.isRendering | 0);\n}\nGameBoyAdvanceWait.prototype.VRAMAccess16CPU = function () {\n    this.IOCore.updateCore(this.isRendering | 0);\n}\nGameBoyAdvanceWait.prototype.VRAMAccess32 = function () {\n    this.multiClock(this.isRendering << 1);\n}\nGameBoyAdvanceWait.prototype.VRAMAccess32CPU = function () {\n    this.IOCore.updateCore(this.isRendering << 1);\n}\nGameBoyAdvanceWait.prototype.OAMAccess = function () {\n    this.multiClock(this.isOAMRendering | 0);\n}\nGameBoyAdvanceWait.prototype.OAMAccessCPU = function () {\n    this.IOCore.updateCore(this.isOAMRendering | 0);\n}\nGameBoyAdvanceWait.prototype.updateRenderStatus = function (isRendering, isOAMRendering) {\n    this.isRendering = isRendering | 0;\n    this.isOAMRendering = isOAMRendering | 0;\n}"],"names":["GameBoyAdvanceWait","IOCore","this","prototype","initialize","memory","cpu","WRAMConfiguration","WRAMWaitState","SRAMWaitState","WAITCNT0","WAITCNT1","POSTBOOT","isRendering","isOAMRendering","nonSequential","buffer","clocks","waitStateClocks16","getUint8Array","waitStateClocks32","setWaitState","getROMRead16","getROMRead16NoPrefetch","getROMRead32","getROMRead32NoPrefetch","CPUInternalCyclePrefetch","CPUInternalCycleNoPrefetch","CPUInternalSingleCyclePrefetch","CPUInternalSingleCycleNoPrefetch","getWaitStateFirstAccess","data","getWaitStateSecondAccess","region","firstAccess","secondAccess","accessTime","writeWAITCNT8_0","readWAITCNT8_0","writeWAITCNT8_1","resetPrebuffer","getROMRead16Prefetch","getROMRead32Prefetch","multiClock","singleClock","readWAITCNT8_1","writeWAITCNT16","readWAITCNT16","writePOSTBOOT","readPOSTBOOT","writeHALTCNT","updateCoreSpillRetain","flagHalt","flagStop","writeHALT16","writeConfigureWRAM8","address","remapWRAM","writeConfigureWRAM16","writeConfigureWRAM32","readConfigureWRAM8","readConfigureWRAM16","readConfigureWRAM32","updateCore","checkPrebufferBug","updateCoreSingle","registers","NonSequentialBroadcast","NonSequentialBroadcastClear","check128kAlignmentBug","addPrebufferSingleClock","decrementBufferSingle","decrementBufferDouble","drainOverdueClocks","updateCoreNegative","computeClocks","drainOverdueClocksCPU","doGamePakFetch16","doGamePakFetch32","WRAMAccess","WRAMAccess16CPU","WRAMAccess32","WRAMAccess32CPU","ROMAccess","ROMAccess16CPU","ROMAccess32","ROMAccess32CPU","SRAMAccess","SRAMAccessCPU","VRAMAccess","VRAMAccess16CPU","VRAMAccess32","VRAMAccess32CPU","OAMAccess","OAMAccessCPU","updateRenderStatus"],"version":3,"file":"build-index.91218e0f.js.map"}