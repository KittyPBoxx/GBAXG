{"mappings":"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","sources":["dist/IodineGBA/core/memory/DMA3.js"],"sourcesContent":["\"use strict\";\n/*\n Copyright (C) 2012-2015 Grant Galitz\n \n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n \n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n \n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction GameBoyAdvanceDMA3(IOCore) {\n    this.IOCore = IOCore;\n}\nGameBoyAdvanceDMA3.prototype.DMA_ENABLE_TYPE = [            //DMA Channel 3 Mapping:\n    0x1,\n    0x2,\n    0x4,\n    0x20\n];\nGameBoyAdvanceDMA3.prototype.initialize = function () {\n    this.enabled = 0;\n    this.pending = 0;\n    this.source = 0;\n    this.sourceShadow = 0;\n    this.destination = 0;\n    this.destinationShadow = 0;\n    this.wordCount = 0;\n    this.wordCountShadow = 0;\n    this.irqFlagging = 0;\n    this.dmaType = 0;\n    this.is32Bit = 0;\n    this.repeat = 0;\n    this.sourceControl = 0;\n    this.destinationControl = 0;\n    this.gamePakDMA = 0;\n\tthis.displaySyncEnableDelay = 0;\n    this.DMACore = this.IOCore.dma;\n    this.memory = this.IOCore.memory;\n    this.gfxState = this.IOCore.gfxState;\n    this.irq = this.IOCore.irq;\n}\nGameBoyAdvanceDMA3.prototype.validateDMASource = function (address) {\n    address = address | 0;\n    if ((address | 0) >= 0x2000000) {\n        this.source = address | 0;\n    }\n}\nGameBoyAdvanceDMA3.prototype.writeDMASource8_0 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFFFF00;\n    data = data & 0xFF;\n    source = source | data;\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA3.prototype.writeDMASource8_1 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFF00FF;\n    data = data & 0xFF;\n    source = source | (data << 8);\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA3.prototype.writeDMASource8_2 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xF00FFFF;\n    data = data & 0xFF;\n    source = source | (data << 16);\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA3.prototype.writeDMASource8_3 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFFFFF;\n    data = data & 0xF;\n    source = source | (data << 24);\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA3.prototype.writeDMASource16_0 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFF0000;\n    data = data & 0xFFFF;\n    source = source | data;\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA3.prototype.writeDMASource16_1 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFFF;\n    data = data & 0xFFF;\n    source = source | (data << 16);\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA3.prototype.writeDMASource32 = function (data) {\n    data = data | 0;\n    var source = data & 0xFFFFFFF;\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA3.prototype.writeDMADestination8_0 = function (data) {\n    data = data | 0;\n    this.destination = this.destination & 0xFFFFF00;\n    data = data & 0xFF;\n    this.destination = this.destination | data;\n}\nGameBoyAdvanceDMA3.prototype.writeDMADestination8_1 = function (data) {\n    data = data | 0;\n    this.destination = this.destination & 0xFFF00FF;\n    data = data & 0xFF;\n    this.destination = this.destination | (data << 8);\n}\nGameBoyAdvanceDMA3.prototype.writeDMADestination8_2 = function (data) {\n    data = data | 0;\n    this.destination = this.destination & 0xF00FFFF;\n    data = data & 0xFF;\n    this.destination = this.destination | (data << 16);\n}\nGameBoyAdvanceDMA3.prototype.writeDMADestination8_3 = function (data) {\n    data = data | 0;\n    this.destination = this.destination & 0xFFFFFF;\n    data = data & 0xF;\n    this.destination = this.destination | (data << 24);\n}\nGameBoyAdvanceDMA3.prototype.writeDMADestination16_0 = function (data) {\n    data = data | 0;\n    this.destination = this.destination & 0xFFF0000;\n    data = data & 0xFFFF;\n    this.destination = this.destination | data;\n}\nGameBoyAdvanceDMA3.prototype.writeDMADestination16_1 = function (data) {\n    data = data | 0;\n    this.destination = this.destination & 0xFFFF;\n    data = data & 0xFFF;\n    this.destination = this.destination | (data << 16);\n}\nGameBoyAdvanceDMA3.prototype.writeDMADestination32 = function (data) {\n    data = data | 0;\n    this.destination = data & 0xFFFFFFF;\n}\nGameBoyAdvanceDMA3.prototype.writeDMAWordCount8_0 = function (data) {\n    data = data | 0;\n    this.wordCount = this.wordCount & 0xFF00;\n    data = data & 0xFF;\n    this.wordCount = this.wordCount | data;\n}\nGameBoyAdvanceDMA3.prototype.writeDMAWordCount8_1 = function (data) {\n    data = data | 0;\n    this.wordCount = this.wordCount & 0xFF;\n    data = data & 0xFF;\n    this.wordCount = this.wordCount | (data << 8);\n}\nGameBoyAdvanceDMA3.prototype.writeDMAWordCount16 = function (data) {\n    data = data | 0;\n    this.wordCount = data & 0xFFFF;\n}\nGameBoyAdvanceDMA3.prototype.writeDMAControl8_0 = function (data) {\n    data = data | 0;\n    this.destinationControl = (data >> 5) & 0x3;\n    this.sourceControl = this.sourceControl & 0x2;\n    this.sourceControl = this.sourceControl | ((data >> 7) & 0x1);\n}\nGameBoyAdvanceDMA3.prototype.writeDMAControl8_1 = function (data) {\n    data = data | 0;\n    //Spill state machine clocks:\n    this.IOCore.updateCoreClocking();\n    this.sourceControl = (this.sourceControl & 0x1) | ((data & 0x1) << 1);\n    this.repeat = data & 0x2;\n    this.is32Bit = data & 0x4;\n    this.gamePakDMA = data & 0x8;\n    this.dmaType = (data >> 4) & 0x3;\n    this.irqFlagging = data & 0x40;\n    this.enableDMAChannel(data & 0x80);\n    //Calculate next event:\n    this.IOCore.updateCoreEventTime();\n}\nGameBoyAdvanceDMA3.prototype.writeDMAControl16 = function (data) {\n    data = data | 0;\n    //Spill state machine clocks:\n    this.IOCore.updateCoreClocking();\n    this.destinationControl = (data >> 5) & 0x3;\n    this.sourceControl = (data >> 7) & 0x3;\n    this.repeat = (data >> 8) & 0x2;\n    this.is32Bit = (data >> 8) & 0x4;\n    this.gamePakDMA = (data >> 8) & 0x8;\n    this.dmaType = (data >> 12) & 0x3;\n    this.irqFlagging = (data >> 8) & 0x40;\n    this.enableDMAChannel(data & 0x8000);\n    //Calculate next event:\n    this.IOCore.updateCoreEventTime();\n}\nGameBoyAdvanceDMA3.prototype.writeDMAControl32 = function (data) {\n    data = data | 0;\n    this.writeDMAWordCount16(data | 0);\n    this.writeDMAControl16(data >> 16);\n}\nGameBoyAdvanceDMA3.prototype.readDMAControl8_0 = function () {\n    var data = this.destinationControl << 5;\n    data = data | ((this.sourceControl & 0x1) << 7);\n    return data | 0;\n}\nGameBoyAdvanceDMA3.prototype.readDMAControl8_1 = function () {\n    var data = this.sourceControl >> 1;\n    data = data | this.repeat;\n    data = data | this.is32Bit;\n    data = data | this.gamePakDMA;\n    data = data | (this.dmaType << 4);\n    data = data | this.irqFlagging;\n    if ((this.enabled | 0) != 0) {\n        data = data | 0x80;\n    }\n    return data | 0;\n}\nGameBoyAdvanceDMA3.prototype.readDMAControl16 = function () {\n    var data = this.destinationControl << 5;\n    data = data | (this.sourceControl << 7);\n    data = data | (this.repeat << 8);\n    data = data | (this.is32Bit << 8);\n    data = data | (this.gamePakDMA << 8);\n    data = data | (this.dmaType << 12);\n    data = data | (this.irqFlagging << 8);\n    if ((this.enabled | 0) != 0) {\n        data = data | 0x8000;\n    }\n    return data | 0;\n}\nGameBoyAdvanceDMA3.prototype.getMatchStatus = function () {\n    return this.enabled & this.pending;\n}\nGameBoyAdvanceDMA3.prototype.gfxDisplaySyncRequest = function () {\n    this.requestDMA(0x20 ^ this.displaySyncEnableDelay);\n}\nGameBoyAdvanceDMA3.prototype.gfxDisplaySyncEnableCheck = function () {\n\t//Reset the display sync & reassert DMA enable line:\n    if ((this.enabled | 0) == 0x20) {\n        if ((this.displaySyncEnableDelay | 0) == 0x20) {\n            this.displaySyncEnableDelay = 0;\n        }\n        else {\n            this.enabled = 0;\n            this.DMACore.update();\n        }\n    }\n}\nGameBoyAdvanceDMA3.prototype.requestDMA = function (DMAType) {\n    DMAType = DMAType | 0;\n    if ((this.enabled & DMAType) != 0) {\n        this.pending = DMAType | 0;\n        this.DMACore.update();\n    }\n}\nGameBoyAdvanceDMA3.prototype.enableDMAChannel = function (enabled) {\n    enabled = enabled | 0;\n    if ((enabled | 0) != 0) {\n        //If DMA was previously disabled, reload control registers:\n        if ((this.enabled | 0) == 0) {\n            switch (this.dmaType | 0) {\n                case 0:\n                    //Flag immediate DMA transfers for processing now:\n                    this.pending = 0x1;\n                    break;\n                case 0x3:\n                    //Trigger display sync DMA shadow enable and auto-check on line 162:\n                    this.displaySyncEnableDelay = 0x20;\n            }\n            //Shadow copy the word count:\n            this.wordCountShadow = this.wordCount | 0;\n            //Shadow copy the source address:\n            this.sourceShadow = this.source | 0;\n            //Shadow copy the destination address:\n            this.destinationShadow = this.destination | 0;\n        }\n        //DMA type changed:\n        this.enabled = this.DMA_ENABLE_TYPE[this.dmaType | 0] | 0;\n        this.pending = this.pending & this.enabled;\n    }\n    else {\n        //DMA Disabled:\n        this.enabled = 0;\n    }\n    //Run some DMA channel activity checks:\n    this.DMACore.update();\n}\nGameBoyAdvanceDMA3.prototype.handleDMACopy = function () {\n    //Get the addesses:\n    var source = this.sourceShadow | 0;\n    var destination = this.destinationShadow | 0;\n    //Transfer Data:\n    if ((this.is32Bit | 0) == 4) {\n        //32-bit Transfer:\n        this.copy32(source | 0, destination | 0);\n    }\n    else {\n        //16-bit Transfer:\n        this.copy16(source | 0, destination | 0);\n    }\n}\nGameBoyAdvanceDMA3.prototype.copy16 = function (source, destination) {\n    source = source | 0;\n    destination = destination | 0;\n    var data = this.memory.memoryReadDMAFull16(source | 0) | 0;\n    this.memory.memoryWriteDMAFull16(destination | 0, data | 0);\n    this.decrementWordCount(source | 0, destination | 0, 2);\n    this.DMACore.updateFetch(data | (data << 16));\n}\nGameBoyAdvanceDMA3.prototype.copy32 = function (source, destination) {\n    source = source | 0;\n    destination = destination | 0;\n    var data = this.memory.memoryReadDMAFull32(source | 0) | 0;\n    this.memory.memoryWriteDMAFull32(destination | 0, data | 0);\n    this.decrementWordCount(source | 0, destination | 0, 4);\n    this.DMACore.updateFetch(data | 0);\n}\nGameBoyAdvanceDMA3.prototype.decrementWordCount = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    //Decrement the word count:\n    var wordCountShadow = ((this.wordCountShadow | 0) - 1) & 0xFFFF;\n    if ((wordCountShadow | 0) == 0) {\n        //DMA transfer ended, handle accordingly:\n        wordCountShadow = this.finalizeDMA(source | 0, destination | 0, transferred | 0) | 0;\n    }\n    else {\n        //Update addresses:\n        this.incrementDMAAddresses(source | 0, destination | 0, transferred | 0);\n    }\n    //Save the new word count:\n    this.wordCountShadow = wordCountShadow | 0;\n}\nGameBoyAdvanceDMA3.prototype.finalizeDMA = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    var wordCountShadow = 0;\n    //Reset pending requests:\n    this.pending = 0;\n    //Check Repeat Status:\n    if ((this.repeat | 0) == 0 || (this.enabled | 0) == 0x1) {\n        //Disable the enable bit:\n        this.enabled = 0;\n    }\n    else {\n        //Reload word count:\n        wordCountShadow = this.wordCount | 0;\n    }\n    //Run the DMA channel checks:\n    this.DMACore.update();\n    //Check to see if we should flag for IRQ:\n    this.checkIRQTrigger();\n    //Update addresses:\n    this.finalDMAAddresses(source | 0, destination | 0, transferred | 0);\n    return wordCountShadow | 0;\n}\nGameBoyAdvanceDMA3.prototype.checkIRQTrigger = function () {\n    if ((this.irqFlagging | 0) != 0) {\n        this.irq.requestIRQ(0x800);\n    }\n}\nGameBoyAdvanceDMA3.prototype.finalDMAAddresses = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    //Update source address:\n    switch (this.sourceControl | 0) {\n        case 0:    //Increment\n        case 3:    //Forbidden (VBA has it increment)\n            this.sourceShadow = ((source | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:    //Decrement\n            this.sourceShadow = ((source | 0) - (transferred | 0)) | 0;\n    }\n    //Update destination address:\n    switch (this.destinationControl | 0) {\n        case 0:    //Increment\n            this.destinationShadow = ((destination | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:    //Decrement\n            this.destinationShadow = ((destination | 0) - (transferred | 0)) | 0;\n            break;\n        case 3:    //Reload\n            this.destinationShadow = this.destination | 0;\n    }\n}\nGameBoyAdvanceDMA3.prototype.incrementDMAAddresses = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    //Update source address:\n    switch (this.sourceControl | 0) {\n        case 0:    //Increment\n        case 3:    //Forbidden (VBA has it increment)\n            this.sourceShadow = ((source | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:\n            this.sourceShadow = ((source | 0) - (transferred | 0)) | 0;\n    }\n    //Update destination address:\n    switch (this.destinationControl | 0) {\n        case 0:    //Increment\n        case 3:    //Increment\n            this.destinationShadow = ((destination | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:    //Decrement\n            this.destinationShadow = ((destination | 0) - (transferred | 0)) | 0;\n    }\n}\nGameBoyAdvanceDMA3.prototype.nextEventTime = function () {\n    var clocks = 0x7FFFFFFF;\n    switch (this.enabled | 0) {\n            //V_BLANK\n        case 0x2:\n            clocks = this.gfxState.nextVBlankEventTime() | 0;\n            break;\n            //H_BLANK:\n        case 0x4:\n            clocks = this.gfxState.nextHBlankDMAEventTime() | 0;\n            break;\n            //DISPLAY_SYNC:\n        case 0x20:\n            clocks = this.gfxState.nextDisplaySyncEventTime(this.displaySyncEnableDelay | 0) | 0;\n    }\n    return clocks | 0;\n}"],"names":["GameBoyAdvanceDMA3","IOCore","this","prototype","DMA_ENABLE_TYPE","initialize","enabled","pending","source","sourceShadow","destination","destinationShadow","wordCount","wordCountShadow","irqFlagging","dmaType","is32Bit","repeat","sourceControl","destinationControl","gamePakDMA","displaySyncEnableDelay","DMACore","dma","memory","gfxState","irq","validateDMASource","address","writeDMASource8_0","data","writeDMASource8_1","writeDMASource8_2","writeDMASource8_3","writeDMASource16_0","writeDMASource16_1","writeDMASource32","writeDMADestination8_0","writeDMADestination8_1","writeDMADestination8_2","writeDMADestination8_3","writeDMADestination16_0","writeDMADestination16_1","writeDMADestination32","writeDMAWordCount8_0","writeDMAWordCount8_1","writeDMAWordCount16","writeDMAControl8_0","writeDMAControl8_1","updateCoreClocking","enableDMAChannel","updateCoreEventTime","writeDMAControl16","writeDMAControl32","readDMAControl8_0","readDMAControl8_1","readDMAControl16","getMatchStatus","gfxDisplaySyncRequest","requestDMA","gfxDisplaySyncEnableCheck","update","DMAType","handleDMACopy","copy32","copy16","memoryReadDMAFull16","memoryWriteDMAFull16","decrementWordCount","updateFetch","memoryReadDMAFull32","memoryWriteDMAFull32","transferred","finalizeDMA","incrementDMAAddresses","checkIRQTrigger","finalDMAAddresses","requestIRQ","nextEventTime","clocks","nextVBlankEventTime","nextHBlankDMAEventTime","nextDisplaySyncEventTime"],"version":3,"file":"build-index.77cc62ca.js.map"}