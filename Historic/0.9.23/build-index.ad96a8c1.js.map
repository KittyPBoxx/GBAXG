{"mappings":"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S,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KACrB6I,QAAQ7I,IAAI,IAAS,KAYrB6I,QAAQ7I,IAAI,KAAQ,KACpB6I,QAAQ7I,IAAI,MAAS","sources":["dist/Patching/ExpansionPack.js"],"sourcesContent":["/**\n *  Handle expanding roms to add additional data from other roms and creadting expansions from existing roms\n */\n function ExpansionPack() {\n    this.expansion = [];\n    this.nameExpanstionData = new Map();\n}\n\nExpansionPack.prototype.addToRom = function(romCode) {\n    let ROM = IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM;\n\n    let freeMemoryStart = this.getPatchPointStart(romCode);\n\n\n    if (freeMemoryStart + this.expansion.length > ROM.length) {\n\n        // Appending to the rom (i.e for a 16mb rom we can increase the size upto 32mb)\n        var mergedArray = new Uint8Array(freeMemoryStart + this.expansion.length);\n        mergedArray.set(ROM);\n        mergedArray.set(this.expansion, freeMemoryStart);\n    \n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROMLength = freeMemoryStart + this.expansion.length;\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM =  IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).getROMArray(mergedArray);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM16 = getUint16View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM32 = getInt32View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n\n    } else {\n\n        // Splicing into (i.e rom is already 32mb so when have to write into a block of free space)\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM.set(this.expansion, freeMemoryStart);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM16 = getUint16View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM32 = getInt32View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n\n    }\n\n}\n\nExpansionPack.prototype.getExpansionPtr = function(expansionName, romCode) {\n    let expansion = this.nameExpanstionData.get(expansionName);\n    return expansion.offset + 0x08000000 + this.getPatchPointStart(romCode);\n}\n\nExpansionPack.prototype.patchRomPtr32 = function (romCode, ptrAddress, newPtr) {\n    let davaView = new DataView(new Uint32Array([newPtr]).buffer);\n\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).patchROM8(ptrAddress, davaView.getUint8(0, true));\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).patchROM8(ptrAddress + 1, davaView.getUint8(1, true));\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).patchROM8(ptrAddress + 2, davaView.getUint8(2, true));\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).patchROM8(ptrAddress + 3, davaView.getUint8(3, true));\n\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM16 = getUint16View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n    IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM32 = getInt32View(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM);\n}\n\nExpansionPack.prototype.patchRomPtr32ByName = function (romCode, ptrAddress, name) {\n    let newPtr = this.getExpansionPtr(name, romCode);\n    this.patchRomPtr32(romCode, ptrAddress, newPtr);\n}\n\nExpansionPack.prototype.addElementToExpansion = function(name, romCode, offsetInRom, length, transform = null) {\n    let startAddress = offsetInRom;\n    let endAddress = startAddress + length;\n    let data = IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).ROM.slice(startAddress, endAddress);\n    if (transform) {\n        data = transform.apply(null, [data]);\n    }\n    let offset = this.expansion.length; \n    this.expansion = this.expansion.concat(Array.from(data));\n    this.nameExpanstionData.set(name, new ExpansionData(name, offset, Array.from(data)))\n} \n\nExpansionPack.prototype.addNewDataToExpansion = function(name, data) {\n    let offset = this.expansion.length; \n    this.expansion = this.expansion.concat(Array.from(data));\n    this.nameExpanstionData.set(name, new ExpansionData(name, offset, Array.from(data)))\n} \n\nExpansionPack.prototype.getPatchPointStart = function (romCode) {\n    // For a 16mb rom we can just append to the end for 32mb+ roms we might need to find some free space to patch into\n    return 0x1000000;\n}\n\nfunction ExpansionData(name, offset, data) {\n    this.name = name;\n    this.offset = offset;\n    this.data = data;\n}\n\nExpansionData.prototype.getLength = function() {\n    return this.data.length;\n}\n\n/* \n    Sprites data is stored as 8x8 blocks (top -> bottom, left -> right) from the top left\n    Each pixle is 4 BITS i.e each byte represents 2 pixels\n    We need to transpose\n    [1, 2]       [1 , 2 , 3 , 4 ]\n    [3, 4]   ->  [5 , 6 , 7 , 8 ]\n    [5, 6]       [9 , 10, 11, 12]\n    [7, 8]       [13, 14, 15, 16]\n    by padding with 0's\n*/\nfunction sprite16x32To32x32(data) {\n    let newSpriteData = [];\n\n    // ROW 1\n\n        // BLOCK 1\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n        // BLOCK 2\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (0*8*8/2)]);\n        } \n\n        // BLOCK 3\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (1*8*8/2)]);\n        } \n\n        // BLOCK 4\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n    // ROW 2\n\n        // BLOCK 5\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n        // BLOCK 6\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (2*8*8/2)]);\n        } \n\n        // BLOCK 7\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (3*8*8/2)]);\n        } \n\n        // BLOCK 8\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n    // ROW 3\n\n        // BLOCK 9\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n        // BLOCK 10\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (4*8*8/2)]);\n        } \n\n        // BLOCK 11\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (5*8*8/2)]);\n        } \n\n        // BLOCK 12\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        }\n\n    // ROW 4\n\n        // BLOCK 13\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n        // BLOCK 14\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (6*8*8/2)]);\n        } \n\n        // BLOCK 15\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(data[i + (7*8*8/2)]);\n        } \n\n        // BLOCK 16\n        for (var i = 0; i < 8*8/2; i++) {\n            newSpriteData.push(0);\n        } \n\n    return newSpriteData;\n}\n\nvar exp = null;\nvar expfr = null;\nasync function patchExpansionData() {\n\n\n    if (!IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\")) {\n        return;\n    }\n\n\n    var isPatchedFireRed = IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[0xBC];\n\n\n        exp = new ExpansionPack();\n        expfr = new ExpansionPack();\n\n        /***********************/\n        /** NEW DATA PATCHING **/\n        /***********************/\n        \n        exp.addNewDataToExpansion(\"instantText\", instantTextE);\n        expfr.addNewDataToExpansion(\"instantText\", instantTextFR);\n\n\n        // Patch in the menu warping scrips\n        let bedWarpMessage = convertMessageToHex(\"WARP\");\n        let confirmMessage = convertMessageToHex(\"Would you like to exit from this\\\\area right now?\");\n        let menuDescription = convertMessageToHex(\"Warp into your bedroom.\");\n\n        if(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n\n            let menuExitFunctionPtrC = 0xF74E8C;\n            let menuRetireFunctionPtrC = 0xF74E94;\n    \n            exp.patchRomPtr32(\"C\", menuExitFunctionPtrC, IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").readROM32(menuRetireFunctionPtrC));\n\n            let confirmMessageStartOffsetC = 0x2A4BF4;\n            let menuExitTextPtrC = 0xF74E88;\n\n            patchSectionOfRom(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").readROM32(menuExitTextPtrC) - 0x08000000, bedWarpMessage, \"C\");\n            patchSectionOfRom(confirmMessageStartOffsetC, confirmMessage, \"C\");\n    \n        }\n    \n        if(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n\n            let menuExitFunctionPtrE = 0x51057C;\n            let menuRetireFunctionPtrE = 0x510584;\n    \n            exp.patchRomPtr32(\"E\", menuExitFunctionPtrE, IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").readROM32(menuRetireFunctionPtrE));\n\n            let confirmMessageStartOffsetE = 0x2A4BF4;\n            let menuExitTextPtrE = 0x510578;\n\n            patchSectionOfRom(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").readROM32(menuExitTextPtrE) - 0x08000000, bedWarpMessage, \"E\");\n            patchSectionOfRom(confirmMessageStartOffsetE, confirmMessage, \"E\");\n            \n        }\n    \n        if(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\")) {\n\n            let isPatched = IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[0xBC];\n            let menuExitFunctionPtrF   = isPatched ?  0x3A73E8 : 0x3A7378;\n            let menuRetireFunctionPtrF = isPatched ?  0x3A73F0 : 0x3A7380;\n    \n            expfr.patchRomPtr32(\"FR\", menuExitFunctionPtrF, IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").readROM32(menuRetireFunctionPtrF));\n\n            let menuExitTextPtrF            = isPatched ? 0x3A73E4 : 0x3A7374;\n            let confirmMessageStartOffsetF  = isPatched ? 0x1BFC5C : 0x1BFBE9;\n            let menuDescriptionStartOffsetF = isPatched ? 0x41A169 : 0x41A0F9;\n    \n            patchSectionOfRom(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").readROM32(menuExitTextPtrF) - 0x08000000, bedWarpMessage, \"FR\");\n            patchSectionOfRom(confirmMessageStartOffsetF, confirmMessage, \"FR\");\n            patchSectionOfRom(menuDescriptionStartOffsetF, menuDescription, \"FR\");\n        }\n\n        /*********************/\n        /** SPRITE PATCHING **/\n        /*********************/\n\n        /* COPY DATA FROM FIRE RED */\n\n        // WALKING\n\n        Object.keys(FR_1_0_GIRL_WALK_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_WALK_SPRITE_DATA[k]) - 0x08000000, 256);\n        });\n\n        Object.keys(FR_1_0_BOY_WALK_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_WALK_SPRITE_DATA[k]) - 0x08000000, 256);\n        });\n\n        // BIKING \n        Object.keys(FR_1_0_GIRL_BIKE_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_bike_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_BIKE_SPRITE_DATA[k]) - 0x08000000, 512);\n        });\n\n        Object.keys(FR_1_0_BOY_BIKE_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_bike_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_BIKE_SPRITE_DATA[k]) - 0x08000000, 512);\n        });\n\n        // ACRO\n        Object.keys(FR_1_0_GIRL_ACRO_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_acro_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_BIKE_SPRITE_DATA[k]) - 0x08000000, 1024);\n        });\n\n        Object.keys(FR_1_0_BOY_ACRO_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_acro_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_BIKE_SPRITE_DATA[k]) - 0x08000000, 1024);\n        });\n\n        // SURFING \n        Object.keys(FR_1_0_GIRL_SURF_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_surf_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_SURF_SPRITE_DATA[k]) - 0x08000000, 256, sprite16x32To32x32);\n        });\n\n        Object.keys(FR_1_0_BOY_SURF_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_surf_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_SURF_SPRITE_DATA[k]) - 0x08000000, 256, sprite16x32To32x32);\n        });\n\n        // USE ITEM\n        Object.keys(FR_1_0_GIRL_BAG_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_bag_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_BAG_SPRITE_DATA[k]) - 0x08000000, 256, sprite16x32To32x32);\n        });\n\n        Object.keys(FR_1_0_BOY_BAG_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_bag_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_BAG_SPRITE_DATA[k]) - 0x08000000, 256, sprite16x32To32x32);\n        });\n\n        // FISHING\n        Object.keys(FR_1_0_GIRL_FISHING_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_girl_fishing_\" + k, \"FR\", (versionOffset + FR_1_0_GIRL_FISHING_SPRITE_DATA[k]) - 0x08000000, 512);\n        });\n\n        Object.keys(FR_1_0_BOY_FISHING_SPRITE_DATA).forEach(k => {\n            let versionOffset = 0;\n            if (isPatchedFireRed) {\n                versionOffset = FR_1_1_SPRITE_OFFSET_SHIFT;\n            }\n            exp.addElementToExpansion(\"fr_boy_fishing_\" + k, \"FR\", (versionOffset + FR_1_0_BOY_FISHING_SPRITE_DATA[k]) - 0x08000000, 512);\n        });\n\n        // Backsprites\n        Object.keys(FR_BACKSPRITE_DATA).forEach(k => {\n            exp.addElementToExpansion(\"fr_backsprite\" + k, \"FR\", (FR_BACKSPRITE_DATA[k]) - 0x08000000, FR_BACKSPRITE_DATA_LENGTH);\n        });\n    \n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n    \n        /* COPY DATA TO CRYSTAL */\n        Object.keys(E_1_0_GIRL_WALK_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_WALK_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_\" + k);\n        });\n        Object.keys(E_1_0_BOY_WALK_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_WALK_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_BIKE_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_BIKE_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_bike_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_ACRO_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_ACRO_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_acro_\" + k);\n        });\n        Object.keys(E_1_0_BOY_BIKE_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_BIKE_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_bike_\" + k);\n        });\n        Object.keys(E_1_0_BOY_ACRO_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_ACRO_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_acro_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_SURF_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_SURF_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_surf_\" + k);\n        });\n        Object.keys(E_1_0_BOY_SURF_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_SURF_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_surf_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_BAG_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_BAG_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_bag_\" + k);\n        });\n        Object.keys(E_1_0_BOY_BAG_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_BAG_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_bag_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_FISHING_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_GIRL_FISHING_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_fishing_\" + k);\n        });\n        Object.keys(E_1_0_BOY_FISHING_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", E_1_0_BOY_FISHING_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_fishing_\" + k);\n        });\n\n        // Backsprites\n        Object.keys(C_BACKSPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"C\", C_BACKSPRITE_PTRS[k] - 0x08000000, \"fr_backsprite\" + k);\n        });\n\n    }\n\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n\n        /* COPY DATA TO EMERALD */\n        Object.keys(E_1_0_GIRL_WALK_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_WALK_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_\" + k);\n        });\n        Object.keys(E_1_0_BOY_WALK_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_WALK_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_BIKE_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_BIKE_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_bike_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_ACRO_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_ACRO_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_acro_\" + k);\n        });\n        Object.keys(E_1_0_BOY_BIKE_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_BIKE_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_bike_\" + k);\n        });\n        Object.keys(E_1_0_BOY_ACRO_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_ACRO_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_acro_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_SURF_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_SURF_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_surf_\" + k);\n        });\n        Object.keys(E_1_0_BOY_SURF_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_SURF_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_surf_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_BAG_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_BAG_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_bag_\" + k);\n        });\n        Object.keys(E_1_0_BOY_BAG_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_BAG_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_bag_\" + k);\n        });\n        Object.keys(E_1_0_GIRL_FISHING_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_GIRL_FISHING_SPRITE_PTRS[k] - 0x08000000, \"fr_girl_fishing_\" + k);\n        });\n        Object.keys(E_1_0_BOY_FISHING_SPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_1_0_BOY_FISHING_SPRITE_PTRS[k] - 0x08000000, \"fr_boy_fishing_\" + k);\n        });\n\n        //Fix Emerald Trainer Sprites\n        exp.patchRomPtr32(\"E\", EMERALD_BRANDON_TRAINER_SPRITE_PTR, IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").readROM32(EMERALD_RED_TRAINER_SPRITE_PTR));\n        exp.patchRomPtr32(\"E\", EMERALD_MAY_TRAINER_SPRITE_PTR, IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").readROM32(EMERALD_LEAF_TRAINER_SPRITE_PTR));\n\n        exp.patchRomPtr32(\"E\", EMERALD_BRANDON_TRAINER_PALLET_PTR, IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").readROM32(EMERALD_RED_TRAINER_PALLET_PTR));\n        exp.patchRomPtr32(\"E\", EMERALD_MAY_TRAINER_PALLET_PTR, IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").readROM32(EMERALD_LEAF_TRAINER_PALLET_PTR));\n\n        //Backsprites\n        Object.keys(E_BACKSPRITE_PTRS).forEach(k => {\n            exp.patchRomPtr32ByName(\"E\", E_BACKSPRITE_PTRS[k] - 0x08000000, \"fr_backsprite\" + k);\n        });\n\n    }\n\n\n    /* COPY COLOUR PALLETS FROM FIRE RED */\n    var fireRedPalletOffset = isPatchedFireRed ? FR_1_1_GIRL_PALLET_DATA_BASE_OFFSET : FR_1_0_GIRL_PALLET_DATA_BASE_OFFSET;\n\n    let overworldPalletData = []; // In  FireRed boy and Girl use the same overworld pallet\n    let girlBackspritePalletData = [];\n    let boyBackspritePalletData = [];\n    for (i = 0; i < FR_1_0_GIRL_PALLET_DATA_LENGTH; i++) {\n        let index = fireRedPalletOffset + i - 0x08000000;\n        overworldPalletData.push(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[index]);\n    }\n\n    for (i = 0; i < BACKSPRITES_PALLET_LENGTH; i++) {\n        let girlBackspriteIndex = FR_GIRL_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n        girlBackspritePalletData.push(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[girlBackspriteIndex]);\n\n        let boyBackspriteIndex = FR_BOY_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n        boyBackspritePalletData.push(IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[boyBackspriteIndex]);\n    }\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n\n        /* COPY COLOUR PALLETS TO EMERALD */\n        for (i = 0; i < overworldPalletData.length; i++) {\n            let girlOverworldIndex = E_1_0_GIRL_PALLET_DATA_BASE_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(girlOverworldIndex, overworldPalletData[i]);\n\n            let boyOverworldIndex = E_1_0_BOY_PALLET_DATA_BASE_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(boyOverworldIndex, overworldPalletData[i]);\n        }\n        for (i = 0; i < BACKSPRITES_PALLET_LENGTH; i++) {\n            let girlBackspriteIndex = E_GIRL_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(girlBackspriteIndex, girlBackspritePalletData[i]);\n\n            let boyBackspriteIndex = E_BOY_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(boyBackspriteIndex, boyBackspritePalletData[i]);\n        }\n\n        // Partially fix reflection pallets\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x499c2c, 0xfc);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x499c2d, 0x45);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x499c2e, 0xfc);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x499c2f, 0x45);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4a42ac, 0x9b77);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4a42ad, 0x9b77);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4a42ae, 0x9b77);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4a42af, 0x9b77);\n    }\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n\n        /* COPY COLOUR PALLETS TO CRYSTAL */\n        for (i = 0; i < overworldPalletData.length; i++) {\n            let girlOverworldIndex = C_1_0_GIRL_PALLET_DATA_BASE_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(girlOverworldIndex, overworldPalletData[i]);\n\n            let boyOverworldIndex = C_1_0_BOY_PALLET_DATA_BASE_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(boyOverworldIndex, overworldPalletData[i]);\n        }\n\n        for (i = 0; i < BACKSPRITES_PALLET_LENGTH; i++) {\n            let girlBackspriteIndex = C_GIRL_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(girlBackspriteIndex, girlBackspritePalletData[i]);\n\n            let boyBackspriteIndex = C_BOY_BACKSPRITE_PALLET_OFFSET + i - 0x08000000;\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(boyBackspriteIndex, boyBackspritePalletData[i]);\n        }\n\n    }\n\n\n    /*************************************/\n    /** Add the expansion into the roms **/\n    /*************************************/\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\")) {\n        expfr.addToRom(\"FR\");\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n        exp.addToRom(\"C\");\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n        exp.addToRom(\"E\");\n    }\n}\n\nvar instantTextE = [0xf0, 0xb5, 0x4f, 0x46, 0x46, 0x46, 0xc0, 0xb4, 0x0c, 0x48, 0x00, 0x78, 0x00, 0x28,  0x46, 0xd1,\n                   0x0b, 0x4e, 0x00, 0x20, 0x81, 0x46, 0x80, 0x46, 0x34, 0x1d, 0x35, 0x1c, 0x00, 0x27,  0xe0, 0x7d,\n                   0x00, 0x28, 0x2f, 0xd0, 0x28, 0x1c, 0x00, 0xf0, 0x4b, 0xf8, 0x00, 0x04, 0x00, 0x0c,  0x01, 0x28,\n                   0x25, 0xd0, 0x01, 0x28, 0x06, 0xdc, 0x00, 0x28, 0x07, 0xd0, 0x25, 0xe0, 0x84, 0x2f,  0x00, 0x03,\n                   0xb0, 0x01, 0x02, 0x02, 0x03, 0x28, 0x0f, 0xd0, 0x1e, 0xe0, 0x20, 0x78, 0x02, 0x21,  0x00, 0xf0,\n                   0x3f, 0xf8, 0x30, 0x1c, 0x10, 0x30, 0x38, 0x18, 0x02, 0x68, 0x00, 0x2a, 0x14, 0xd0,  0x28, 0x1c,\n                   0x00, 0x21, 0x00, 0xf0, 0x25, 0xf8, 0x0f, 0xe0, 0x30, 0x1c, 0x10, 0x30, 0x38, 0x18,  0x02, 0x68,\n                   0x00, 0x2a, 0x14, 0xd0, 0x28, 0x1c, 0x03, 0x21, 0x00, 0xf0, 0x1a, 0xf8, 0x0f, 0xe0,  0x00, 0x20,\n                   0xe0, 0x75, 0x0c, 0xe0, 0x01, 0x20, 0x81, 0x44, 0x24, 0x34, 0x24, 0x35, 0x24, 0x37,  0x01, 0x20,\n                   0x80, 0x44, 0x40, 0x46, 0x1f, 0x28, 0xc2, 0xdd, 0x48, 0x46, 0x20, 0x28, 0xb9, 0xd1,  0x18, 0xbc,\n                   0x98, 0x46, 0xa1, 0x46, 0xf0, 0xbc, 0x01, 0xbc, 0x00, 0x47, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00,\n                   0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0xd9, 0x70,  0x2e, 0x08,\n                   0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x19, 0x48,  0x00, 0x08,\n                   0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x59, 0x36,  0x00, 0x08];\n\nvar instantTextFR = [0xf0, 0xb5, 0x4f, 0x46, 0x46, 0x46, 0xc0, 0xb4, 0x0a, 0x4e, 0x00, 0x20, 0x81, 0x46, 0x80, 0x46,        \n                    0x34, 0x1d, 0x35, 0x1c, 0x00, 0x27, 0xe0, 0x7d, 0x00, 0x28, 0x2d, 0xd0, 0x28, 0x1c, 0x00, 0xf0,        \n                    0x4f, 0xf8, 0x00, 0x04, 0x00, 0x0c, 0x01, 0x28, 0x23, 0xd0, 0x01, 0x28, 0x04, 0xdc, 0x00, 0x28,        \n                    0x05, 0xd0, 0x23, 0xe0, 0x34, 0x00, 0x02, 0x02, 0x03, 0x28, 0x0f, 0xd0, 0x1e, 0xe0, 0x20, 0x78,        \n                    0x02, 0x21, 0x00, 0xf0, 0x35, 0xf8, 0x30, 0x1c, 0x10, 0x30, 0x38, 0x18, 0x02, 0x68, 0x00, 0x2a,        \n                    0x14, 0xd0, 0x28, 0x1c, 0x00, 0x21, 0x00, 0xf0, 0x23, 0xf8, 0x0f, 0xe0, 0x30, 0x1c, 0x10, 0x30,        \n                    0x38, 0x18, 0x02, 0x68, 0x00, 0x2a, 0x14, 0xd0, 0x28, 0x1c, 0x03, 0x21, 0x00, 0xf0, 0x18, 0xf8,        \n                    0x0f, 0xe0, 0x00, 0x20, 0xe0, 0x75, 0x0c, 0xe0, 0x01, 0x20, 0x81, 0x44, 0x24, 0x34, 0x24, 0x35,        \n                    0x24, 0x37, 0x01, 0x20, 0x80, 0x44, 0x40, 0x46, 0x1f, 0x28, 0xc4, 0xdd, 0x48, 0x46, 0x20, 0x28,        \n                    0xbb, 0xd1, 0x18, 0xbc, 0x98, 0x46, 0xa1, 0x46, 0xf0, 0xbc, 0x01, 0xbc, 0x00, 0x47, 0x00, 0x00,        \n                    0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x20, 0x3c, 0x1e, 0x08,        \n                    0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x35, 0x3f, 0x00, 0x08,        \n                    0x78, 0x47, 0xc0, 0x46, 0x00, 0xc0, 0x9f, 0xe5, 0x1c, 0xff, 0x2f, 0xe1, 0x91, 0x2e, 0x00, 0x08]\n\nfunction patchInInstantText() {\n\n    if (IodineGUI.Iodine.IOCore == undefined || IodineGUI.Iodine.IOCore.cartridge.cartriges.size == 0) {\n        return false;\n    }\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\")) {\n\n        if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[0xBC]) {\n            // dealing with 1.1\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x41f498, 0x01);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x41f499, 0x01);\n    \n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfc  , 0x00);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfd  , 0x4a);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfe  , 0x10);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dff  , 0x47);\n    \n            let ptrAddress = expfr.getExpansionPtr(\"instantText\", \"FR\").toString(16).padStart(8, 0).split(\"\");\n    \n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e00  , parseInt(ptrAddress[6] + ptrAddress[7], 16) + 1);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e01  , parseInt(ptrAddress[4] + ptrAddress[5], 16)    );\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e02  , parseInt(ptrAddress[2] + ptrAddress[3], 16)    );\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e03  , parseInt(ptrAddress[0] + ptrAddress[1], 16)    );\n\n        } else {\n            // TODO support instant text for Fire Red 1.0\n        }\n\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x60f094, 0x01);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x60f095, 0x01);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x4778  , 0x00);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x4779  , 0x4a);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477A  , 0x10);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477B  , 0x47);\n\n        let ptrAddress = exp.getExpansionPtr(\"instantText\", \"C\").toString(16).padStart(8, 0).split(\"\");\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477C  , parseInt(ptrAddress[6] + ptrAddress[7], 16) + 1);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477D  , parseInt(ptrAddress[4] + ptrAddress[5], 16)    );\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477E  , parseInt(ptrAddress[2] + ptrAddress[3], 16)    );\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477F  , parseInt(ptrAddress[0] + ptrAddress[1], 16)    );\n\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x60f094, 0x01);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x60f095, 0x01);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4778  , 0x00);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4779  , 0x4a);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477A  , 0x10);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477B  , 0x47);\n\n        let ptrAddress = exp.getExpansionPtr(\"instantText\", \"E\").toString(16).padStart(8, 0).split(\"\");\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477C  , parseInt(ptrAddress[6] + ptrAddress[7], 16) + 1);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477D  , parseInt(ptrAddress[4] + ptrAddress[5], 16)    );\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477E  , parseInt(ptrAddress[2] + ptrAddress[3], 16)    );\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477F  , parseInt(ptrAddress[0] + ptrAddress[1], 16)    );\n        \n    }\n\n    return true;\n\n}\n\nfunction patchOutInstantText() {\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.size == 0) {\n        return;\n    }\n\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\")) {\n\n        if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").ROM[0xBC]) {\n            // dealing with 1.1\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x41f498, 0x08);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x41f499, 0x04);\n    \n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfc  , 0xf0);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfd  , 0xb5);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dfe  , 0x47);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2dff  , 0x46);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e00  , 0x80);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e01  , 0xb4);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e02  , 0x0a);\n            IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"FR\").patchROM8(0x2e03  , 0x48);\n\n        } else {\n            // TODO support instant text for Fire Red 1.0\n        }\n\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\")) {\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x60f094, 0x08);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x60f095, 0x04);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x4778  , 0xf0);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x4779  , 0xb5);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477A  , 0x47);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477B  , 0x46);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477C  , 0x80);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477D  , 0xb4);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477E  , 0x0c);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"C\").patchROM8(0x477F  , 0x48);\n\n    }\n    if (IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\")) {\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x60f094, 0x08);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x60f095, 0x04);\n\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4778  , 0xf0);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x4779  , 0xb5);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477A  , 0x47);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477B  , 0x46);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477C  , 0x80);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477D  , 0xb4);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477E  , 0x0c);\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(\"E\").patchROM8(0x477F  , 0x48);\n\n    }\n}\n\nfunction patchSectionOfRom(startOffset, data, romCode) {\n\n    for (var i = 0; i < data.length; i++) {\n        IodineGUI.Iodine.IOCore.cartridge.cartriges.get(romCode).patchROM8(startOffset + i, data[i]);\n    }\n\n}\n\n\nvar charHex = new Map();\ncharHex.set(\" \"    , 0x00);\n// charHex.set(\"À\"    , 0x01);\n// charHex.set(\"Á\"    , 0x02);\n// charHex.set(\"Â\"    , 0x03);\n// charHex.set(\"Ç\"    , 0x04);\n// charHex.set(\"È\"    , 0x05);\n// charHex.set(\"É\"    , 0x06);\n// charHex.set(\"Ê\"    , 0x07);\n// charHex.set(\"Ë\"    , 0x08);\n// charHex.set(\"Ì\"    , 0x09);\n// charHex.set(\"Î\"    , 0x0B);\n// charHex.set(\"Ï\"    , 0x0C);\n// charHex.set(\"Ò\"    , 0x0D);\n// charHex.set(\"Ó\"    , 0x0E);\n// charHex.set(\"Ô\"    , 0x0F);\n// charHex.set(\"Œ\"    , 0x10);\n// charHex.set(\"Ù\"    , 0x11);\n// charHex.set(\"Ú\"    , 0x12);\n// charHex.set(\"Û\"    , 0x13);\n// charHex.set(\"Ñ\"    , 0x14);\n// charHex.set(\"ß\"    , 0x15);\n// charHex.set(\"à\"    , 0x16);\n// charHex.set(\"á\"    , 0x17);\n// charHex.set(\"ç\"    , 0x19);\n// charHex.set(\"è\"    , 0x1A);\n// charHex.set(\"é\"    , 0x1B);\n// charHex.set(\"ê\"    , 0x1C);\n// charHex.set(\"ë\"    , 0x1D);\n// charHex.set(\"ì\"    , 0x1E);\n// charHex.set(\"î\"    , 0x20);\n// charHex.set(\"ï\"    , 0x21);\n// charHex.set(\"ò\"    , 0x22);\n// charHex.set(\"ó\"    , 0x23);\n// charHex.set(\"ô\"    , 0x24);\n// charHex.set(\"œ\"    , 0x25);\n// charHex.set(\"ù\"    , 0x26);\n// charHex.set(\"ú\"    , 0x27);\n// charHex.set(\"û\"    , 0x28);\n// charHex.set(\"ñ\"    , 0x29);\n// charHex.set(\"º\"    , 0x2A);\n// charHex.set(\"ª\"    , 0x2B);\n// charHex.set(\"&\"    , 0x2D);\n// charHex.set(\"+\"    , 0x2E);\n// charHex.set(\"Lv\"   , 0x34);\ncharHex.set(\"=\"    , 0x35);\n// charHex.set(\";\"    , 0x36);\n// charHex.set(\"¿\"    , 0x51);\n// charHex.set(\"¡\"    , 0x52);\n// charHex.set(\"pk\"   , 0x53);\n// charHex.set(\"mn\"   , 0x54);\n// charHex.set(\"po\"   , 0x55);\n// charHex.set(\"ké\"   , 0x56);\n// charHex.set(\"bl\"   , 0x57);\n// charHex.set(\"oc\"   , 0x58);\n// charHex.set(\"k\"    , 0x59);\n// charHex.set(\"Í\"    , 0x5A);\ncharHex.set(\"%\"    , 0x5B);\ncharHex.set(\"(\"    , 0x5C);\ncharHex.set(\")\"    , 0x5D);\n// charHex.set(\"â\"    , 0x68);\n// charHex.set(\"í\"    , 0x6F);\n// charHex.set(\"U\"    , 0x79);\n// charHex.set(\"D\"    , 0x7A);\n// charHex.set(\"L\"    , 0x7B);\n// charHex.set(\"R\"    , 0x7C);\ncharHex.set(\"<\"    , 0x85);\ncharHex.set(\">\"    , 0x86);\ncharHex.set(\"0\"    , 0xA1);\ncharHex.set(\"1\"    , 0xA2);\ncharHex.set(\"2\"    , 0xA3);\ncharHex.set(\"3\"    , 0xA4);\ncharHex.set(\"4\"    , 0xA5);\ncharHex.set(\"5\"    , 0xA6);\ncharHex.set(\"6\"    , 0xA7);\ncharHex.set(\"7\"    , 0xA8);\ncharHex.set(\"8\"    , 0xA9);\ncharHex.set(\"9\"    , 0xAA);\ncharHex.set(\"!\"    , 0xAB);\ncharHex.set(\"?\"    , 0xAC);\ncharHex.set(\".\"    , 0xAD);\ncharHex.set(\"-\"    , 0xAE);\ncharHex.set(\"·\"    , 0xAF);\ncharHex.set(\".\"    , 0xB0);\n// charHex.set(\"''\"   , 0xB1);\n// charHex.set(\"'\"    , 0xB2);\n// charHex.set(\"'\"    , 0xB3);\n// charHex.set(\"'\"    , 0xB4);\ncharHex.set(\"m\"    , 0xB5);\ncharHex.set(\"f\"    , 0xB6);\ncharHex.set(\"$\"    , 0xB7);\ncharHex.set(\",\"    , 0xB8);\ncharHex.set(\"x\"    , 0xB9);   \ncharHex.set(\"/\"    , 0xBA);\ncharHex.set(\"A\"    , 0xBB);\ncharHex.set(\"B\"    , 0xBC);\ncharHex.set(\"C\"    , 0xBD);\ncharHex.set(\"D\"    , 0xBE);\ncharHex.set(\"E\"    , 0xBF);\ncharHex.set(\"F\"    , 0xC0);\ncharHex.set(\"G\"    , 0xC1);\ncharHex.set(\"H\"    , 0xC2);\ncharHex.set(\"I\"    , 0xC3);\ncharHex.set(\"J\"    , 0xC4);\ncharHex.set(\"K\"    , 0xC5);\ncharHex.set(\"L\"    , 0xC6);\ncharHex.set(\"M\"    , 0xC7);\ncharHex.set(\"N\"    , 0xC8);\ncharHex.set(\"O\"    , 0xC9);\ncharHex.set(\"P\"    , 0xCA);\ncharHex.set(\"Q\"    , 0xCB);\ncharHex.set(\"R\"    , 0xCC);\ncharHex.set(\"S\"    , 0xCD);\ncharHex.set(\"T\"    , 0xCE);\ncharHex.set(\"U\"    , 0xCF);\ncharHex.set(\"V\"    , 0xD0);\ncharHex.set(\"W\"    , 0xD1);\ncharHex.set(\"X\"    , 0xD2);\ncharHex.set(\"Y\"    , 0xD3);\ncharHex.set(\"Z\"    , 0xD4);\ncharHex.set(\"a\"    , 0xD5);\ncharHex.set(\"b\"    , 0xD6);\ncharHex.set(\"c\"    , 0xD7);\ncharHex.set(\"d\"    , 0xD8);\ncharHex.set(\"e\"    , 0xD9);\ncharHex.set(\"f\"    , 0xDA);\ncharHex.set(\"g\"    , 0xDB);\ncharHex.set(\"h\"    , 0xDC);\ncharHex.set(\"i\"    , 0xDD);\ncharHex.set(\"j\"    , 0xDE);\ncharHex.set(\"k\"    , 0xDF);\ncharHex.set(\"l\"    , 0xE0);\ncharHex.set(\"m\"    , 0xE1);\ncharHex.set(\"n\"    , 0xE2);\ncharHex.set(\"o\"    , 0xE3);\ncharHex.set(\"p\"    , 0xE4);\ncharHex.set(\"q\"    , 0xE5);\ncharHex.set(\"r\"    , 0xE6);\ncharHex.set(\"s\"    , 0xE7);\ncharHex.set(\"t\"    , 0xE8);\ncharHex.set(\"u\"    , 0xE9);\ncharHex.set(\"v\"    , 0xEA);\ncharHex.set(\"w\"    , 0xEB);\ncharHex.set(\"x\"    , 0xEC);\ncharHex.set(\"y\"    , 0xED);\ncharHex.set(\"z\"    , 0xEE);\n// charHex.set(\">\"    , 0xEF);\n// charHex.set(\":\"    , 0xF0);\n// charHex.set(\"Ä\"    , 0xF1);\n// charHex.set(\"Ö\"    , 0xF2);\n// charHex.set(\"Ü\"    , 0xF3);\n// charHex.set(\"ä\"    , 0xF4);\n// charHex.set(\"ö\"    , 0xF5);\n// charHex.set(\"ü\"    , 0xF6);\n// charHex.set(\"u\"    , 0xF7);\n// charHex.set(\"d\"    , 0xF8);\n// charHex.set(\"l\"    , 0xF9); \ncharHex.set(\"\\\\\"  , 0xFE); // New Line\ncharHex.set(\"END\"  , 0xFF); // End of String\n\nfunction convertMessageToHex(message) {\n\n    let hex = []\n    message.split(\"\").forEach(char => (charHex.get(char) != undefined) && hex.push(charHex.get(char)))\n    hex.push(charHex.get(\"END\"));\n    return hex;\n\n}"],"names":["ExpansionPack","this","expansion","nameExpanstionData","Map","ExpansionData","name","offset","data","sprite16x32To32x32","newSpriteData","i1","push","prototype","addToRom","romCode","ROM","IodineGUI","Iodine","IOCore","cartridge","cartriges","get","freeMemoryStart","getPatchPointStart","length","mergedArray","Uint8Array","set","ROMLength","getROMArray","ROM16","getUint16View","ROM32","getInt32View","getExpansionPtr","expansionName","patchRomPtr32","ptrAddress","newPtr","davaView","DataView","Uint32Array","buffer","patchROM8","getUint8","patchRomPtr32ByName","addElementToExpansion","offsetInRom","transform","startAddress","endAddress","slice","apply","concat","Array","from","addNewDataToExpansion","getLength","exp","expfr","async","patchExpansionData","isPatchedFireRed","instantTextE","instantTextFR","bedWarpMessage","convertMessageToHex","confirmMessage","menuDescription","menuExitFunctionPtrC","menuRetireFunctionPtrC","readROM32","confirmMessageStartOffsetC","menuExitTextPtrC","patchSectionOfRom","menuExitFunctionPtrE","menuRetireFunctionPtrE","confirmMessageStartOffsetE","menuExitTextPtrE","isPatched","menuExitFunctionPtrF","menuRetireFunctionPtrF","menuExitTextPtrF","confirmMessageStartOffsetF","menuDescriptionStartOffsetF","Object","keys","FR_1_0_GIRL_WALK_SPRITE_DATA","forEach","k","versionOffset","FR_1_1_SPRITE_OFFSET_SHIFT","FR_1_0_BOY_WALK_SPRITE_DATA","FR_1_0_GIRL_BIKE_SPRITE_DATA","FR_1_0_BOY_BIKE_SPRITE_DATA","FR_1_0_GIRL_ACRO_SPRITE_DATA","FR_1_0_BOY_ACRO_SPRITE_DATA","FR_1_0_GIRL_SURF_SPRITE_DATA","FR_1_0_BOY_SURF_SPRITE_DATA","FR_1_0_GIRL_BAG_SPRITE_DATA","FR_1_0_BOY_BAG_SPRITE_DATA","FR_1_0_GIRL_FISHING_SPRITE_DATA","FR_1_0_BOY_FISHING_SPRITE_DATA","FR_BACKSPRITE_DATA","FR_BACKSPRITE_DATA_LENGTH","E_1_0_GIRL_WALK_SPRITE_PTRS","E_1_0_BOY_WALK_SPRITE_PTRS","E_1_0_GIRL_BIKE_SPRITE_PTRS","E_1_0_GIRL_ACRO_SPRITE_PTRS","E_1_0_BOY_BIKE_SPRITE_PTRS","E_1_0_BOY_ACRO_SPRITE_PTRS","E_1_0_GIRL_SURF_SPRITE_PTRS","E_1_0_BOY_SURF_SPRITE_PTRS","E_1_0_GIRL_BAG_SPRITE_PTRS","E_1_0_BOY_BAG_SPRITE_PTRS","E_1_0_GIRL_FISHING_SPRITE_PTRS","E_1_0_BOY_FISHING_SPRITE_PTRS","C_BACKSPRITE_PTRS","EMERALD_BRANDON_TRAINER_SPRITE_PTR","EMERALD_RED_TRAINER_SPRITE_PTR","EMERALD_MAY_TRAINER_SPRITE_PTR","EMERALD_LEAF_TRAINER_SPRITE_PTR","EMERALD_BRANDON_TRAINER_PALLET_PTR","EMERALD_RED_TRAINER_PALLET_PTR","EMERALD_MAY_TRAINER_PALLET_PTR","EMERALD_LEAF_TRAINER_PALLET_PTR","E_BACKSPRITE_PTRS","fireRedPalletOffset","FR_1_1_GIRL_PALLET_DATA_BASE_OFFSET","FR_1_0_GIRL_PALLET_DATA_BASE_OFFSET","overworldPalletData","girlBackspritePalletData","boyBackspritePalletData","i","FR_1_0_GIRL_PALLET_DATA_LENGTH","index","BACKSPRITES_PALLET_LENGTH","girlBackspriteIndex","FR_GIRL_BACKSPRITE_PALLET_OFFSET","boyBackspriteIndex","FR_BOY_BACKSPRITE_PALLET_OFFSET","girlOverworldIndex","E_1_0_GIRL_PALLET_DATA_BASE_OFFSET","boyOverworldIndex","E_1_0_BOY_PALLET_DATA_BASE_OFFSET","girlBackspriteIndex1","E_GIRL_BACKSPRITE_PALLET_OFFSET","boyBackspriteIndex1","E_BOY_BACKSPRITE_PALLET_OFFSET","girlOverworldIndex1","C_1_0_GIRL_PALLET_DATA_BASE_OFFSET","boyOverworldIndex1","C_1_0_BOY_PALLET_DATA_BASE_OFFSET","girlBackspriteIndex2","C_GIRL_BACKSPRITE_PALLET_OFFSET","boyBackspriteIndex2","C_BOY_BACKSPRITE_PALLET_OFFSET","patchInInstantText","undefined","size","toString","padStart","split","parseInt","ptrAddress1","ptrAddress2","patchOutInstantText","startOffset","charHex","message","hex","char"],"version":3,"file":"build-index.ad96a8c1.js.map"}