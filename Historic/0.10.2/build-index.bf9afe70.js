var mixedGameData={};Object.entries(FIRE_RED_WARPS).forEach((e=>mixedGameData[e[0]]=e[1])),Object.entries(CRYSTAL_WARPS).forEach((e=>mixedGameData[e[0]]=e[1])),Object.entries(EMERALD_WARPS).forEach((e=>mixedGameData[e[0]]=e[1]));var remappingsData={},isHeadless=!0,warpList=new Map;function getMapData(){return mixedGameData}function getRandomisationAlgorithm(){return generateRandomMappings}function getRandomisationConfig(){let e={};return e.kantoLevel=document.getElementById("kantoLevel").value,e.johtoLevel=document.getElementById("johtoLevel").value,e.hoennLevel=document.getElementById("hoennLevel").value,e}function getFlagData(){return FLAG_DATA}function getEscapePaths(){return ESCAPE_PATHS}function mappingToWarps(e){let t=new Map;return e.forEach((e=>{let a=e.trigger,n=e.target.split(",");t.set(a,new PKWarp(a,n[0],n[1],n[2],n[3],e.source))})),t}var attempts=5;async function mapWarps(e){flagsState={},unaddedConditionalEdges={},attempts=5;let t=getRandomisationConfig(),a=getFilteredData(),n=getFlagData(),o=getEscapePaths();getRandomisationAlgorithm().apply(null,[onRandomisationAlogrithmRun,e,a,n,t,o])}var onNewMappingCreated=()=>{};function onRandomisationAlogrithmRun(e,t,a){warpList=mappingToWarps(getAugmetedRemappingData(remappingsData=e)),updateHashDisplay(),updateProgressUI("Mapping Finished"),"undefined"!=typeof storageManager&&storageManager.persist("RANDOM_MAPPING",new WarpListData(t,a,warpList)),onNewMappingCreated()}function generateRandomMappings(e,t,a,n,o,s){let i=new RNG(getHash(t)),r=initMappingGraph(a,isHeadless,new ProgressionState(n,o));r=generateEscapeWarps(s,a,i,r);var d=getInitialWarp(o,i);r.unconnectedComponents=r.unconnectedComponents.filter((e=>!e.includes(d)));var l=!0;!function E(){if(l)try{l=doNextMapping(i,d,r,o),r=updateProgressionState(r,d),setTimeout(E,0)}catch(i){attempts>0?(attempts-=1,generateRandomMappings(e,t+1,a,n,o,s)):(console.error("An error occured mapping warps "+i),M.toast({html:"ERROR: Error assigning valid connections.<BR> Please try a different seed or config",displayLength:1e4}),l=!1)}else cy.add(new WarpNode(["C,1,1,0",getMapData()["C,1,1,0"]])),cy.add(new WarpNode(["E,1,3,0",getMapData()["E,1,3,0"]])),cy.add(new WarpNode(["FR,4,0,2",getMapData()["FR,4,0,2"]])),window.cy.add(new WarpEdge("C,1,1,0","FR,4,0,2")),window.cy.add(new WarpEdge("E,1,3,0","FR,4,0,2")),e(getBaseRemappingData(),t,o)}()}function getInitialWarp(e,t){let a=[];if(e.kantoLevel>0)a=["FR,3,1,0","FR,3,1,4","FR,3,1,3","FR,3,1,1","FR,3,41,0"];else if(e.johtoLevel>0)a=["C,0,9,3","C,0,9,0","C,0,16,0","C,0,10,4","C,0,10,1","C,0,10,0"];else{if(!(e.hoennLevel>0))return KEY_LOCATION_DATA["VIRIDIAN CITY"];a=["E,0,10,2","E,0,10,1","E,0,10,0","E,0,10,3","E,0,0,0","E,0,0,4","E,0,0,5","E,0,0,3","E,0,0,2"]}return a[t.nextRange(0,a.length)]}function filterIgnored(e){return new Map([...e].filter((e=>!e[1].ignore)))}function filterByConfig(e,t){return e=new Map([...e].filter((a=>{let n=null;return"E"==a[0][0]?n=t.hoennLevel:"F"==a[0][0]?n=t.kantoLevel:"C"==a[0][0]&&(n=t.johtoLevel),e.get(a[0]).level&&+e.get(a[0]).level<=+n})))}function generateEscapeWarps(e,t,a,n){let o=new Set(t.keys()),s=e.map((e=>e.filter((e=>o.has(e))))).filter((e=>e.length>0)).flatMap((e=>e[a.nextRange(0,e.length-1)]));return n.randomMustLinkHomeWarps=s,n}function filteGroupedNotMain(e){return new Map([...e].filter((e=>e[1].groupMain||!e[1].grouped)))}function removeRemovableLocations(e){return new Map([...e].filter((e=>!(e[1].tags&&e[1].tags.includes("removeable")))))}function toMapBank(e){let t=e.split(",");return t[0]+","+t[1]+","+t[2]}function ProgressionState(e,t){this.remainingConditionalEdges=new Set,this.flags=new Set,this.flagData=e,this.config=t,this.unmarkedLocations=new Map(Object.entries(e.LOCATIONS_TRIGGER)),this.unmarkedFlags=new Map(Object.entries(e.COMPOSITE_FLAGS)),this.unmarkedKeyLocations=new Map(Object.entries(e.KEY_LOCATIONS))}function WarpListData(e,t,a){this.warpList=Array.from(a.entries()),this.seed=e,this.config=t}function exportMapping(){storageManager.find("RANDOM_MAPPING").then((e=>{let t=JSON.stringify(e),a=new File([t],"WarpMapping.json",{type:"application/json;charset=utf-8"});saveAs(a)}))}function importMapping(){let e=this.files[0],t=new FileReader;t.readAsText(e,"UTF-8"),t.onload=e=>{let t=e.target.result,a=JSON.parse(t);updateWarpListData(a),storageManager.persist("RANDOM_MAPPING",a)}}function updateWarpListData(e){document.getElementById("input_seed_text").value=e.seed,document.getElementById("kantoLevel").value=e.config.kantoLevel,document.getElementById("johtoLevel").value=e.config.johtoLevel||e.config.jhotoLevel,document.getElementById("hoennLevel").value=e.config.hoennLevel,M.FormSelect.getInstance(document.getElementById("kantoLevel"))._handleSelectChangeBound(),M.FormSelect.getInstance(document.getElementById("johtoLevel"))._handleSelectChangeBound(),M.FormSelect.getInstance(document.getElementById("hoennLevel"))._handleSelectChangeBound(),warpList=new Map(e.warpList),updateHashDisplay()}function updateHashDisplay(){document.getElementById("hashText").innerHTML="CHECK: "+Math.abs(getHash(JSON.stringify(Array.from(warpList)))).toString(16).toUpperCase()}function PKWarp(e,t,a,n,o,s){this.trigger=e,this.toRomCode=t,this.toBank=a,this.toMap=n,this.toWarpNo=o,this.source=s}function getHash(e){for(var t=0,a=e.length,n=0;n<a;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return t}function RNG(e){this.m=2147483648,this.a=1103515245,this.c=12345,this.state=e||Math.floor(Math.random()*(this.m-1))}function ReigonNode(e){this.data={},this.data.id=e,this.classes="reigon"}function AreaNode(e){this.data={},this.data.id=toMapBank(e[0]),this.data.isMap=!0,this.data.parent=toReigon(e[0]),this.data.label=e[0]+" ("+e[1].name.split("-")[0]+"- "+e[1].name.split("-")[1].trim()+")"}function WarpNode(e){this.data={},this.data.id=e[0],this.data.parent=toMapBank(e[0]),this.data.label=e[1].name?e[0]+e[1].name.split("-")[2]:e[0]+" (Unnamed)",this.classes="outline",this.data.isWarp=!0,this.data.isMapped=!1,this.data.needsReturn=e[1].tags&&e[1].tags.includes("needs_return"),this.data.noReturn=e[1].tags&&e[1].tags.includes("no_return"),this.data.lowPriority=e[1].tags&&e[1].tags.includes("low_priority"),this.data.hasMultipleConnections=!!e[1].connections&&Object.values(e[1].connections).filter((e=>1==e)).length>0}function FixedEdge(e,t){this.data={},this.data.id=e+"->"+t,this.data.source=e,this.data.target=t,this.classes="fixed"}function CondidtionalEdge(e,t,a){this.data={},this.data.id=e+"->"+t,this.data.source=e,this.data.target=t,this.classes="conditional",this.condition=a}function WarpEdge(e,t,a){this.data={},this.data.id=e+"->"+t+"#"+window.cy.getElementById(e+"->"+t).length,this.data.source=e,this.data.target=t,this.data.isWarp=!0,this.classes="warp"}function getAugmetedRemappingData(e){return e=addTriggerData(e=addGroupedMappings(e))}function addGroupedMappings(e){let t=[];return e.forEach((e=>{let a=getMapData()[e.source].grouped;a&&a.forEach((a=>{t.push({source:a,target:e.target})}))})),[...e,...t]}function addTriggerData(e){return e.map((e=>(e.trigger=getMapData()[e.source].to,e)))}function getBaseRemappingData(){return cy.edges().filter((e=>e.data().isWarp)).map((e=>({source:e.data().source,target:e.data().target})))}function getFilteredData(){let e=new Map(Object.entries(getMapData()));return e=filterIgnored(e),e=filteGroupedNotMain(e),e=filterByConfig(e,getRandomisationConfig()),e=removeRemovableLocations(e),e}function toReigon(e){switch(e[0]){case"F":return"KANTO";case"C":return"JOHTO";case"E":return"HOENN"}}function findAccessibleUnmappedNodes(e,t){let a=new Set;return e.elements().bfs({roots:e.getElementById(t),directed:!0,visit:(e,t,n,o,s)=>{e.data().isMapped||a.add(e)}}),a}function doNextMapping(e,t,a,n){let o=a.cachedNodes?a.cachedNodes:findAccessibleUnmappedNodes(window.cy,t),s=cy.nodes().not(o).filter((e=>e.data().isWarp&&!e.data().isMapped)),i=s.filter((e=>a.unmarkedLocations.has(e.data().id))),r=s.filter((e=>a.unmarkedLocations.has(e.data().id))),d=" ( "+Math.floor(o.size/(o.size+s.length)*100)+"%)";if(0==o.size&&0==s.length)return!1;if(0==o.size&&(i.length>0||r.length>0))throw new Error("Seed Failed");if(0==o.size&&s.filter((e=>!e.data().lowPriority))>0)throw new Error("Seed Failed");if(a.randomMustLinkHomeWarps.length>0){let e=Array.from(o).filter((e=>!a.randomMustLinkHomeWarps.includes(e.data().id)));e.length>0?o=new Set(e):a.randomMustLinkHomeWarps=[]}let l=null,E=null,c=!1,g=s.filter((e=>e.degree(!0)>0));if(a.unconnectedComponents.length>0){l=[...o].sort((()=>e.nextRange(0,2)-.5))[e.nextRange(0,o.size-1)],o.delete(l);let t=a.unconnectedComponents.flat(),n=t.filter((e=>!a.randomMustLinkHomeWarps.includes(e)));n.length>0?t=n:(console.warn("Clearing must link home warps even though some were not satisfied"),a.randomMustLinkHomeWarps=[]);let s=selectRandomWarp(e,t,l);E=cy.getElementById(s),a.unconnectedComponents=a.unconnectedComponents.filter((e=>!e.includes(s))),console.log("HUBS"),a.unconnectedComponents.length>0?updateProgressUI("Main Connections Remaining: "+a.unconnectedComponents.length+d):updateProgressUI("Evaluating potential softlocks..."+d)}else if(a.randomMustLinkHomeWarps.length>0&&o.size>1){let n=cy.nodes().filter((e=>!e.data().isMapped&&a.randomMustLinkHomeWarps.includes(e.data().id)));n.length>0?l=[...n][e.nextRange(0,n.length-1)]:(l=[...o][e.nextRange(0,o.size-1)],console.warn("Clearing must link home warps even though some were not satisfied"),a.randomMustLinkHomeWarps=[]),o.delete(l);let s=null;if(a.homeEscapesList)s=a.homeEscapesList;else{let e=cy.elements().floydWarshall({directed:!0});a.homeEscapesList=Array.from(o).filter((a=>"Infinity"!=e.distance(cy.getElementById(t),a))),s=a.homeEscapesList,a.homeEscapesList.forEach((e=>{a.randomMustLinkHomeWarps.includes(e.data().id)&&a.randomMustLinkHomeWarps.splice(a.randomMustLinkHomeWarps.indexOf(e.data().id),1)}))}s=0==s.length?o:s,E=selectRandomWarp(e,s,l),o.delete(E),a.randomMustLinkHomeWarps.splice(a.randomMustLinkHomeWarps.indexOf(l.data().id),1),a.homeEscapesList=a.homeEscapesList.filter((e=>e.data().id!=E.data().id)),console.log("HOME LINKS"),updateProgressUI("Paths to fix: "+a.randomMustLinkHomeWarps.length+d)}else if(i.length>0)l=[...o][e.nextRange(0,o.size-1)],o.delete(l),E=selectRandomWarp(e,i,l),E.addClass("significant"),console.log("FLAGS"),updateProgressUI("Flag Locations Left: "+i.length+d);else if(g.length>0)l=[...o][e.nextRange(0,o.size-1)],o.delete(l),s=s.filter((e=>e.degree(!0)>0)),E=selectRandomWarp(e,s,l),console.log("MORE HUBS"),updateProgressUI("Hubs Left: "+g.length+d);else if(r.length>0)l=[...o][e.nextRange(0,o.size-1)],o.delete(l),E=selectRandomWarp(e,r,l),c=!0,o.delete(E),E.addClass("significant"),console.log("KEY LOCATIONS"),updateProgressUI("Key Locations Left: "+r.length+d);else if(s.length>0){l=[...o][e.nextRange(0,o.size-1)],o.delete(l);let t=s.filter((e=>!e.data().lowPriority));E=t.length>0?selectRandomWarp(e,t,l):selectRandomWarp(e,s,l),c=!0,o.delete(E),console.log("DEADENDS"),updateProgressUI("Deadends Left: "+s.length+d)}else if(o.size>1)l=[...o][e.nextRange(0,o.size-1)],o.delete(l),E=selectRandomWarp(e,[...o],l),c=!0,o.delete(E),console.log("MORE CONNECTIONS"),updateProgressUI("Finalizing Connections: "+o.size+d);else if(l=[...o][e.nextRange(0,o.size-1)],o.delete(l),n.hoennLevel>0){let t=["E,24,83,0","E,26,10,0","E,26,55,0","E,24,98,0","FR,1,122,0","E,25,43,11","E,25,42,0"][e.nextRange(0,6)];E=cy.add(new WarpNode([t,getMapData()[t]])),c=!0,o.delete(E)}else{let e="FR,1,122,0";E=cy.add(new WarpNode([e,getMapData()[e]])),c=!0,o.delete(E)}if(!l){if(0!=o.size?(console.log("Some accessible nodes were left:"),o.forEach((e=>{console.log(e.data().id)}))):console.log("All accesible nodes mapped"),0!=s.size)return console.log("Some inaccessible nodes were left:"),s.forEach((e=>{console.log(e.data().id)})),E.data().isMapped=!0,!1;console.log("All inaccesible nodes mapped")}if(window.cy.add(new WarpEdge(l.data().id,E.data().id)),l!=E&&window.cy.add(new WarpEdge(E.data().id,l.data().id)),l.data().isMapped)throw new Error(l.data().id+" (warp1) is already mapped. We shouldn't be trying to remap it");if(E.data().isMapped)throw new Error(E.data().id+" (warp2) is already mapped. We shouldn't be trying to remap it");return l.data().isMapped=!0,E.data().isMapped=!0,!0}function updateProgressUI(e){let t=document.getElementById("mappingProgress");e?(t.classList.remove("hide"),t.innerHTML=e):t.classList.add("hide")}function selectRandomWarp(e,t,a){let n=a.data().needsReturn,o=a.data().noReturn;return n?t=t.filter((e=>"string"==typeof e?!cy.getElementById(e).data().noReturn:!e.data().noReturn)):o&&(t=t.filter((e=>"string"==typeof e?!cy.getElementById(e).data().needsReturn:!e.data().needsReturn))),0==t.length&&M.toast({html:"ERROR: Progression logic could not be verified.<BR> Please try a different seed",displayLength:5e3}),t[e.nextRange(0,t.length-1)]}function updateProgressionState(e,t){let a=new Set;cy.elements().bfs({roots:cy.getElementById(t),directed:!0,visit:(e,t,n,o,s)=>{a.add(e.data().id)}}),e.unmarkedLocations.forEach(((t,n)=>{a.has(n)&&(e.unmarkedLocations.delete(n),e.flags.add(t))})),e.unmarkedFlags.forEach((t=>{t.condition.every((t=>e.flags.has(t)))&&(e.flags.add(t.flag),e.unmarkedFlags.delete(t.flag))}));let n=e.remainingConditionalEdges;return n.forEach((t=>{e.flags.has(t.condition)&&(cy.getElementById(t.data.target).length>0&&cy.getElementById(t.data.source).length>0&&cy.add(t),n.delete(t))})),e}function initMappingGraph(e,t,a){var n=window.cy=cytoscape({container:t?null:document.getElementById("cy"),headless:t,styleEnabled:!t,boxSelectionEnabled:!1,textureOnViewport:!0,style:[{selector:"node",css:{content:"data(id)","text-valign":"center","text-halign":"center"}},{selector:":parent",css:{"text-valign":"top","text-halign":"center"},style:{shape:"roundrectangle"}},{selector:"edge",css:{"curve-style":"bezier","target-arrow-shape":"triangle"}},{selector:"node[label]",style:{label:"data(label)","text-valign":"bottom","text-halign":"center"}},{selector:".reigon",css:{"background-color":"#2f3138",color:"#C0C0C0","font-size":"5em","text-valign":"top"}},{selector:".map-F",css:{"background-color":"#ffc0c3",color:"#C0C0C0","font-size":"2em"}},{selector:".map-C",css:{"background-color":"#c0c3ff",color:"#C0C0C0","font-size":"2em"}},{selector:".map-E",css:{"background-color":"#262729",color:"#C0C0C0","font-size":"2em"}},{selector:".warp",css:{"line-color":"#f92411","curve-style":"straight-triangle"}},{selector:".conditional",css:{"line-color":"#1911f9"}},{selector:".fixed",css:{opacity:"0.5"}},{selector:".significant",css:{"background-color":"#FFD700",shape:"hexagon"}},{selector:".indoors",css:{"background-color":"#543d48"}},{selector:".faded",css:{opacity:.2,"line-color":"#24080c"}}],elements:{nodes:[],edges:[]}});n.add(new ReigonNode("KANTO")),n.add(new ReigonNode("JOHTO")),n.add(new ReigonNode("HOENN"));let o=[...e];return o.forEach((e=>{n.getElementById(toMapBank(e[0])).length||n.add(new AreaNode(e)).addClass("map-"+e[0][0]),n.add(new WarpNode(e))})),o.forEach((e=>{let t=e[1].connections?e[1].connections:{};Object.entries(t).forEach((t=>{"string"==typeof t[1]?(a.remainingConditionalEdges.add(new CondidtionalEdge(e[0],t[0],t[1])),n.getElementById(t[0]).length>0&&n.add(new CondidtionalEdge(e[0],t[0],t[1]))):n.getElementById(t[0]).length>0&&n.add(new FixedEdge(e[0],t[0]))}))})),a.unconnectedComponents=n.elements().components().filter((e=>e.size()>1)).map((e=>e.toArray().filter((e=>"nodes"==e.group()&&e.data().isWarp&&e.data().hasMultipleConnections)).map((e=>e.data().id)))).filter((e=>e.length>0)),a.remainingConditionalEdges.forEach((e=>n.getElementById(e.data.id).remove())),n.nodes().forEach((function(e){e.css("width",80),e.css("height",80)})),t||n.layout({name:"cose-bilkent",animationDuration:1e3,nodeDimensionsIncludeLabels:!0}).run(),a.makeFinalLocationsKey(),a}function getHint(e){let t=new Map(Object.entries(getMapData())),a=warpList.get(t.get(e).to);if(!a)return"NOT PRESENT";let n=t.get(a.toRomCode+","+a.toBank+","+a.toMap+","+a.toWarpNo).name;return("E"==a.toRomCode?"HOENN - ":"C"==a.toRomCode?"JOHTO - ":"KANTO - ")+n.split("-")[0].trim()+" - "+n.split("-")[1].trim()}ProgressionState.prototype.makeFinalLocationsKey=function(e){let t=[];switch(this.config.kantoLevel){case"1":t.push(HINTABLE_LOCATIONS.BROCK);break;case"2":t.push(HINTABLE_LOCATIONS.MISTY);break;case"3":t.push(HINTABLE_LOCATIONS["LT SURGE"]);break;case"4":t.push(HINTABLE_LOCATIONS.ERIKA);break;case"5":t.push(HINTABLE_LOCATIONS.KOGA);break;case"6":t.push(HINTABLE_LOCATIONS.SABRIBA);break;case"7":t.push(HINTABLE_LOCATIONS.BLAINE);break;case"8":t.push(HINTABLE_LOCATIONS.GIOVANNI)}switch(this.config.johtoLevel){case"1":t.push(HINTABLE_LOCATIONS.FALKNER);break;case"2":t.push(HINTABLE_LOCATIONS.BUGSY);break;case"3":t.push(HINTABLE_LOCATIONS.WHITNEY);break;case"4":t.push(HINTABLE_LOCATIONS.MORTY);break;case"5":t.push(HINTABLE_LOCATIONS.CHUCK);break;case"6":t.push(HINTABLE_LOCATIONS.JASMINE);break;case"7":t.push(HINTABLE_LOCATIONS.PRYCE);break;case"8":t.push(HINTABLE_LOCATIONS.CLAIR)}switch(this.config.hoennLevel){case"1":t.push(HINTABLE_LOCATIONS.ROXANNE);break;case"2":t.push(HINTABLE_LOCATIONS.BRAWLY);break;case"3":t.push(HINTABLE_LOCATIONS.WATTSON);break;case"4":t.push(HINTABLE_LOCATIONS.FLANNERY);break;case"5":t.push(HINTABLE_LOCATIONS.NORMAN);break;case"6":t.push(HINTABLE_LOCATIONS.WINONA);break;case"7":t.push(HINTABLE_LOCATIONS["TATE AND LIZA"]);break;case"8":t.push(HINTABLE_LOCATIONS.JUAN)}t.forEach((e=>{this.unmarkedLocations.has(e)&&(this.unmarkedKeyLocations.set(e,this.unmarkedLocations.get(e)),this.unmarkedLocations.delete(e))}))},RNG.prototype.nextInt=function(){return this.state=(this.a*this.state+this.c)%this.m,this.state},RNG.prototype.nextFloat=function(){return this.nextInt()/(this.m-1)},RNG.prototype.nextRange=function(e,t){var a=t-e,n=this.nextInt()/this.m;return Math.abs(e+Math.floor(n*a))},RNG.prototype.choice=function(e){return e[this.nextRange(0,e.length)]};var HINTABLE_LOCATIONS={BROCK:"FR,6,2,1",MISTY:"FR,7,5,1","LT SURGE":"FR,9,6,1",ERIKA:"FR,10,16,1",KOGA:"FR,11,3,1",SABRINA:"FR,14,3,1",BLAINE:"FR,12,0,1",GIOVANNI:"FR,5,1,1","E4 LORELEI":"FR,1,75,0","E4 BRUNO (FR)":"FR,1,76,0","E4 AGATHA":"FR,1,77,0","E4 LANCE":"FR,1,78,0","CHAMPION RIVAL":"FR,1,79,0",FALKNER:"C,8,1,0",BUGSY:"C,3,3,0",WHITNEY:"C,11,3,0",MORTY:"C,12,1,0",CHUCK:"C,4,1,0",JASMINE:"C,10,0,0",PRYCE:"C,14,0,0",CLAIR:"C,15,0,0","E4 WILL":"C,16,0,0","E4 KOGA":"C,16,1,0","E4 BRUNO (C)":"C,16,2,0","E4 KAREN":"C,16,3,0","CHAMPION LANCE":"C,16,4,0",ROXANNE:"E,11,3,0",BRAWLY:"E,3,3,0",WATTSON:"E,10,0,0",FLANNERY:"E,4,1,0",NORMAN:"E,8,1,0",WINONA:"E,12,1,0","TATE AND LIZA":"E,14,0,0",JUAN:"E,15,0,0",SIDNEY:"E,16,0,0",SIDNEY_BACK:"E,16,0,1",PHOEBE:"E,16,1,0",PHOEBE_BACK:"E,16,1,1",GLACIA:"E,16,2,0",GLACIA_BACK:"E,16,2,1",DRAKE:"E,16,3,0",DRAKE_BACK:"E,16,3,1",WALLACE:"E,16,4,0",STEVEN:"E,24,107,0"},LOCATIONS_DISABLED_FLAGS={CUT:["HOENN_CUT"],FLASH:["HOENN_FLASH"],ROCKSMASH:["HOENN_ROCK_SMASH"],STRENGTH:["HOENN_STRENGTH"],WATERFALL:["HOENN_WATERFALL"],"BIKE SHOP":["BIKE"],"MAGMA EMBLEM":["MAGMA_EMBLEM"],"STOREAGE KEY":["STOREAGE_KEY"],"STONE OFFICE":["TALK_TO_STONE"],"STEVEN LETTER":["UNLOCK_SLATEPORT"],"WEATHER INSTITUTE F2":["WEATHER_INSTITUTE"],"WALLACE ORIGIN CAVE":["SPEAK_TO_WALLACE"],"METEOR FALLS F1":["MAGMA_METEOR_FALLS"],ROXANNE:["HOENN_CUT","HOENN_FLASH","HOENN_ROCK_SMASH","HOENN_STRENGTH","HOENN_SURF","HOENN_WATERFALL"],BRAWLY:["HOENN_FLASH","HOENN_ROCK_SMASH","HOENN_STRENGTH","HOENN_SURF","HOENN_WATERFALL"],WATTSON:["HOENN_ROCK_SMASH","HOENN_STRENGTH","HOENN_SURF","HOENN_WATERFALL"],FLANNERY:["HOENN_STRENGTH","HOENN_SURF","HOENN_WATERFALL"],NORMAN:["HOENN_SURF","HOENN_WATERFALL"],WINONA:["HOENN_WATERFALL"],"TATE AND LIZA":["HOENN_WATERFALL"],JUAN:["HOENN_WATERFALL"]};function flagWeight(e,t){if(e.data().isWarp)return 1;var a=getMapData()[e.data().source].connections[e.data().target];return!0===a?1:LOCATIONS_DISABLED_FLAGS[t]&&LOCATIONS_DISABLED_FLAGS[t].includes(a)?99999:100*Object.values(COMPOSITE_FLAGS).filter((e=>e.flag==a))[0].condition.length}function shortestPath(e){return shortestPathPreCalcFW(cy.elements().floydWarshall({weight:t=>flagWeight(t,e),directed:!0}),e)}function allshortestPaths(){var e=cy.elements().floydWarshall({weight:e=>flagWeight(e,location),directed:!0});return Object.entries(PATH_FINDING_LOCATIONS).map((t=>{let a=shortestPathPreCalcFW(e,t[1]);return a.name=t[0],a}))}function shortestPathPreCalcFW(e,t){let a=e.path(cy.getElementById("E,0,10,2"),PATH_FINDING_LOCATIONS[t]?cy.getElementById(PATH_FINDING_LOCATIONS[t]):cy.getElementById(t)).map((e=>e.isNode()?Object.assign({},getMapData()[e.data().id]):e.data().isWarp?{name:e.data().id,type:"WARP"}:{name:e.data().id,type:"WALK",conditions:[getMapData()[e.data().source].connections[e.data().target]]})),n=[];for(i=a.length-1;i>=2;i--)"WALK"==a[i].type&&"WALK"==a[i-2].type&&(a[i].collapse=!0,a[i-1].collapse=!0,a[i-2].conditions=a[i-2].conditions.concat(a[i].conditions)),"WALK"==a[i].type&&(n=n.concat(a[i].conditions));return{route:a.filter((e=>!e.collapse)).map((e=>{if(e.type&&e.conditions){let t="("+Array.from(new Set(e.conditions.filter((e=>"string"==typeof e)))).join(",")+")";return"()"==t?e.type:e.type+t}return e.type?e.type:e.name})),flags:new Set(n.filter((e=>"string"==typeof e)))}}var ESCAPE_PATHS=[["FR,13,0,0","FR,13,0,2"],["FR,28,0,2"],["FR,3,2,6","FR,3,2,5","FR,3,2,3","FR,3,2,4","FR,3,2,2","FR,3,2,0"],["FR,3,3,0","FR,3,3,2","FR,3,3,3","FR,3,3,4","FR,3,3,5","FR,3,3,6","FR,3,3,0","FR,3,3,12","FR,3,3,13","FR,3,44,0"],["FR,3,5,3","FR,3,5,4","FR,3,5,5","FR,3,5,6","FR,3,5,7","FR,3,5,8","FR,3,29,0","FR,3,29,1","FR,3,24,0","FR,3,24,1"],["FR,3,28,2"],["FR,1,93,1"],["FR,8,2,1"],["FR,25,1,3","FR,25,1,4"],["FR,26,0,1","FR,26,0,2"],["FR,3,10,9","FR,3,10,11","FR,3,10,10","FR,3,10,8","FR,3,10,7","FR,3,10,9","FR,3,10,6","FR,3,10,0","FR,3,10,2","FR,3,10,5","FR,3,10,14"],["FR,17,1,1"],["FR,18,0,2"],["FR,19,0,0"],["FR,20,0,2"],["FR,3,8,0","FR,3,8,2","FR,3,8,2","FR,3,8,3","FR,3,8,4"],["FR,1,75,1"],["FR,1,76,1"],["FR,1,77,1"],["FR,1,78,1"],["C,24,44,1","C,24,44,3"],["C,32,0,0"],["C,0,8,0","C,0,8,3"],["C,0,35,0"],["C,0,9,0","C,0,9,1","C,0,9,2","C,0,9,3","C,0,16,0","C,0,10,0","C,0,10,1","C,0,10,2","C,0,10,3","C,0,17,0","C,0,17,1"],["C,0,0,0","C,0,0,1","C,0,0,2","C,0,0,3","C,0,0,4","C,0,0,5","C,0,0,6","C,0,0,7","C,0,19,0","C,0,23,0"],["C,24,86,9"],["C,24,88,0"],["C,24,9,0"],["C,0,20,0","C,0,11,6","C,0,11,5","C,0,11,4","C,0,11,3","C,0,11,1","C,0,11,0"],["C,0,21,0","C,0,21,2","C,0,3,0","C,0,3,2","C,0,3,3","C,0,3,5","C,0,3,6","C,0,3,8","C,0,3,11","C,0,3,14"],["C,11,9,1","C,11,9,0"],["C,24,53,3"],["C,9,7,0"],["C,0,1,0","C,0,1,1","C,0,1,2","C,0,1,4","C,0,1,5","C,0,1,6","C,0,1,7","C,0,1,8","C,0,1,10","C,0,1,11"],["C,0,25,0","C,0,26,0","C,0,26,1","C,0,2,0","C,0,2,1","C,0,2,2","C,0,2,3","C,0,2,4","C,0,2,5","C,0,2,6","C,0,2,7","C,0,2,8","C,0,27,0"],["C,24,30,1"],["C,24,30,2"],["C,24,34,7"],["C,24,35,2","C,24,35,3"],["C,0,12,0","C,0,12,1","C,0,12,2","C,0,12,3","C,0,12,4","C,0,12,5","C,0,12,6"],["C,24,15,1","C,24,15,8"],["C,24,16,3","C,24,16,5","C,24,16,4","C,24,16,2"],["C,0,13,0","C,0,13,2","C,0,13,3","C,0,13,4","C,0,29,3"],["C,24,52,0"],["C,0,33,1"],["C,24,7,0"],["C,24,8,0"],["C,16,0,1"],["C,16,1,1"],["C,16,2,1"],["C,16,3,1"],["E,29,11,0"],["E,29,12,0"],["E,0,9,0","E,0,9,1","E,0,9,2","E,0,10,0","E,0,10,1","E,0,10,2","E,0,10,3"],["E,0,11,0","E,0,11,1","E,0,11,2","E,0,11,3","E,0,11,4","E,0,21,0"],["E,0,7,2"],["E,0,7,10","E,0,7,1","E,0,7,8","E,0,7,6","E,0,7,4","E,0,7,3","E,0,7,13"],["E,0,7,0","E,0,7,12","E,0,7,9","E,0,7,11","E,0,7,7","E,0,7,5"],["E,0,8,0","E,0,8,3"],["E,0,8,1","E,0,8,2"],["E,16,10,4","E,16,10,0"],["E,0,15,0","E,0,15,1","E,0,15,2","E,0,15,3","E,0,15,4","E,0,15,5"],["E,0,6,0","E,0,6,1","E,0,6,2","E,0,6,3","E,0,6,4","E,0,6,5","E,0,6,6","E,0,6,7","E,0,6,8","E,0,6,9"],["E,0,1,0","E,0,1,1","E,0,1,2","E,0,1,3","E,0,1,4","E,0,1,6","E,0,1,8","E,0,1,10","E,0,24,0","E,0,25,4"],["E,0,25,1","E,0,25,2","E,0,2,0","E,0,2,1","E,0,2,2","E,0,2,3","E,0,2,4","E,0,2,5","E,0,2,6","E,0,26,0","E,0,26,4","E,0,32,0","E,0,14,0","E,0,14,1","E,0,14,2","E,0,14,3","E,0,14,4","E,0,14,5","E,0,14,6"],["E,0,26,2","E,0,27,5","E,0,28,0","E,0,13,0","E,0,13,1","E,0,13,2","E,0,13,3","E,0,13,4","E,0,29,0","E,0,29,1","E,0,29,2"],["E,0,5,0","E,0,5,1","E,0,5,2","E,0,5,3","E,0,5,4","E,0,5,5","E,0,5,7","E,0,5,8","E,0,5,9","E,0,5,10","E,0,5,11","E,0,5,12","E,0,36,0"],["E,0,27,4","E,0,27,0"],["E,16,0,1"],["E,16,1,1"],["E,16,2,1"],["E,16,3,1"],["E,24,1,0","E,24,1,3"],["E,24,7,0","E,24,7,2"],["E,24,8,3","E,24,8,1"],["E,24,9,2"],["E,24,13,0"],["E,24,16,0","E,24,16,1","E,24,16,4"],["E,24,23,2"],["E,24,31,3"],["E,24,44,0"],["E,24,44,4"],["E,24,45,0"],["E,24,52,0"],["E,24,57,0","E,24,57,1","E,24,57,2","E,24,57,3","E,24,57,4","E,24,57,6","E,24,57,7"],["E,24,6,0"],["E,24,68,0"],["E,24,78,0"],["E,24,81,0","E,24,81,1"],["E,24,81,2"],["E,24,86,1"],["E,24,94,0","E,24,94,1"],["E,8,0,0"],["E,13,10,0"],["E,9,9,0"],["E,24,29,3"]];
//# sourceMappingURL=build-index.bf9afe70.js.map
