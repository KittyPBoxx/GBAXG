{"mappings":"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","sources":["dist/IodineGBA/core/Serial.js"],"sourcesContent":["\"use strict\";\n/*\n Copyright (C) 2012-2015 Grant Galitz\n \n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n \n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n \n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction GameBoyAdvanceSerial(IOCore) {\n    this.IOCore = IOCore;\n}\nGameBoyAdvanceSerial.prototype.initialize = function () {\n    this.SIODATA_A = 0xFFFF;\n    this.SIODATA_B = 0xFFFF;\n    this.SIODATA_C = 0xFFFF;\n    this.SIODATA_D = 0xFFFF;\n    this.SIOShiftClockExternal = 0;\n    this.SIOShiftClockDivider = 0x40;\n    this.SIOCNT0_DATA = 0x0C;\n    this.SIOTransferStarted = false;\n    this.SIOMULT_PLAYER_NUMBER = 0;\n    this.SIOCOMMERROR = false;\n    this.SIOBaudRate = 0;\n    this.SIOCNT_UART_CTS = false;\n    this.SIOCNT_UART_MISC = 0;\n    this.SIOCNT_UART_FIFO = 0;\n    this.SIOCNT_IRQ = 0;\n    this.SIOCNT_MODE = 0;\n    this.SIOCNT_UART_RECV_ENABLE = false;\n    this.SIOCNT_UART_SEND_ENABLE = false;\n    this.SIOCNT_UART_PARITY_ENABLE = false;\n    this.SIOCNT_UART_FIFO_ENABLE = false;\n    this.SIODATA8 = 0xFFFF;\n    this.RCNTMode = 0;\n    this.RCNTIRQ = false;\n    this.RCNTDataBits = 0;\n    this.RCNTDataBitFlow = 0;\n    this.JOYBUS_IRQ = 0;\n    this.JOYBUS_CNTL_FLAGS = 0;\n    this.JOYBUS_RECV0 = 0xFF;\n    this.JOYBUS_RECV1 = 0xFF;\n    this.JOYBUS_RECV2 = 0xFF;\n    this.JOYBUS_RECV3 = 0xFF;\n    this.JOYBUS_SEND0 = 0xFF;\n    this.JOYBUS_SEND1 = 0xFF;\n    this.JOYBUS_SEND2 = 0xFF;\n    this.JOYBUS_SEND3 = 0xFF;\n    this.JOYBUS_STAT = 0;\n    this.shiftClocks = 0;\n    this.serialBitsShifted = 0;\n}\nGameBoyAdvanceSerial.prototype.SIOMultiplayerBaudRate = [\n      9600,\n     38400,\n     57600,\n    115200\n];\nGameBoyAdvanceSerial.prototype.addClocks = function (clocks) {\n    clocks = clocks | 0;\n    if ((this.RCNTMode | 0) < 2) {\n        switch (this.SIOCNT_MODE | 0) {\n            case 0:\n            case 1:\n                if (this.SIOTransferStarted && (this.SIOShiftClockExternal | 0) == 0) {\n                    this.shiftClocks = ((this.shiftClocks | 0) + (clocks | 0)) | 0;\n                    while ((this.shiftClocks | 0) >= (this.SIOShiftClockDivider | 0)) {\n                        this.shiftClocks = ((this.shiftClocks | 0) - (this.SIOShiftClockDivider | 0)) | 0;\n                        this.clockSerial();\n                    }\n                }\n                break;\n            case 2:\n                if (this.SIOTransferStarted && (this.SIOMULT_PLAYER_NUMBER | 0) == 0) {\n                    this.shiftClocks = ((this.shiftClocks | 0) + (clocks | 0)) | 0;\n                    while ((this.shiftClocks | 0) >= (this.SIOShiftClockDivider | 0)) {\n                        this.shiftClocks = ((this.shiftClocks | 0) - (this.SIOShiftClockDivider | 0)) | 0;\n                        this.clockMultiplayer();\n                    }\n                }\n                break;\n            case 3:\n                if (this.SIOCNT_UART_SEND_ENABLE && !this.SIOCNT_UART_CTS) {\n                    this.shiftClocks = ((this.shiftClocks | 0) + (clocks | 0)) | 0;\n                    while ((this.shiftClocks | 0) >= (this.SIOShiftClockDivider | 0)) {\n                        this.shiftClocks = ((this.shiftClocks | 0) - (this.SIOShiftClockDivider | 0)) | 0;\n                        this.clockUART();\n                    }\n                }\n        }\n    }\n}\nGameBoyAdvanceSerial.prototype.clockSerial = function () {\n    //Emulate as if no slaves connected:\n    this.serialBitsShifted = ((this.serialBitsShifted | 0) + 1) | 0;\n    if ((this.SIOCNT_MODE | 0) == 0) {\n        //8-bit\n        this.SIODATA8 = ((this.SIODATA8 << 1) | 1) & 0xFFFF;\n        if ((this.serialBitsShifted | 0) == 8) {\n            this.SIOTransferStarted = false;\n            this.serialBitsShifted = 0;\n            if ((this.SIOCNT_IRQ | 0) != 0) {\n                //this.IOCore.irq.requestIRQ(0x80);\n            }\n        }\n    }\n    else {\n        //32-bit\n        this.SIODATA_D = ((this.SIODATA_D << 1) & 0xFE) | (this.SIODATA_C >> 7);\n        this.SIODATA_C = ((this.SIODATA_C << 1) & 0xFE) | (this.SIODATA_B >> 7);\n        this.SIODATA_B = ((this.SIODATA_B << 1) & 0xFE) | (this.SIODATA_A >> 7);\n        this.SIODATA_A = ((this.SIODATA_A << 1) & 0xFE) | 1;\n        if ((this.serialBitsShifted | 0) == 32) {\n            this.SIOTransferStarted = false;\n            this.serialBitsShifted = 0;\n            if ((this.SIOCNT_IRQ | 0) != 0) {\n                //this.IOCore.irq.requestIRQ(0x80);\n            }\n        }\n    }\n}\nGameBoyAdvanceSerial.prototype.clockMultiplayer = function () {\n    //Emulate as if no slaves connected:\n    this.SIODATA_A = this.SIODATA8 | 0;\n    this.SIODATA_B = 0xFFFF;\n    this.SIODATA_C = 0xFFFF;\n    this.SIODATA_D = 0xFFFF;\n    this.SIOTransferStarted = false;\n    this.SIOCOMMERROR = true;\n    if ((this.SIOCNT_IRQ | 0) != 0) {\n        //this.IOCore.irq.requestIRQ(0x80);\n    }\n}\nGameBoyAdvanceSerial.prototype.clockUART = function () {\n    this.serialBitsShifted = ((this.serialBitsShifted | 0) + 1) | 0;\n    if (this.SIOCNT_UART_FIFO_ENABLE) {\n        if ((this.serialBitsShifted | 0) == 8) {\n            this.serialBitsShifted = 0;\n            this.SIOCNT_UART_FIFO = Math.max(((this.SIOCNT_UART_FIFO | 0) - 1) | 0, 0) | 0;\n            if ((this.SIOCNT_UART_FIFO | 0) == 0 && (this.SIOCNT_IRQ | 0) != 0) {\n                //this.IOCore.irq.requestIRQ(0x80);\n            }\n        }\n    }\n    else {\n        if ((this.serialBitsShifted | 0) == 8) {\n            this.serialBitsShifted = 0;\n            if ((this.SIOCNT_IRQ | 0) != 0) {\n                //this.IOCore.irq.requestIRQ(0x80);\n            }\n        }\n    }\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA_A0 = function (data) {\n    data = data | 0;\n    this.SIODATA_A = (this.SIODATA_A & 0xFF00) | data;\n}\nGameBoyAdvanceSerial.prototype.readSIODATA_A0 = function () {\n    return this.SIODATA_A & 0xFF;\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA_A1 = function (data) {\n    data = data | 0;\n    this.SIODATA_A = (this.SIODATA_A & 0xFF) | (data << 8);\n}\nGameBoyAdvanceSerial.prototype.readSIODATA_A1 = function () {\n    return this.SIODATA_A >> 8;\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA_B0 = function (data) {\n    data = data | 0;\n    this.SIODATA_B = (this.SIODATA_B & 0xFF00) | data;\n}\nGameBoyAdvanceSerial.prototype.readSIODATA_B0 = function () {\n    return this.SIODATA_B & 0xFF;\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA_B1 = function (data) {\n    data = data | 0;\n    this.SIODATA_B = (this.SIODATA_B & 0xFF) | (data << 8);\n}\nGameBoyAdvanceSerial.prototype.readSIODATA_B1 = function () {\n    return this.SIODATA_B >> 8;\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA_C0 = function (data) {\n    data = data | 0;\n    this.SIODATA_C = (this.SIODATA_C & 0xFF00) | data;\n}\nGameBoyAdvanceSerial.prototype.readSIODATA_C0 = function () {\n    return this.SIODATA_C & 0xFF;\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA_C1 = function (data) {\n    data = data | 0;\n    this.SIODATA_C = (this.SIODATA_C & 0xFF) | (data << 8);\n}\nGameBoyAdvanceSerial.prototype.readSIODATA_C1 = function () {\n    return this.SIODATA_C >> 8;\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA_D0 = function (data) {\n    data = data | 0;\n    this.SIODATA_D = (this.SIODATA_D & 0xFF00) | data;\n}\nGameBoyAdvanceSerial.prototype.readSIODATA_D0 = function () {\n    return this.SIODATA_D & 0xFF;\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA_D1 = function (data) {\n    data = data | 0;\n    this.SIODATA_D = (this.SIODATA_D & 0xFF) | (data << 8);\n}\nGameBoyAdvanceSerial.prototype.readSIODATA_D1 = function () {\n    return this.SIODATA_D >> 8;\n}\nGameBoyAdvanceSerial.prototype.writeSIOCNT0 = function (data) {\n    if ((this.RCNTMode | 0) < 0x2) {\n        switch (this.SIOCNT_MODE | 0) {\n            //8-Bit:\n            case 0:\n            //32-Bit:\n            case 1:\n                this.SIOShiftClockExternal = data & 0x1;\n                this.SIOShiftClockDivider = ((data & 0x2) != 0) ? 0x8 : 0x40;\n                this.SIOCNT0_DATA = data & 0xB;\n                if ((data & 0x80) != 0) {\n                    if (!this.SIOTransferStarted) {\n                        this.SIOTransferStarted = true;\n                        this.serialBitsShifted = 0;\n                        this.shiftClocks = 0;\n                    }\n                }\n                else {\n                    this.SIOTransferStarted = false;\n                }\n                break;\n            //Multiplayer:\n            case 2:\n                this.SIOBaudRate = data & 0x3;\n                this.SIOShiftClockDivider = this.SIOMultiplayerBaudRate[this.SIOBaudRate | 0] | 0;\n                this.SIOMULT_PLAYER_NUMBER = (data >> 4) & 0x3;\n                this.SIOCOMMERROR = ((data & 0x40) != 0);\n                if ((data & 0x80) != 0) {\n                    if (!this.SIOTransferStarted) {\n                        this.SIOTransferStarted = true;\n                        if ((this.SIOMULT_PLAYER_NUMBER | 0) == 0) {\n                            this.SIODATA_A = 0xFFFF;\n                            this.SIODATA_B = 0xFFFF;\n                            this.SIODATA_C = 0xFFFF;\n                            this.SIODATA_D = 0xFFFF;\n                        }\n                        this.serialBitsShifted = 0;\n                        this.shiftClocks = 0;\n                    }\n                }\n                else {\n                    this.SIOTransferStarted = false;\n                }\n                break;\n            //UART:\n            case 3:\n                this.SIOBaudRate = data & 0x3;\n                this.SIOShiftClockDivider = this.SIOMultiplayerBaudRate[this.SIOBaudRate | 0] | 0;\n                this.SIOCNT_UART_MISC = (data & 0xCF) >> 2;\n                this.SIOCNT_UART_CTS = ((data & 0x4) != 0);\n        }\n    }\n}\nGameBoyAdvanceSerial.prototype.readSIOCNT0 = function () {\n    if (this.RCNTMode < 0x2) {\n        switch (this.SIOCNT_MODE) {\n            //8-Bit:\n            case 0:\n            //32-Bit:\n            case 1:\n                return ((this.SIOTransferStarted) ? 0x80 : 0) | 0x74 | this.SIOCNT0_DATA;\n            //Multiplayer:\n            case 2:\n                return ((this.SIOTransferStarted) ? 0x80 : 0) | ((this.SIOCOMMERROR) ? 0x40 : 0) | (this.SIOMULT_PLAYER_NUMBER << 4) | this.SIOBaudRate;\n            //UART:\n            case 3:\n                return (this.SIOCNT_UART_MISC << 2) | ((this.SIOCNT_UART_FIFO == 4) ? 0x30 : 0x20) | this.SIOBaudRate;\n        }\n    }\n    return 0xFF;\n}\nGameBoyAdvanceSerial.prototype.writeSIOCNT1 = function (data) {\n    this.SIOCNT_IRQ = data & 0x40;\n    this.SIOCNT_MODE = (data >> 4) & 0x3;\n    this.SIOCNT_UART_RECV_ENABLE = ((data & 0x8) != 0);\n    this.SIOCNT_UART_SEND_ENABLE = ((data & 0x4) != 0);\n    this.SIOCNT_UART_PARITY_ENABLE = ((data & 0x2) != 0);\n    this.SIOCNT_UART_FIFO_ENABLE = ((data & 0x1) != 0);\n}\nGameBoyAdvanceSerial.prototype.readSIOCNT1 = function () {\n    return (0x80 | this.SIOCNT_IRQ | (this.SIOCNT_MODE << 4) | ((this.SIOCNT_UART_RECV_ENABLE) ? 0x8 : 0) |\n    ((this.SIOCNT_UART_SEND_ENABLE) ? 0x4 : 0) | ((this.SIOCNT_UART_PARITY_ENABLE) ? 0x2 : 0) | ((this.SIOCNT_UART_FIFO_ENABLE) ? 0x2 : 0));\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA8_0 = function (data) {\n    data = data | 0;\n    this.SIODATA8 = (this.SIODATA8 & 0xFF00) | data;\n    if ((this.RCNTMode | 0) < 0x2 && (this.SIOCNT_MODE | 0) == 3 && this.SIOCNT_UART_FIFO_ENABLE) {\n        this.SIOCNT_UART_FIFO = Math.min(((this.SIOCNT_UART_FIFO | 0) + 1) | 0, 4) | 0;\n    }\n}\nGameBoyAdvanceSerial.prototype.readSIODATA8_0 = function () {\n    return this.SIODATA8 & 0xFF;\n}\nGameBoyAdvanceSerial.prototype.writeSIODATA8_1 = function (data) {\n    data = data | 0;\n    this.SIODATA8 = (this.SIODATA8 & 0xFF) | (data << 8);\n}\nGameBoyAdvanceSerial.prototype.readSIODATA8_1 = function () {\n    return this.SIODATA8 >> 8;\n}\nGameBoyAdvanceSerial.prototype.writeRCNT0 = function (data) {\n    if ((this.RCNTMode | 0) == 0x2) {\n        //General Comm:\n        var oldDataBits = this.RCNTDataBits | 0;\n        this.RCNTDataBits = data & 0xF;    //Device manually controls SI/SO/SC/SD here.\n        this.RCNTDataBitFlow = data >> 4;\n        if (this.RCNTIRQ && ((oldDataBits ^ this.RCNTDataBits) & oldDataBits & 0x4) != 0) {\n            //SI fell low, trigger IRQ:\n            //this.IOCore.irq.requestIRQ(0x80);\n        }\n    }\n}\nGameBoyAdvanceSerial.prototype.readRCNT0 = function () {\n    return (this.RCNTDataBitFlow << 4) | this.RCNTDataBits;\n}\nGameBoyAdvanceSerial.prototype.writeRCNT1 = function (data) {\n    this.RCNTMode = data >> 6;\n    this.RCNTIRQ = ((data & 0x1) != 0);\n    if ((this.RCNTMode | 0) != 0x2) {\n        //Force SI/SO/SC/SD to low as we're never \"hooked\" up:\n        this.RCNTDataBits = 0;\n        this.RCNTDataBitFlow = 0;\n    }\n}\nGameBoyAdvanceSerial.prototype.readRCNT1 = function () {\n    return (this.RCNTMode << 6) | ((this.RCNTIRQ) ? 0x3F : 0x3E);\n}\nGameBoyAdvanceSerial.prototype.writeJOYCNT = function (data) {\n    this.JOYBUS_IRQ = (data << 25) >> 31;\n    this.JOYBUS_CNTL_FLAGS &= ~(data & 0x7);\n}\nGameBoyAdvanceSerial.prototype.readJOYCNT = function () {\n    return (this.JOYBUS_CNTL_FLAGS | 0x40) | (0xB8 & this.JOYBUS_IRQ);\n}\nGameBoyAdvanceSerial.prototype.writeJOYBUS_RECV0 = function (data) {\n    this.JOYBUS_RECV0 = data | 0;\n}\nGameBoyAdvanceSerial.prototype.readJOYBUS_RECV0 = function () {\n    this.JOYBUS_STAT = this.JOYBUS_STAT & 0xF7;\n    return this.JOYBUS_RECV0 | 0;\n}\nGameBoyAdvanceSerial.prototype.writeJOYBUS_RECV1 = function (data) {\n    this.JOYBUS_RECV1 = data | 0;\n}\nGameBoyAdvanceSerial.prototype.readJOYBUS_RECV1 = function () {\n    this.JOYBUS_STAT = this.JOYBUS_STAT & 0xF7;\n    return this.JOYBUS_RECV1 | 0;\n}\nGameBoyAdvanceSerial.prototype.writeJOYBUS_RECV2 = function (data) {\n    this.JOYBUS_RECV2 = data | 0;\n}\nGameBoyAdvanceSerial.prototype.readJOYBUS_RECV2 = function () {\n    this.JOYBUS_STAT = this.JOYBUS_STAT & 0xF7;\n    return this.JOYBUS_RECV2 | 0;\n}\nGameBoyAdvanceSerial.prototype.writeJOYBUS_RECV3 = function (data) {\n    this.JOYBUS_RECV3 = data | 0;\n}\nGameBoyAdvanceSerial.prototype.readJOYBUS_RECV3 = function () {\n    this.JOYBUS_STAT = this.JOYBUS_STAT & 0xF7;\n    return this.JOYBUS_RECV3 | 0;\n}\nGameBoyAdvanceSerial.prototype.writeJOYBUS_SEND0 = function (data) {\n    this.JOYBUS_SEND0 = data | 0;\n    this.JOYBUS_STAT = this.JOYBUS_STAT | 0x2;\n}\nGameBoyAdvanceSerial.prototype.readJOYBUS_SEND0 = function () {\n    return this.JOYBUS_SEND0 | 0;\n}\nGameBoyAdvanceSerial.prototype.writeJOYBUS_SEND1 = function (data) {\n    this.JOYBUS_SEND1 = data | 0;\n    this.JOYBUS_STAT = this.JOYBUS_STAT | 0x2;\n}\nGameBoyAdvanceSerial.prototype.readJOYBUS_SEND1 = function () {\n    return this.JOYBUS_SEND1 | 0;\n}\nGameBoyAdvanceSerial.prototype.writeJOYBUS_SEND2 = function (data) {\n    this.JOYBUS_SEND2 = data | 0;\n    this.JOYBUS_STAT = this.JOYBUS_STAT | 0x2;\n}\nGameBoyAdvanceSerial.prototype.readJOYBUS_SEND2 = function () {\n    return this.JOYBUS_SEND2 | 0;\n}\nGameBoyAdvanceSerial.prototype.writeJOYBUS_SEND3 = function (data) {\n    this.JOYBUS_SEND3 = data | 0;\n    this.JOYBUS_STAT = this.JOYBUS_STAT | 0x2;\n}\nGameBoyAdvanceSerial.prototype.readJOYBUS_SEND3 = function () {\n    return this.JOYBUS_SEND3 | 0;\n}\nGameBoyAdvanceSerial.prototype.writeJOYBUS_STAT = function (data) {\n    this.JOYBUS_STAT = data | 0;\n}\nGameBoyAdvanceSerial.prototype.readJOYBUS_STAT = function () {\n    return 0xC5 | this.JOYBUS_STAT;\n}\n/*GameBoyAdvanceSerial.prototype.nextIRQEventTime = function (clocks) {\n    if ((this.SIOCNT_IRQ | 0) != 0 && (this.RCNTMode | 0) < 2) {\n        switch (this.SIOCNT_MODE | 0) {\n            case 0:\n            case 1:\n                if (this.SIOTransferStarted && (this.SIOShiftClockExternal | 0) == 0) {\n                    return ((((this.SIOCNT_MODE == 1) ? 31 : 7) - this.serialBitsShifted) * this.SIOShiftClockDivider) + (this.SIOShiftClockDivider - this.shiftClocks);\n                }\n                else {\n                    return 0x7FFFFFFF;\n                }\n            case 2:\n                if (this.SIOTransferStarted && this.SIOMULT_PLAYER_NUMBER == 0) {\n                    return this.SIOShiftClockDivider - this.shiftClocks;\n                }\n                else {\n                    return 0x7FFFFFFF;\n                }\n            case 3:\n                if (this.SIOCNT_UART_SEND_ENABLE && !this.SIOCNT_UART_CTS) {\n                    return (Math.max(((this.SIOCNT_UART_FIFO_ENABLE) ? (this.SIOCNT_UART_FIFO * 8) : 8) - 1, 0) * this.SIOShiftClockDivider) + (this.SIOShiftClockDivider - this.shiftClocks);\n                }\n                else {\n                    return 0x7FFFFFFF;\n                }\n        }\n    }\n    else {\n        return 0x7FFFFFFF;\n    }\n}*/"],"names":["GameBoyAdvanceSerial","IOCore","this","prototype","initialize","SIODATA_A","SIODATA_B","SIODATA_C","SIODATA_D","SIOShiftClockExternal","SIOShiftClockDivider","SIOCNT0_DATA","SIOTransferStarted","SIOMULT_PLAYER_NUMBER","SIOCOMMERROR","SIOBaudRate","SIOCNT_UART_CTS","SIOCNT_UART_MISC","SIOCNT_UART_FIFO","SIOCNT_IRQ","SIOCNT_MODE","SIOCNT_UART_RECV_ENABLE","SIOCNT_UART_SEND_ENABLE","SIOCNT_UART_PARITY_ENABLE","SIOCNT_UART_FIFO_ENABLE","SIODATA8","RCNTMode","RCNTIRQ","RCNTDataBits","RCNTDataBitFlow","JOYBUS_IRQ","JOYBUS_CNTL_FLAGS","JOYBUS_RECV0","JOYBUS_RECV1","JOYBUS_RECV2","JOYBUS_RECV3","JOYBUS_SEND0","JOYBUS_SEND1","JOYBUS_SEND2","JOYBUS_SEND3","JOYBUS_STAT","shiftClocks","serialBitsShifted","SIOMultiplayerBaudRate","addClocks","clocks","clockSerial","clockMultiplayer","clockUART","Math","max","writeSIODATA_A0","data","readSIODATA_A0","writeSIODATA_A1","readSIODATA_A1","writeSIODATA_B0","readSIODATA_B0","writeSIODATA_B1","readSIODATA_B1","writeSIODATA_C0","readSIODATA_C0","writeSIODATA_C1","readSIODATA_C1","writeSIODATA_D0","readSIODATA_D0","writeSIODATA_D1","readSIODATA_D1","writeSIOCNT0","readSIOCNT0","writeSIOCNT1","readSIOCNT1","writeSIODATA8_0","min","readSIODATA8_0","writeSIODATA8_1","readSIODATA8_1","writeRCNT0","readRCNT0","writeRCNT1","readRCNT1","writeJOYCNT","readJOYCNT","writeJOYBUS_RECV0","readJOYBUS_RECV0","writeJOYBUS_RECV1","readJOYBUS_RECV1","writeJOYBUS_RECV2","readJOYBUS_RECV2","writeJOYBUS_RECV3","readJOYBUS_RECV3","writeJOYBUS_SEND0","readJOYBUS_SEND0","writeJOYBUS_SEND1","readJOYBUS_SEND1","writeJOYBUS_SEND2","readJOYBUS_SEND2","writeJOYBUS_SEND3","readJOYBUS_SEND3","writeJOYBUS_STAT","readJOYBUS_STAT"],"version":3,"file":"build-index.7e582ca2.js.map"}