{"mappings":"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","sources":["dist/IodineGBA/core/SaveState.js"],"sourcesContent":["function SaveStateManager(Iodine) {\n    this.Iodine = Iodine;\n    this.slot = [];\n    this.initStoredStates(Iodine.ROM_CODES);\n    this.lastLoaded = null;\n}\n\nSaveStateManager.prototype.saveState = function (slot, warping = false) {\n    let playing = this.Iodine.emulatorStatus <= 10;\n    if (playing) this.Iodine.pause();\n    this.slot[slot] = new SaveState(this.Iodine.IOCore, warping);\n    storageManager.persist(\"SS\" + slot, this.slot[slot]);\n    if (playing) this.Iodine.play();\n}\n\nSaveStateManager.prototype.loadState = function (slot, isAutosave = false) {\n    let playing = this.Iodine.emulatorStatus <= 10;\n    if (playing) this.Iodine.pause();\n    let speed = IodineGUI.Iodine.getSpeed()\n\n    if (this.slot[slot].warping && isAutosave) {\n        isWarping = true;\n        reverseNextWarp = true;\n    }\n\n    this.slot[slot].load(this.Iodine.IOCore);\n    storageManager.persist(\"lastLoadedRom\", slot);\n    this.lastLoaded = slot;\n    let volume = IodineGUI.Iodine.audio.volume;\n    IodineGUI.Iodine.audio.volume = 0;\n    if (playing) this.Iodine.play();\n    let fixSpeed = async(volume) => { CommandExecutor.execute(\"SpeedUp\"); await delay(50); CommandExecutor.execute(\"SpeedUp\"); IodineGUI.Iodine.audio.volume = volume;}\n    IodineGUI.Iodine.setSpeed(speed); \n    fixSpeed(volume);\n}\n\nSaveStateManager.prototype.initStoredStates = async function(slots) {\n    slots.forEach(async slot => {\n        let save = await storageManager.find(\"SS\" + slot);\n        if (save) {\n            save.assign = SaveState.prototype.assign;\n            save.load = SaveState.prototype.load;\n            this.slot[slot] = save;\n        }\n    });\n}\n\nSaveStateManager.prototype.saveMultiState = function (slot) {\n    let playing = this.Iodine.emulatorStatus <= 10;\n    if (playing) this.Iodine.pause();\n    let currentState = new SaveState(this.Iodine.IOCore, false);\n    let multiSave = new MultiSaveState(this.slot, this.lastLoaded || \"FR\", currentState);\n    storageManager.persist(slot, multiSave);\n    if (playing) this.Iodine.play();\n    return multiSave;\n}\n\nSaveStateManager.prototype.loadMultiState = function(slot, callback = () => ({})) {\n    storageManager.find(slot).then(s => {\n        let playing = this.Iodine.emulatorStatus <= 10;\n        if (playing) this.Iodine.pause();\n\n        s.getSlot = MultiSaveState.prototype.getSlot;\n\n        this.slot[\"FR\"] = s.getSlot(\"FR\");\n        this.slot[\"C\"] = s.getSlot(\"C\");\n        this.slot[\"E\"] = s.getSlot(\"E\");\n\n        storageManager.persist(\"SS\" + \"FR\", this.slot[\"FR\"]);\n        storageManager.persist(\"SS\" + \"C\", this.slot[\"C\"]);\n        storageManager.persist(\"SS\" + \"E\", this.slot[\"E\"]);\n\n        this.slot[s.romCode].load(this.Iodine.IOCore);\n        storageManager.persist(\"lastLoadedRom\", s.romCode);\n        this.lastLoaded = s.romCode;\n\n        if (playing) this.Iodine.play();\n    }).then(() => {\n        callback();\n    });\n}\n\nfunction SaveState(IOCore, warping) {\n\n    this.warping = warping;\n\n    /* Cartridge Reference */\n    this.romCode                   = structuredClone(IOCore.cartridge.romCode               );\n\n    /* General */\n    this.accumulatedClocks            = structuredClone(IOCore.accumulatedClocks            );\n    this.cyclesOveriteratedPreviously = structuredClone(IOCore.cyclesOveriteratedPreviously );\n    this.cyclesToIterate              = structuredClone(IOCore.cyclesToIterate              );\n    this.graphicsClocks               = structuredClone(IOCore.graphicsClocks               );\n    this.nextEventClocks              = structuredClone(IOCore.nextEventClocks              );\n    this.systemStatus                 = structuredClone(IOCore.systemStatus                 );\n    this.timerClocks                  = structuredClone(IOCore.timerClocks                  );\n\n    /* Memory */\n    this.internalRAM               = structuredClone(IOCore.memory.internalRAM             );\n    this.externalRAM               = structuredClone(IOCore.memory.externalRAM             );\n    this.WRAMControlFlags          = structuredClone(IOCore.memory.WRAMControlFlags        );\n    this.lastBIOSREAD              = structuredClone(IOCore.memory.lastBIOSREAD            );\n  \n    /* DMA */\n    this.dma = {};  \n    this.dma.currentMatch          = structuredClone(IOCore.dma.currentMatch               );\n    this.dma.fetch                 = structuredClone(IOCore.dma.fetch                      );\n\n    this.dma0 = {}; \n    this.dma0.destination          = structuredClone(IOCore.dmaChannel0.destination        );     \n    this.dma0.destinationControl   = structuredClone(IOCore.dmaChannel0.destinationControl );                   \n    this.dma0.destinationShadow    = structuredClone(IOCore.dmaChannel0.destinationShadow  );                 \n    this.dma0.dmaType              = structuredClone(IOCore.dmaChannel0.dmaType            );        \n    this.dma0.enabled              = structuredClone(IOCore.dmaChannel0.enabled            );         \n    this.dma0.irqFlagging          = structuredClone(IOCore.dmaChannel0.irqFlagging        );     \n    this.dma0.is32Bit              = structuredClone(IOCore.dmaChannel0.is32Bit            );         \n    this.dma0.pending              = structuredClone(IOCore.dmaChannel0.pending            );          \n    this.dma0.repeat               = structuredClone(IOCore.dmaChannel0.repeat             );       \n    this.dma0.source               = structuredClone(IOCore.dmaChannel0.source             );      \n    this.dma0.sourceControl        = structuredClone(IOCore.dmaChannel0.sourceControl      );         \n    this.dma0.sourceShadow         = structuredClone(IOCore.dmaChannel0.sourceShadow       );       \n    this.dma0.wordCount            = structuredClone(IOCore.dmaChannel0.wordCount          );              \n    this.dma0.wordCountShadow      = structuredClone(IOCore.dmaChannel0.wordCountShadow    );\n    \n    this.dma1 = {}; \n    this.dma1.destination          = structuredClone(IOCore.dmaChannel1.destination        );     \n    this.dma1.destinationControl   = structuredClone(IOCore.dmaChannel1.destinationControl );                   \n    this.dma1.destinationShadow    = structuredClone(IOCore.dmaChannel1.destinationShadow  );                 \n    this.dma1.dmaType              = structuredClone(IOCore.dmaChannel1.dmaType            );        \n    this.dma1.enabled              = structuredClone(IOCore.dmaChannel1.enabled            );         \n    this.dma1.irqFlagging          = structuredClone(IOCore.dmaChannel1.irqFlagging        );     \n    this.dma1.is32Bit              = structuredClone(IOCore.dmaChannel1.is32Bit            );         \n    this.dma1.pending              = structuredClone(IOCore.dmaChannel1.pending            );          \n    this.dma1.repeat               = structuredClone(IOCore.dmaChannel1.repeat             );       \n    this.dma1.source               = structuredClone(IOCore.dmaChannel1.source             );      \n    this.dma1.sourceControl        = structuredClone(IOCore.dmaChannel1.sourceControl      );         \n    this.dma1.sourceShadow         = structuredClone(IOCore.dmaChannel1.sourceShadow       );       \n    this.dma1.wordCount            = structuredClone(IOCore.dmaChannel1.wordCount          );              \n    this.dma1.wordCountShadow      = structuredClone(IOCore.dmaChannel1.wordCountShadow    );     \n\n    this.dma2 = {}; \n    this.dma2.destination          = structuredClone(IOCore.dmaChannel2.destination        );     \n    this.dma2.destinationControl   = structuredClone(IOCore.dmaChannel2.destinationControl );                   \n    this.dma2.destinationShadow    = structuredClone(IOCore.dmaChannel2.destinationShadow  );                 \n    this.dma2.dmaType              = structuredClone(IOCore.dmaChannel2.dmaType            );        \n    this.dma2.enabled              = structuredClone(IOCore.dmaChannel2.enabled            );         \n    this.dma2.irqFlagging          = structuredClone(IOCore.dmaChannel2.irqFlagging        );     \n    this.dma2.is32Bit              = structuredClone(IOCore.dmaChannel2.is32Bit            );         \n    this.dma2.pending              = structuredClone(IOCore.dmaChannel2.pending            );          \n    this.dma2.repeat               = structuredClone(IOCore.dmaChannel2.repeat             );       \n    this.dma2.source               = structuredClone(IOCore.dmaChannel2.source             );      \n    this.dma2.sourceControl        = structuredClone(IOCore.dmaChannel2.sourceControl      );         \n    this.dma2.sourceShadow         = structuredClone(IOCore.dmaChannel2.sourceShadow       );       \n    this.dma2.wordCount            = structuredClone(IOCore.dmaChannel2.wordCount          );              \n    this.dma2.wordCountShadow      = structuredClone(IOCore.dmaChannel2.wordCountShadow    );\n\n    this.dma3 = {}; \n    this.dma3.destination            =  structuredClone(IOCore.dmaChannel3.destination            );      \n    this.dma3.destinationControl     =  structuredClone(IOCore.dmaChannel3.destinationControl     );             \n    this.dma3.destinationShadow      =  structuredClone(IOCore.dmaChannel3.destinationShadow      );            \n    this.dma3.displaySyncEnableDelay =  structuredClone(IOCore.dmaChannel3.displaySyncEnableDelay );                 \n    this.dma3.dmaType                =  structuredClone(IOCore.dmaChannel3.dmaType                );  \n    this.dma3.enabled                =  structuredClone(IOCore.dmaChannel3.enabled                );  \n    this.dma3.gamePakDMA             =  structuredClone(IOCore.dmaChannel3.gamePakDMA             );     \n    this.dma3.irqFlagging            =  structuredClone(IOCore.dmaChannel3.irqFlagging            );      \n    this.dma3.is32Bit                =  structuredClone(IOCore.dmaChannel3.is32Bit                );  \n    this.dma3.pending                =  structuredClone(IOCore.dmaChannel3.pending                );  \n    this.dma3.repeat                 =  structuredClone(IOCore.dmaChannel3.repeat                 ); \n    this.dma3.source                 =  structuredClone(IOCore.dmaChannel3.source                 ); \n    this.dma3.sourceControl          =  structuredClone(IOCore.dmaChannel3.sourceControl          );        \n    this.dma3.sourceShadow           =  structuredClone(IOCore.dmaChannel3.sourceShadow           );       \n    this.dma3.wordCount              =  structuredClone(IOCore.dmaChannel3.wordCount              );    \n    this.dma3.wordCountShadow        =  structuredClone(IOCore.dmaChannel3.wordCountShadow        );          \n    \n    /* CPU */               \n    this.registers                 = structuredClone(IOCore.cpu.registers                );\n    this.registersUSR              = structuredClone(IOCore.cpu.registersUSR             );\n    this.registersFIQ              = structuredClone(IOCore.cpu.registersFIQ             );\n    this.registersSVC              = structuredClone(IOCore.cpu.registersSVC             );\n    this.registersABT              = structuredClone(IOCore.cpu.registersABT             );\n    this.registersIRQ              = structuredClone(IOCore.cpu.registersIRQ             );\n    this.registersUND              = structuredClone(IOCore.cpu.registersUND             );\n    this.modeFlags                 = structuredClone(IOCore.cpu.modeFlags                );\n    this.SPSR                      = structuredClone(IOCore.cpu.SPSR                     );\n    this.mul64ResultHigh           = structuredClone(IOCore.cpu.mul64ResultHigh          );\n    this.mul64ResultLow            = structuredClone(IOCore.cpu.mul64ResultLow           );\n    this.triggeredIRQ              = structuredClone(IOCore.cpu.triggeredIRQ             );\n\n    this.THUMB = {};\n    this.THUMB.decode              = structuredClone(IOCore.THUMB.decode                 );\n    this.THUMB.execute             = structuredClone(IOCore.THUMB.execute                );\n    this.THUMB.fetch               = structuredClone(IOCore.THUMB.fetch                  );\n\n    this.ARM = {};\n    this.ARM.decode                = structuredClone(IOCore.ARM.decode                   );\n    this.ARM.execute               = structuredClone(IOCore.ARM.execute                  );\n    this.ARM.fetch                 = structuredClone(IOCore.ARM.fetch                    );\n         \n    /* Timers */         \n    this.timer0Counter             = structuredClone(IOCore.timer.timer0Counter          );\n    this.timer0Reload              = structuredClone(IOCore.timer.timer0Reload           );\n    this.timer0Control             = structuredClone(IOCore.timer.timer0Control          );\n    this.timer0Enabled             = structuredClone(IOCore.timer.timer0Enabled          ); \n    this.timer0IRQ                 = structuredClone(IOCore.timer.timer0IRQ              ); \n    this.timer0Precounter          = structuredClone(IOCore.timer.timer0Precounter       );\n    this.timer0Prescalar           = structuredClone(IOCore.timer.timer0Prescalar        );\n    this.timer0PrescalarShifted    = structuredClone(IOCore.timer.timer0PrescalarShifted );\n    this.timer1Counter             = structuredClone(IOCore.timer.timer1Counter          );\n    this.timer1Reload              = structuredClone(IOCore.timer.timer1Reload           );\n    this.timer1Control             = structuredClone(IOCore.timer.timer1Control          );\n    this.timer1Enabled             = structuredClone(IOCore.timer.timer1Enabled          ); \n    this.timer1IRQ                 = structuredClone(IOCore.timer.timer1IRQ              ); \n    this.timer1Precounter          = structuredClone(IOCore.timer.timer1Precounter       );\n    this.timer1Prescalar           = structuredClone(IOCore.timer.timer1Prescalar        );\n    this.timer1PrescalarShifted    = structuredClone(IOCore.timer.timer1PrescalarShifted );\n    this.timer1CountUp             = structuredClone(IOCore.timer.timer1CountUp          ); \n    this.timer2Counter             = structuredClone(IOCore.timer.timer2Counter          );\n    this.timer2Reload              = structuredClone(IOCore.timer.timer2Reload           );\n    this.timer2Control             = structuredClone(IOCore.timer.timer2Control          );\n    this.timer2Enabled             = structuredClone(IOCore.timer.timer2Enabled          ); \n    this.timer2IRQ                 = structuredClone(IOCore.timer.timer2IRQ              ); \n    this.timer2Precounter          = structuredClone(IOCore.timer.timer2Precounter       );\n    this.timer2Prescalar           = structuredClone(IOCore.timer.timer2Prescalar        );\n    this.timer2PrescalarShifted    = structuredClone(IOCore.timer.timer2PrescalarShifted );\n    this.timer2CountUp             = structuredClone(IOCore.timer.timer2CountUp          ); \n    this.timer3Counter             = structuredClone(IOCore.timer.timer3Counter          );\n    this.timer3Reload              = structuredClone(IOCore.timer.timer3Reload           );\n    this.timer3Control             = structuredClone(IOCore.timer.timer3Control          );\n    this.timer3Enabled             = structuredClone(IOCore.timer.timer3Enabled          ); \n    this.timer3IRQ                 = structuredClone(IOCore.timer.timer3IRQ              ); \n    this.timer3Precounter          = structuredClone(IOCore.timer.timer3Precounter       );\n    this.timer3Prescalar           = structuredClone(IOCore.timer.timer3Prescalar        );\n    this.timer3PrescalarShifted    = structuredClone(IOCore.timer.timer3PrescalarShifted );\n    this.timer3CountUp             = structuredClone(IOCore.timer.timer3CountUp          ); \n    this.timer1UseMainClocks       = structuredClone(IOCore.timer.timer1UseMainClocks    ); \n    this.timer1UseChainedClocks    = structuredClone(IOCore.timer.timer1UseChainedClocks ); \n    this.timer2UseMainClocks       = structuredClone(IOCore.timer.timer2UseMainClocks    ); \n    this.timer2UseChainedClocks    = structuredClone(IOCore.timer.timer2UseChainedClocks ); \n    this.timer3UseMainClocks       = structuredClone(IOCore.timer.timer3UseMainClocks    ); \n    this.timer3UseChainedClocks    = structuredClone(IOCore.timer.timer3UseChainedClocks );  \n   \n    /* Wait */   \n    this.WRAMConfiguration         = structuredClone(IOCore.wait.WRAMConfiguration       );  \n    this.WRAMWaitState             = structuredClone(IOCore.wait.WRAMWaitState           );      \n    this.SRAMWaitState             = structuredClone(IOCore.wait.SRAMWaitState           );      \n    this.WAITCNT0                  = structuredClone(IOCore.wait.WAITCNT0                );           \n    this.WAITCNT1                  = structuredClone(IOCore.wait.WAITCNT1                );           \n    this.POSTBOOT                  = structuredClone(IOCore.wait.POSTBOOT                );           \n    this.isRendering               = structuredClone(IOCore.wait.isRendering             );        \n    this.isOAMRendering            = structuredClone(IOCore.wait.isOAMRendering          );     \n    this.nonSequential             = structuredClone(IOCore.wait.nonSequential           );      \n    this.buffer                    = structuredClone(IOCore.wait.buffer                  );             \n    this.clocks                    = structuredClone(IOCore.wait.clocks                  );         \n\n\n    /* Serial */\n    this.SIODATA_A                 = structuredClone(IOCore.serial.SIODATA_A                );     \n    this.SIODATA_B                 = structuredClone(IOCore.serial.SIODATA_B                );     \n    this.SIODATA_C                 = structuredClone(IOCore.serial.SIODATA_C                );     \n    this.SIODATA_D                 = structuredClone(IOCore.serial.SIODATA_D                );     \n    this.SIOShiftClockExternal     = structuredClone(IOCore.serial.SIOShiftClockExternal    );     \n    this.SIOShiftClockDivider      = structuredClone(IOCore.serial.SIOShiftClockDivider     );     \n    this.SIOCNT0_DATA              = structuredClone(IOCore.serial.SIOCNT0_DATA             );     \n    this.SIOTransferStarted        = structuredClone(IOCore.serial.SIOTransferStarted       );     \n    this.SIOMULT_PLAYER_NUMBER     = structuredClone(IOCore.serial.SIOMULT_PLAYER_NUMBER    );     \n    this.SIOCOMMERROR              = structuredClone(IOCore.serial.SIOCOMMERROR             );     \n    this.SIOBaudRate               = structuredClone(IOCore.serial.SIOBaudRate              );     \n    this.SIOCNT_UART_CTS           = structuredClone(IOCore.serial.SIOCNT_UART_CTS          );   \n    this.SIOCNT_UART_MISC          = structuredClone(IOCore.serial.SIOCNT_UART_MISC         );     \n    this.SIOCNT_UART_FIFO          = structuredClone(IOCore.serial.SIOCNT_UART_FIFO         );     \n    this.SIOCNT_IRQ                = structuredClone(IOCore.serial.SIOCNT_IRQ               );     \n    this.SIOCNT_MODE               = structuredClone(IOCore.serial.SIOCNT_MODE              );     \n    this.SIOCNT_UART_RECV_ENABLE   = structuredClone(IOCore.serial.SIOCNT_UART_RECV_ENABLE  );      \n    this.SIOCNT_UART_SEND_ENABLE   = structuredClone(IOCore.serial.SIOCNT_UART_SEND_ENABLE  );      \n    this.SIOCNT_UART_PARITY_ENABLE = structuredClone(IOCore.serial.SIOCNT_UART_PARITY_ENABLE);       \n    this.SIOCNT_UART_FIFO_ENABLE   = structuredClone(IOCore.serial.SIOCNT_UART_FIFO_ENABLE  );      \n    this.SIODATA8                  = structuredClone(IOCore.serial.SIODATA8                 );     \n    this.RCNTMode                  = structuredClone(IOCore.serial.RCNTMode                 );     \n    this.RCNTIRQ                   = structuredClone(IOCore.serial.RCNTIRQ                  );   \n    this.RCNTDataBits              = structuredClone(IOCore.serial.RCNTDataBits             );     \n    this.RCNTDataBitFlow           = structuredClone(IOCore.serial.RCNTDataBitFlow          );     \n    this.JOYBUS_IRQ                = structuredClone(IOCore.serial.JOYBUS_IRQ               );     \n    this.JOYBUS_CNTL_FLAGS         = structuredClone(IOCore.serial.JOYBUS_CNTL_FLAGS        );     \n    this.JOYBUS_RECV0              = structuredClone(IOCore.serial.JOYBUS_RECV0             );     \n    this.JOYBUS_RECV1              = structuredClone(IOCore.serial.JOYBUS_RECV1             );     \n    this.JOYBUS_RECV2              = structuredClone(IOCore.serial.JOYBUS_RECV2             );     \n    this.JOYBUS_RECV3              = structuredClone(IOCore.serial.JOYBUS_RECV3             );     \n    this.JOYBUS_SEND0              = structuredClone(IOCore.serial.JOYBUS_SEND0             );     \n    this.JOYBUS_SEND1              = structuredClone(IOCore.serial.JOYBUS_SEND1             );     \n    this.JOYBUS_SEND2              = structuredClone(IOCore.serial.JOYBUS_SEND2             );     \n    this.JOYBUS_SEND3              = structuredClone(IOCore.serial.JOYBUS_SEND3             );     \n    this.JOYBUS_STAT               = structuredClone(IOCore.serial.JOYBUS_STAT              );     \n    this.shiftClocks               = structuredClone(IOCore.serial.shiftClocks              );     \n    this.serialBitsShifted         = structuredClone(IOCore.serial.serialBitsShifted        );     \n\n    /* Run Loop */\n    this.systemStatus                  = structuredClone(IOCore.systemStatus                );\n    this.cyclesToIterate               = structuredClone(IOCore.cyclesToIterate             );\n    this.cyclesOveriteratedPreviously  = structuredClone(IOCore.cyclesOveriteratedPreviously);\n    this.accumulatedClocks             = structuredClone(IOCore.accumulatedClocks           );\n    this.graphicsClocks                = structuredClone(IOCore.graphicsClocks              );\n    this.timerClocks                   = structuredClone(IOCore.timerClocks                 );\n    this.serialClocks                  = structuredClone(IOCore.serialClocks                );\n    this.nextEventClocks               = structuredClone(IOCore.nextEventClocks             );\n\n    /* IRQ */\n    this.interruptsEnabled             = structuredClone(IOCore.irq.interruptsEnabled       );\n    this.interruptsRequested           = structuredClone(IOCore.irq.interruptsRequested     );\n    this.IME                           = structuredClone(IOCore.irq.IME                     );\n\nif (!warping) {\n\n    /* Video */\n    this.renderedScanLine              = structuredClone(IOCore.gfxState.renderedScanLine   );\n    this.statusFlags                   = structuredClone(IOCore.gfxState.statusFlags        );\n    this.IRQFlags                      = structuredClone(IOCore.gfxState.IRQFlags           );\n    this.VCounter                      = structuredClone(IOCore.gfxState.VCounter           );\n    this.currentScanLine               = structuredClone(IOCore.gfxState.currentScanLine    );\n    this.LCDTicks                      = structuredClone(IOCore.gfxState.LCDTicks           );\n\n    this.IOData8                       = structuredClone(IOCore.gfxRenderer.IOData8         );\n\n    this.renderer = {};\n    this.renderer.displayControl                = structuredClone(IOCore.gfxRenderer.renderer.displayControl     ); \n    this.renderer.display                       = structuredClone(IOCore.gfxRenderer.renderer.display            ); \n    this.renderer.greenSwap                     = structuredClone(IOCore.gfxRenderer.renderer.greenSwap          ); \n    this.renderer.WINOutside                    = structuredClone(IOCore.gfxRenderer.renderer.WINOutside         ); \n    this.renderer.paletteRAM                    = structuredClone(IOCore.gfxRenderer.renderer.paletteRAM         ); \n    this.renderer.VRAM                          = structuredClone(IOCore.gfxRenderer.renderer.VRAM               ); \n    this.renderer.buffer                        = structuredClone(IOCore.gfxRenderer.renderer.buffer             ); \n    this.renderer.frameBuffer                   = structuredClone(IOCore.gfxRenderer.renderer.frameBuffer        ); \n    this.renderer.swizzledFrame                 = structuredClone(IOCore.gfxRenderer.renderer.swizzledFrame      ); \n    this.renderer.totalLinesPassed              = structuredClone(IOCore.gfxRenderer.renderer.totalLinesPassed   ); \n    this.renderer.queuedScanLines               = structuredClone(IOCore.gfxRenderer.renderer.queuedScanLines    ); \n    this.renderer.lastUnrenderedLine            = structuredClone(IOCore.gfxRenderer.renderer.lastUnrenderedLine ); \n    this.renderer.backdrop                      = structuredClone(IOCore.gfxRenderer.renderer.backdrop           ); \n    this.renderer.palette256                    = structuredClone(IOCore.gfxRenderer.renderer.palette256         ); \n    this.renderer.paletteOBJ256                 = structuredClone(IOCore.gfxRenderer.renderer.paletteOBJ256      ); \n    this.renderer.palette16                     = structuredClone(IOCore.gfxRenderer.renderer.palette16          ); \n    this.renderer.paletteOBJ16                  = structuredClone(IOCore.gfxRenderer.renderer.paletteOBJ16       );\n    \n    this.renderer.lineBuffer                    = structuredClone(IOCore.gfxRenderer.renderer.lineBuffer         );\n\n    this.renderer.compositor = {};\n    this.renderer.compositor.buffer             = structuredClone(IOCore.gfxRenderer.renderer.compositor.buffer   );   \n    this.renderer.compositor.doEffects          = structuredClone(IOCore.gfxRenderer.renderer.compositor.doEffects); \n\n    this.renderer.bg0Renderer = {};\n    this.renderer.bg0Renderer.BGCharacterBaseBlock  =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.BGCharacterBaseBlock    );\n    this.renderer.bg0Renderer.BGLayer               =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.BGLayer                 );\n    this.renderer.bg0Renderer.BGScreenBaseBlock     =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.BGScreenBaseBlock       );\n    this.renderer.bg0Renderer.BGXCoord              =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.BGXCoord                );\n    this.renderer.bg0Renderer.BGYCoord              =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.BGYCoord                );\n    this.renderer.bg0Renderer.do256                 =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.do256                   );\n    this.renderer.bg0Renderer.doMosaic              =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.doMosaic                );\n    this.renderer.bg0Renderer.offset                =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.offset                  );\n    this.renderer.bg0Renderer.priorityFlag          =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.priorityFlag            );\n    this.renderer.bg0Renderer.tileFetched           =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.tileFetched             );\n    this.renderer.bg0Renderer.tileMode              =  structuredClone(IOCore.gfxRenderer.renderer.bg0Renderer.tileMode                );\n\n    this.renderer.bg1Renderer = {};\n    this.renderer.bg1Renderer.BGCharacterBaseBlock  =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.BGCharacterBaseBlock    );\n    this.renderer.bg1Renderer.BGLayer               =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.BGLayer                 );\n    this.renderer.bg1Renderer.BGScreenBaseBlock     =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.BGScreenBaseBlock       );\n    this.renderer.bg1Renderer.BGXCoord              =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.BGXCoord                );\n    this.renderer.bg1Renderer.BGYCoord              =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.BGYCoord                );\n    this.renderer.bg1Renderer.do256                 =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.do256                   );\n    this.renderer.bg1Renderer.doMosaic              =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.doMosaic                );\n    this.renderer.bg1Renderer.offset                =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.offset                  );\n    this.renderer.bg1Renderer.priorityFlag          =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.priorityFlag            );\n    this.renderer.bg1Renderer.tileFetched           =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.tileFetched             );\n    this.renderer.bg1Renderer.tileMode              =  structuredClone(IOCore.gfxRenderer.renderer.bg1Renderer.tileMode                );\n\n    this.renderer.bg2TextRenderer = {};\n    this.renderer.bg2TextRenderer.BGCharacterBaseBlock  =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.BGCharacterBaseBlock );\n    this.renderer.bg2TextRenderer.BGLayer               =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.BGLayer              );\n    this.renderer.bg2TextRenderer.BGScreenBaseBlock     =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.BGScreenBaseBlock    );\n    this.renderer.bg2TextRenderer.BGXCoord              =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.BGXCoord             );\n    this.renderer.bg2TextRenderer.BGYCoord              =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.BGYCoord             );\n    this.renderer.bg2TextRenderer.do256                 =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.do256                );\n    this.renderer.bg2TextRenderer.doMosaic              =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.doMosaic             );\n    this.renderer.bg2TextRenderer.offset                =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.offset               );\n    this.renderer.bg2TextRenderer.priorityFlag          =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.priorityFlag         );\n    this.renderer.bg2TextRenderer.tileFetched           =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.tileFetched          );\n    this.renderer.bg2TextRenderer.tileMode              =  structuredClone(IOCore.gfxRenderer.renderer.bg2TextRenderer.tileMode             );\n\n    this.renderer.bg3TextRenderer = {};\n    this.renderer.bg3TextRenderer.BGCharacterBaseBlock  =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.BGCharacterBaseBlock );\n    this.renderer.bg3TextRenderer.BGLayer               =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.BGLayer              );\n    this.renderer.bg3TextRenderer.BGScreenBaseBlock     =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.BGScreenBaseBlock    );\n    this.renderer.bg3TextRenderer.BGXCoord              =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.BGXCoord             );\n    this.renderer.bg3TextRenderer.BGYCoord              =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.BGYCoord             );\n    this.renderer.bg3TextRenderer.do256                 =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.do256                );\n    this.renderer.bg3TextRenderer.doMosaic              =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.doMosaic             );\n    this.renderer.bg3TextRenderer.offset                =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.offset               );\n    this.renderer.bg3TextRenderer.priorityFlag          =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.priorityFlag         );\n    this.renderer.bg3TextRenderer.tileFetched           =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.tileFetched          );\n    this.renderer.bg3TextRenderer.tileMode              =  structuredClone(IOCore.gfxRenderer.renderer.bg3TextRenderer.tileMode             );\n\n    this.renderer.bgAffineRenderer0 = {};\n    this.renderer.bgAffineRenderer0.BGLayer             =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGLayer            );       \n    this.renderer.bgAffineRenderer0.BGReferenceX        =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGReferenceX       );            \n    this.renderer.bgAffineRenderer0.BGReferenceY        =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGReferenceY       );            \n    this.renderer.bgAffineRenderer0.BGdmx               =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGdmx              );     \n    this.renderer.bgAffineRenderer0.BGdmy               =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGdmy              );     \n    this.renderer.bgAffineRenderer0.BGdx                =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGdx               );    \n    this.renderer.bgAffineRenderer0.BGdy                =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGdy               );    \n    this.renderer.bgAffineRenderer0.doMosaic            =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.doMosaic           );        \n    this.renderer.bgAffineRenderer0.offset              =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.offset             );      \n    this.renderer.bgAffineRenderer0.pb                  =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.pb                 );  \n    this.renderer.bgAffineRenderer0.pd                  =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.pd                 );  \n    this.renderer.bgAffineRenderer0.priorityFlag        =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer0.priorityFlag       );   \n    \n    this.renderer.bgAffineRenderer1 = {};\n    this.renderer.bgAffineRenderer1.BGLayer             =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGLayer            );       \n    this.renderer.bgAffineRenderer1.BGReferenceX        =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGReferenceX       );            \n    this.renderer.bgAffineRenderer1.BGReferenceY        =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGReferenceY       );            \n    this.renderer.bgAffineRenderer1.BGdmx               =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGdmx              );     \n    this.renderer.bgAffineRenderer1.BGdmy               =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGdmy              );     \n    this.renderer.bgAffineRenderer1.BGdx                =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGdx               );    \n    this.renderer.bgAffineRenderer1.BGdy                =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGdy               );    \n    this.renderer.bgAffineRenderer1.doMosaic            =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.doMosaic           );        \n    this.renderer.bgAffineRenderer1.offset              =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.offset             );      \n    this.renderer.bgAffineRenderer1.pb                  =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.pb                 );  \n    this.renderer.bgAffineRenderer1.pd                  =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.pd                 );  \n    this.renderer.bgAffineRenderer1.priorityFlag        =  structuredClone(IOCore.gfxRenderer.renderer.bgAffineRenderer1.priorityFlag       );    \n\n    this.renderer.bg2FrameBufferRenderer = {};\n    this.renderer.bg2FrameBufferRenderer.frameSelect    =  structuredClone(IOCore.gfxRenderer.renderer.bg2FrameBufferRenderer.frameSelect   );\n\n    this.renderer.bg2MatrixRenderer = {};\n    this.renderer.bg2MatrixRenderer.BGCharacterBaseBlock = structuredClone(IOCore.gfxRenderer.renderer.bg2MatrixRenderer.BGCharacterBaseBlock);                \n    this.renderer.bg2MatrixRenderer.BGDisplayOverflow    = structuredClone(IOCore.gfxRenderer.renderer.bg2MatrixRenderer.BGDisplayOverflow   );             \n    this.renderer.bg2MatrixRenderer.BGScreenBaseBlock    = structuredClone(IOCore.gfxRenderer.renderer.bg2MatrixRenderer.BGScreenBaseBlock   );             \n    this.renderer.bg2MatrixRenderer.mapSize              = structuredClone(IOCore.gfxRenderer.renderer.bg2MatrixRenderer.mapSize             );   \n    this.renderer.bg2MatrixRenderer.mapSizeComparer      = structuredClone(IOCore.gfxRenderer.renderer.bg2MatrixRenderer.mapSizeComparer     );              \n\n    this.renderer.bg3MatrixRenderer = {};\n    this.renderer.bg3MatrixRenderer.BGCharacterBaseBlock = structuredClone(IOCore.gfxRenderer.renderer.bg3MatrixRenderer.BGCharacterBaseBlock);                \n    this.renderer.bg3MatrixRenderer.BGDisplayOverflow    = structuredClone(IOCore.gfxRenderer.renderer.bg3MatrixRenderer.BGDisplayOverflow   );             \n    this.renderer.bg3MatrixRenderer.BGScreenBaseBlock    = structuredClone(IOCore.gfxRenderer.renderer.bg3MatrixRenderer.BGScreenBaseBlock   );             \n    this.renderer.bg3MatrixRenderer.mapSize              = structuredClone(IOCore.gfxRenderer.renderer.bg3MatrixRenderer.mapSize             );   \n    this.renderer.bg3MatrixRenderer.mapSizeComparer      = structuredClone(IOCore.gfxRenderer.renderer.bg3MatrixRenderer.mapSizeComparer     );   \n\n    this.renderer.colorEffectsRenderer = {};\n    this.renderer.colorEffectsRenderer.alphaBlendAmountTarget1 = structuredClone(IOCore.gfxRenderer.renderer.colorEffectsRenderer.alphaBlendAmountTarget1);\n    this.renderer.colorEffectsRenderer.alphaBlendAmountTarget2 = structuredClone(IOCore.gfxRenderer.renderer.colorEffectsRenderer.alphaBlendAmountTarget2);\n    this.renderer.colorEffectsRenderer.brightnessEffectAmount  = structuredClone(IOCore.gfxRenderer.renderer.colorEffectsRenderer.brightnessEffectAmount );\n    this.renderer.colorEffectsRenderer.colorEffectsType        = structuredClone(IOCore.gfxRenderer.renderer.colorEffectsRenderer.colorEffectsType       );\n    this.renderer.colorEffectsRenderer.effectsTarget1          = structuredClone(IOCore.gfxRenderer.renderer.colorEffectsRenderer.effectsTarget1         );\n    this.renderer.colorEffectsRenderer.effectsTarget2          = structuredClone(IOCore.gfxRenderer.renderer.colorEffectsRenderer.effectsTarget2         );\n\n    this.renderer.mosaicRenderer = {};\n    this.renderer.mosaicRenderer.BGMosaicHSize                 = structuredClone(IOCore.gfxRenderer.renderer.mosaicRenderer.BGMosaicHSize );\n    this.renderer.mosaicRenderer.BGMosaicVSize                 = structuredClone(IOCore.gfxRenderer.renderer.mosaicRenderer.BGMosaicVSize );\n    this.renderer.mosaicRenderer.OBJMosaicHSize                = structuredClone(IOCore.gfxRenderer.renderer.mosaicRenderer.OBJMosaicHSize);\n    this.renderer.mosaicRenderer.OBJMosaicVSize                = structuredClone(IOCore.gfxRenderer.renderer.mosaicRenderer.OBJMosaicVSize);\n\n    this.renderer.objRenderer = {};\n    this.renderer.objRenderer.cyclesToRender                   = structuredClone(IOCore.gfxRenderer.renderer.objRenderer.cyclesToRender     );\n    this.renderer.objRenderer.OAMRAM                           = structuredClone(IOCore.gfxRenderer.renderer.objRenderer.OAMRAM             );\n    this.renderer.objRenderer.scratchBuffer                    = structuredClone(IOCore.gfxRenderer.renderer.objRenderer.scratchBuffer      );\n    this.renderer.objRenderer.scratchWindowBuffer              = structuredClone(IOCore.gfxRenderer.renderer.objRenderer.scratchWindowBuffer);\n    this.renderer.objRenderer.scratchOBJBuffer                 = structuredClone(IOCore.gfxRenderer.renderer.objRenderer.scratchOBJBuffer   );\n    this.renderer.objRenderer.OBJMatrixParameters              = structuredClone(IOCore.gfxRenderer.renderer.objRenderer.OBJMatrixParameters);\n\n    this.renderer.objWindowRenderer = {};\n    this.renderer.objWindowRenderer.WINOBJOutside              = structuredClone(IOCore.gfxRenderer.renderer.objWindowRenderer.WINOBJOutside);\n\n    this.renderer.window0Renderer = {};\n    this.renderer.window0Renderer.WINXCoordLeft                = structuredClone(IOCore.gfxRenderer.renderer.window0Renderer.WINXCoordLeft       );\n    this.renderer.window0Renderer.WINXCoordRight               = structuredClone(IOCore.gfxRenderer.renderer.window0Renderer.WINXCoordRight      );\n    this.renderer.window0Renderer.WINYCoordBottom              = structuredClone(IOCore.gfxRenderer.renderer.window0Renderer.WINYCoordBottom     );\n    this.renderer.window0Renderer.WINYCoordTop                 = structuredClone(IOCore.gfxRenderer.renderer.window0Renderer.WINYCoordTop        );\n    this.renderer.window0Renderer.windowDisplayControl         = structuredClone(IOCore.gfxRenderer.renderer.window0Renderer.windowDisplayControl);\n\n    this.renderer.window1Renderer = {};\n    this.renderer.window1Renderer.WINXCoordLeft                = structuredClone(IOCore.gfxRenderer.renderer.window1Renderer.WINXCoordLeft       );\n    this.renderer.window1Renderer.WINXCoordRight               = structuredClone(IOCore.gfxRenderer.renderer.window1Renderer.WINXCoordRight      );\n    this.renderer.window1Renderer.WINYCoordBottom              = structuredClone(IOCore.gfxRenderer.renderer.window1Renderer.WINYCoordBottom     );\n    this.renderer.window1Renderer.WINYCoordTop                 = structuredClone(IOCore.gfxRenderer.renderer.window1Renderer.WINYCoordTop        );\n    this.renderer.window1Renderer.windowDisplayControl         = structuredClone(IOCore.gfxRenderer.renderer.window1Renderer.windowDisplayControl);\n\n}   \n\n    /* Audio */\n    this.AGBDirectSoundA                    =  structuredClone(IOCore.sound.AGBDirectSoundA                  );\n    this.AGBDirectSoundAFolded              =  structuredClone(IOCore.sound.AGBDirectSoundAFolded            );\n    this.AGBDirectSoundALeftCanPlay         =  structuredClone(IOCore.sound.AGBDirectSoundALeftCanPlay       );\n    this.AGBDirectSoundARightCanPlay        =  structuredClone(IOCore.sound.AGBDirectSoundARightCanPlay      );\n    this.AGBDirectSoundAShifter             =  structuredClone(IOCore.sound.AGBDirectSoundAShifter           );\n    this.AGBDirectSoundATimer               =  structuredClone(IOCore.sound.AGBDirectSoundATimer             );\n    this.AGBDirectSoundB                    =  structuredClone(IOCore.sound.AGBDirectSoundB                  );\n    this.AGBDirectSoundBFolded              =  structuredClone(IOCore.sound.AGBDirectSoundBFolded            );\n    this.AGBDirectSoundBLeftCanPlay         =  structuredClone(IOCore.sound.AGBDirectSoundBLeftCanPlay       );\n    this.AGBDirectSoundBRightCanPlay        =  structuredClone(IOCore.sound.AGBDirectSoundBRightCanPlay      );\n    this.AGBDirectSoundBShifter             =  structuredClone(IOCore.sound.AGBDirectSoundBShifter           );\n    this.AGBDirectSoundBTimer               =  structuredClone(IOCore.sound.AGBDirectSoundBTimer             );\n    this.CGBMixerOutputCacheLeft            =  structuredClone(IOCore.sound.CGBMixerOutputCacheLeft          );\n    this.CGBMixerOutputCacheLeftFolded      =  structuredClone(IOCore.sound.CGBMixerOutputCacheLeftFolded    );\n    this.CGBMixerOutputCacheRight           =  structuredClone(IOCore.sound.CGBMixerOutputCacheRight         );\n    this.CGBMixerOutputCacheRightFolded     =  structuredClone(IOCore.sound.CGBMixerOutputCacheRightFolded   );\n    this.CGBOutputRatio                     =  structuredClone(IOCore.sound.CGBOutputRatio                   );\n    this.PWMBitDepthMask                    =  structuredClone(IOCore.sound.PWMBitDepthMask                  );\n    this.PWMBitDepthMaskShadow              =  structuredClone(IOCore.sound.PWMBitDepthMaskShadow            );\n    this.PWMWidth                           =  structuredClone(IOCore.sound.PWMWidth                         );\n    this.PWMWidthOld                        =  structuredClone(IOCore.sound.PWMWidthOld                      );\n    this.PWMWidthShadow                     =  structuredClone(IOCore.sound.PWMWidthShadow                   );\n    this.VinLeftChannelMasterVolume         =  structuredClone(IOCore.sound.VinLeftChannelMasterVolume       );\n    this.VinRightChannelMasterVolume        =  structuredClone(IOCore.sound.VinRightChannelMasterVolume      );\n    this.audioClocksUntilNextEvent          =  structuredClone(IOCore.sound.audioClocksUntilNextEvent        );\n    this.audioClocksUntilNextEventCounter   =  structuredClone(IOCore.sound.audioClocksUntilNextEventCounter );\n    this.audioIndex                         =  structuredClone(IOCore.sound.audioIndex                       );\n    this.audioResamplerFirstPassFactor      =  structuredClone(IOCore.sound.audioResamplerFirstPassFactor    );\n    this.audioTicks                         =  structuredClone(IOCore.sound.audioTicks                       );\n    this.downsampleInputLeft                =  structuredClone(IOCore.sound.downsampleInputLeft              );\n    this.downsampleInputRight               =  structuredClone(IOCore.sound.downsampleInputRight             );\n    this.mixerOutputCacheLeft               =  structuredClone(IOCore.sound.mixerOutputCacheLeft             );\n    this.mixerOutputCacheRight              =  structuredClone(IOCore.sound.mixerOutputCacheRight            );\n    this.mixerSoundBIAS                     =  structuredClone(IOCore.sound.mixerSoundBIAS                   );\n    this.nr50                               =  structuredClone(IOCore.sound.nr50                             );\n    this.nr51                               =  structuredClone(IOCore.sound.nr51                             );\n    this.nr52                               =  structuredClone(IOCore.sound.nr52                             );\n    this.nr60                               =  structuredClone(IOCore.sound.nr60                             );\n    this.nr61                               =  structuredClone(IOCore.sound.nr61                             );\n    this.nr62                               =  structuredClone(IOCore.sound.nr62                             );\n    this.nr63                               =  structuredClone(IOCore.sound.nr63                             );\n    this.sequencePosition                   =  structuredClone(IOCore.sound.sequencePosition                 );\n    this.sequencerClocks                    =  structuredClone(IOCore.sound.sequencerClocks                  );\n    this.soundMasterEnabled                 =  structuredClone(IOCore.sound.soundMasterEnabled               );\n\n    this.channel1 = {}; \n    this.channel1.CachedDuty                = structuredClone(IOCore.sound.channel1.CachedDuty               );      \n    this.channel1.DutyTracker               = structuredClone(IOCore.sound.channel1.DutyTracker              );      \n    this.channel1.Enabled                   = structuredClone(IOCore.sound.channel1.Enabled                  );      \n    this.channel1.FrequencyCounter          = structuredClone(IOCore.sound.channel1.FrequencyCounter         );      \n    this.channel1.FrequencyTracker          = structuredClone(IOCore.sound.channel1.FrequencyTracker         );      \n    this.channel1.ShadowFrequency           = structuredClone(IOCore.sound.channel1.ShadowFrequency          );      \n    this.channel1.SweepFault                = structuredClone(IOCore.sound.channel1.SweepFault               );      \n    this.channel1.Swept                     = structuredClone(IOCore.sound.channel1.Swept                    );      \n    this.channel1.canPlay                   = structuredClone(IOCore.sound.channel1.canPlay                  );      \n    this.channel1.consecutive               = structuredClone(IOCore.sound.channel1.consecutive              );      \n    this.channel1.currentSampleLeft         = structuredClone(IOCore.sound.channel1.currentSampleLeft        );      \n    this.channel1.currentSampleRight        = structuredClone(IOCore.sound.channel1.currentSampleRight       );      \n    this.channel1.decreaseSweep             = structuredClone(IOCore.sound.channel1.decreaseSweep            );      \n    this.channel1.envelopeSweeps            = structuredClone(IOCore.sound.channel1.envelopeSweeps           );      \n    this.channel1.envelopeSweepsLast        = structuredClone(IOCore.sound.channel1.envelopeSweepsLast       );      \n    this.channel1.envelopeType              = structuredClone(IOCore.sound.channel1.envelopeType             );      \n    this.channel1.envelopeVolume            = structuredClone(IOCore.sound.channel1.envelopeVolume           );      \n    this.channel1.frequency                 = structuredClone(IOCore.sound.channel1.frequency                );      \n    this.channel1.frequencySweepDivider     = structuredClone(IOCore.sound.channel1.frequencySweepDivider    );      \n    this.channel1.lastTimeSweep             = structuredClone(IOCore.sound.channel1.lastTimeSweep            );      \n    this.channel1.leftEnable                = structuredClone(IOCore.sound.channel1.leftEnable               );      \n    this.channel1.nr10                      = structuredClone(IOCore.sound.channel1.nr10                     );      \n    this.channel1.nr11                      = structuredClone(IOCore.sound.channel1.nr11                     );      \n    this.channel1.nr12                      = structuredClone(IOCore.sound.channel1.nr12                     );      \n    this.channel1.nr14                      = structuredClone(IOCore.sound.channel1.nr14                     );      \n    this.channel1.rightEnable               = structuredClone(IOCore.sound.channel1.rightEnable              );      \n    this.channel1.timeSweep                 = structuredClone(IOCore.sound.channel1.timeSweep                );      \n    this.channel1.totalLength               = structuredClone(IOCore.sound.channel1.totalLength              );      \n\n    this.channel2 = {};\n    this.channel2.CachedDuty                = structuredClone(IOCore.sound.channel2.CachedDuty               );\n    this.channel2.DutyTracker               = structuredClone(IOCore.sound.channel2.DutyTracker              );\n    this.channel2.Enabled                   = structuredClone(IOCore.sound.channel2.Enabled                  );\n    this.channel2.FrequencyCounter          = structuredClone(IOCore.sound.channel2.FrequencyCounter         );\n    this.channel2.FrequencyTracker          = structuredClone(IOCore.sound.channel2.FrequencyTracker         );\n    this.channel2.ShadowFrequency           = structuredClone(IOCore.sound.channel2.ShadowFrequency          );\n    this.channel2.canPlay                   = structuredClone(IOCore.sound.channel2.canPlay                  );\n    this.channel2.consecutive               = structuredClone(IOCore.sound.channel2.consecutive              );\n    this.channel2.currentSampleLeft         = structuredClone(IOCore.sound.channel2.currentSampleLeft        );\n    this.channel2.currentSampleRight        = structuredClone(IOCore.sound.channel2.currentSampleRight       );\n    this.channel2.envelopeSweeps            = structuredClone(IOCore.sound.channel2.envelopeSweeps           );\n    this.channel2.envelopeSweepsLast        = structuredClone(IOCore.sound.channel2.envelopeSweepsLast       );\n    this.channel2.envelopeType              = structuredClone(IOCore.sound.channel2.envelopeType             );\n    this.channel2.envelopeVolume            = structuredClone(IOCore.sound.channel2.envelopeVolume           );\n    this.channel2.frequency                 = structuredClone(IOCore.sound.channel2.frequency                );\n    this.channel2.leftEnable                = structuredClone(IOCore.sound.channel2.leftEnable               );\n    this.channel2.nr21                      = structuredClone(IOCore.sound.channel2.nr21                     );\n    this.channel2.nr22                      = structuredClone(IOCore.sound.channel2.nr22                     );\n    this.channel2.nr23                      = structuredClone(IOCore.sound.channel2.nr23                     );\n    this.channel2.nr24                      = structuredClone(IOCore.sound.channel2.nr24                     );\n    this.channel2.rightEnable               = structuredClone(IOCore.sound.channel2.rightEnable              );\n    this.channel2.totalLength               = structuredClone(IOCore.sound.channel2.totalLength              );\n\n    this.channel3 = {};\n    this.channel3.Enabled                   = structuredClone(IOCore.sound.channel3.Enabled                  );         \n    this.channel3.FrequencyPeriod           = structuredClone(IOCore.sound.channel3.FrequencyPeriod          );                 \n    this.channel3.PCM                       = structuredClone(IOCore.sound.channel3.PCM                      );     \n    this.channel3.WAVERAM8                  = structuredClone(IOCore.sound.channel3.WAVERAM8                 );          \n    this.channel3.WAVERAMBankAccessed       = structuredClone(IOCore.sound.channel3.WAVERAMBankAccessed      );                     \n    this.channel3.WAVERAMBankSpecified      = structuredClone(IOCore.sound.channel3.WAVERAMBankSpecified     );                      \n    this.channel3.WaveRAMBankSize           = structuredClone(IOCore.sound.channel3.WaveRAMBankSize          );                 \n    this.channel3.cachedSample              = structuredClone(IOCore.sound.channel3.cachedSample             );              \n    this.channel3.canPlay                   = structuredClone(IOCore.sound.channel3.canPlay                  );         \n    this.channel3.consecutive               = structuredClone(IOCore.sound.channel3.consecutive              );             \n    this.channel3.counter                   = structuredClone(IOCore.sound.channel3.counter                  );         \n    this.channel3.currentSampleLeft         = structuredClone(IOCore.sound.channel3.currentSampleLeft        );                   \n    this.channel3.currentSampleRight        = structuredClone(IOCore.sound.channel3.currentSampleRight       );                    \n    this.channel3.frequency                 = structuredClone(IOCore.sound.channel3.frequency                );           \n    this.channel3.lastSampleLookup          = structuredClone(IOCore.sound.channel3.lastSampleLookup         );                  \n    this.channel3.leftEnable                = structuredClone(IOCore.sound.channel3.leftEnable               );            \n    this.channel3.nr30                      = structuredClone(IOCore.sound.channel3.nr30                     );      \n    this.channel3.nr31                      = structuredClone(IOCore.sound.channel3.nr31                     );      \n    this.channel3.nr32                      = structuredClone(IOCore.sound.channel3.nr32                     );      \n    this.channel3.nr33                      = structuredClone(IOCore.sound.channel3.nr33                     );      \n    this.channel3.nr34                      = structuredClone(IOCore.sound.channel3.nr34                     );      \n    this.channel3.patternType               = structuredClone(IOCore.sound.channel3.patternType              );             \n    this.channel3.rightEnable               = structuredClone(IOCore.sound.channel3.rightEnable              );                 \n    this.channel3.totalLength               = structuredClone(IOCore.sound.channel3.totalLength              );          \n\n    // LSFR7Table\n    // LSFR15Table\n    this.channel4 = {};\n    this.channel4.BitRange                  = structuredClone(IOCore.sound.channel4.BitRange                 );\n    this.channel4.Enabled                   = structuredClone(IOCore.sound.channel4.Enabled                  );\n    this.channel4.FrequencyPeriod           = structuredClone(IOCore.sound.channel4.FrequencyPeriod          );\n    this.channel4.VolumeShifter             = structuredClone(IOCore.sound.channel4.VolumeShifter            );\n    this.channel4.cachedSample              = structuredClone(IOCore.sound.channel4.cachedSample             );\n    this.channel4.canPlay                   = structuredClone(IOCore.sound.channel4.canPlay                  );\n    this.channel4.consecutive               = structuredClone(IOCore.sound.channel4.consecutive              );\n    this.channel4.counter                   = structuredClone(IOCore.sound.channel4.counter                  );\n    this.channel4.currentSampleLeft         = structuredClone(IOCore.sound.channel4.currentSampleLeft        );\n    this.channel4.currentSampleRight        = structuredClone(IOCore.sound.channel4.currentSampleRight       );\n    this.channel4.currentVolume             = structuredClone(IOCore.sound.channel4.currentVolume            );\n    this.channel4.envelopeSweeps            = structuredClone(IOCore.sound.channel4.envelopeSweeps           );\n    this.channel4.envelopeSweepsLast        = structuredClone(IOCore.sound.channel4.envelopeSweepsLast       );\n    this.channel4.envelopeType              = structuredClone(IOCore.sound.channel4.envelopeType             );\n    this.channel4.envelopeVolume            = structuredClone(IOCore.sound.channel4.envelopeVolume           );\n    this.channel4.lastSampleLookup          = structuredClone(IOCore.sound.channel4.lastSampleLookup         );\n    this.channel4.leftEnable                = structuredClone(IOCore.sound.channel4.leftEnable               );\n    this.channel4.noiseSampleTable          = structuredClone(IOCore.sound.channel4.noiseSampleTable         );\n    this.channel4.nr42                      = structuredClone(IOCore.sound.channel4.nr42                     );\n    this.channel4.nr43                      = structuredClone(IOCore.sound.channel4.nr43                     );\n    this.channel4.nr44                      = structuredClone(IOCore.sound.channel4.nr44                     );\n    this.channel4.rightEnable               = structuredClone(IOCore.sound.channel4.rightEnable              );\n    this.channel4.totalLength               = structuredClone(IOCore.sound.channel4.totalLength              );\n\n    this.FIFOA = {};\n    this.FIFOA.buffer                       = structuredClone(IOCore.sound.FIFOABuffer.buffer                );   \n    this.FIFOA.count                        = structuredClone(IOCore.sound.FIFOABuffer.count                 );   \n    this.FIFOA.position                     = structuredClone(IOCore.sound.FIFOABuffer.position              );    \n\n    this.FIFOB = {};\n    this.FIFOB.buffer                       = structuredClone(IOCore.sound.FIFOBBuffer.buffer                );   \n    this.FIFOB.count                        = structuredClone(IOCore.sound.FIFOBBuffer.count                 );   \n    this.FIFOB.position                     = structuredClone(IOCore.sound.FIFOBBuffer.position              );    \n\n    /* Serial */\n    this.JOYBUS_CNTL_FLAGS             = structuredClone(IOCore.serial.JOYBUS_CNTL_FLAGS         );\n    this.JOYBUS_IRQ                    = structuredClone(IOCore.serial.JOYBUS_IRQ                );\n    this.JOYBUS_RECV0                  = structuredClone(IOCore.serial.JOYBUS_RECV0              );\n    this.JOYBUS_RECV1                  = structuredClone(IOCore.serial.JOYBUS_RECV1              );\n    this.JOYBUS_RECV2                  = structuredClone(IOCore.serial.JOYBUS_RECV2              );\n    this.JOYBUS_RECV3                  = structuredClone(IOCore.serial.JOYBUS_RECV3              );\n    this.JOYBUS_SEND0                  = structuredClone(IOCore.serial.JOYBUS_SEND0              );\n    this.JOYBUS_SEND1                  = structuredClone(IOCore.serial.JOYBUS_SEND1              );\n    this.JOYBUS_SEND2                  = structuredClone(IOCore.serial.JOYBUS_SEND2              );\n    this.JOYBUS_SEND3                  = structuredClone(IOCore.serial.JOYBUS_SEND3              );\n    this.JOYBUS_STAT                   = structuredClone(IOCore.serial.JOYBUS_STAT               );\n    this.RCNTDataBitFlow               = structuredClone(IOCore.serial.RCNTDataBitFlow           );\n    this.RCNTDataBits                  = structuredClone(IOCore.serial.RCNTDataBits              );\n    this.RCNTIRQ                       = structuredClone(IOCore.serial.RCNTIRQ                   );\n    this.RCNTMode                      = structuredClone(IOCore.serial.RCNTMode                  );\n    this.SIOBaudRate                   = structuredClone(IOCore.serial.SIOBaudRate               );\n    this.SIOCNT0_DATA                  = structuredClone(IOCore.serial.SIOCNT0_DATA              );\n    this.SIOCNT_IRQ                    = structuredClone(IOCore.serial.SIOCNT_IRQ                );\n    this.SIOCNT_MODE                   = structuredClone(IOCore.serial.SIOCNT_MODE               );\n    this.SIOCNT_UART_CTS               = structuredClone(IOCore.serial.SIOCNT_UART_CTS           );\n    this.SIOCNT_UART_FIFO              = structuredClone(IOCore.serial.SIOCNT_UART_FIFO          );\n    this.SIOCNT_UART_FIFO_ENABLE       = structuredClone(IOCore.serial.SIOCNT_UART_FIFO_ENABLE   );\n    this.SIOCNT_UART_MISC              = structuredClone(IOCore.serial.SIOCNT_UART_MISC          );\n    this.SIOCNT_UART_PARITY_ENABLE     = structuredClone(IOCore.serial.SIOCNT_UART_PARITY_ENABLE );\n    this.SIOCNT_UART_RECV_ENABLE       = structuredClone(IOCore.serial.SIOCNT_UART_RECV_ENABLE   );\n    this.SIOCNT_UART_SEND_ENABLE       = structuredClone(IOCore.serial.SIOCNT_UART_SEND_ENABLE   );\n    this.SIOCOMMERROR                  = structuredClone(IOCore.serial.SIOCOMMERROR              );\n    this.SIODATA8                      = structuredClone(IOCore.serial.SIODATA8                  );\n    this.SIODATA_A                     = structuredClone(IOCore.serial.SIODATA_A                 );\n    this.SIODATA_B                     = structuredClone(IOCore.serial.SIODATA_B                 );\n    this.SIODATA_C                     = structuredClone(IOCore.serial.SIODATA_C                 );\n    this.SIODATA_D                     = structuredClone(IOCore.serial.SIODATA_D                 );\n    this.SIOMULT_PLAYER_NUMBER         = structuredClone(IOCore.serial.SIOMULT_PLAYER_NUMBER     );\n    this.SIOShiftClockDivider          = structuredClone(IOCore.serial.SIOShiftClockDivider      );\n    this.SIOShiftClockExternal         = structuredClone(IOCore.serial.SIOShiftClockExternal     );\n    this.SIOTransferStarted            = structuredClone(IOCore.serial.SIOTransferStarted        );\n    this.serialBitsShifted             = structuredClone(IOCore.serial.serialBitsShifted         );\n    this.shiftClocks                   = structuredClone(IOCore.serial.shiftClocks               );\n\n    /* Save Data */\n    this.saveType               = structuredClone(IOCore.saves.saveType         );\n    // TODO: switch reference to saveType?\n\n    this.GPIOChip = {};\n    this.GPIOChip.data          = structuredClone(IOCore.saves.GPIOChip.data     );      \n    this.GPIOChip.direction     = structuredClone(IOCore.saves.GPIOChip.direction);           \n    this.GPIOChip.readWrite     = structuredClone(IOCore.saves.GPIOChip.readWrite);           \n    this.GPIOChip.type          = structuredClone(IOCore.saves.GPIOChip.type     );   \n    \n    this.GPIOChip.RTC = {};\n    this.GPIOChip.RTC.pins           = structuredClone(IOCore.saves.GPIOChip.rtc.pins          );\n    this.GPIOChip.RTC.direction      = structuredClone(IOCore.saves.GPIOChip.rtc.direction     );\n    this.GPIOChip.RTC.totalBytes     = structuredClone(IOCore.saves.GPIOChip.rtc.totalBytes    );\n    this.GPIOChip.RTC.bytesRemaining = structuredClone(IOCore.saves.GPIOChip.rtc.bytesRemaining);\n    this.GPIOChip.RTC.transferStep   = structuredClone(IOCore.saves.GPIOChip.rtc.transferStep  );\n    this.GPIOChip.RTC.reading        = structuredClone(IOCore.saves.GPIOChip.rtc.reading       );\n    this.GPIOChip.RTC.bitsRead       = structuredClone(IOCore.saves.GPIOChip.rtc.bitsRead      );\n    this.GPIOChip.RTC.bits           = structuredClone(IOCore.saves.GPIOChip.rtc.bits          );\n    this.GPIOChip.RTC.command        = structuredClone(IOCore.saves.GPIOChip.rtc.command       );\n    this.GPIOChip.RTC.control        = structuredClone(IOCore.saves.GPIOChip.rtc.control       );\n    this.GPIOChip.RTC.time           = structuredClone(IOCore.saves.GPIOChip.rtc.time          );\n\n    this.UNDETERMINED = {};\n    this.UNDETERMINED.saves        = structuredClone(IOCore.saves.UNDETERMINED.saves   );\n    this.UNDETERMINED.possible     = structuredClone(IOCore.saves.UNDETERMINED.possible);\n\n    this.SRAMChip = {};\n    this.SRAMChip.TILTChip         = structuredClone(IOCore.saves.SRAMChip.TILTChip        );\n    this.SRAMChip.TILTChipUnlocked = structuredClone(IOCore.saves.SRAMChip.TILTChipUnlocked);\n    this.SRAMChip.saves            = structuredClone(IOCore.saves.SRAMChip.saves           );\n\n    this.FLASHChip = {};\n    this.FLASHChip.BANKOffset              = structuredClone(IOCore.saves.FLASHChip.BANKOffset             );    \n    this.FLASHChip.flashCommand            = structuredClone(IOCore.saves.FLASHChip.flashCommand           );    \n    this.FLASHChip.flashCommandUnlockStage = structuredClone(IOCore.saves.FLASHChip.flashCommandUnlockStage);    \n    this.FLASHChip.largestSizePossible     = structuredClone(IOCore.saves.FLASHChip.largestSizePossible    );    \n    this.FLASHChip.notATMEL                = structuredClone(IOCore.saves.FLASHChip.notATMEL               );    \n    this.FLASHChip.saves                   = structuredClone(IOCore.saves.FLASHChip.saves                  );         \n    this.FLASHChip.writeBytesLeft          = structuredClone(IOCore.saves.FLASHChip.writeBytesLeft         );    \n\n    this.EEPROMChip = {};\n    this.EEPROMChip.address             = structuredClone(IOCore.saves.EEPROMChip.address            );    \n    this.EEPROMChip.bitsProcessed       = structuredClone(IOCore.saves.EEPROMChip.bitsProcessed      );          \n    this.EEPROMChip.buffer              = structuredClone(IOCore.saves.EEPROMChip.buffer             );   \n    this.EEPROMChip.largestSizePossible = structuredClone(IOCore.saves.EEPROMChip.largestSizePossible);                \n    this.EEPROMChip.mode                = structuredClone(IOCore.saves.EEPROMChip.mode               ); \n    this.EEPROMChip.saves               = structuredClone(IOCore.saves.EEPROMChip.saves              );  \n}\n\nSaveState.prototype.assign = function (target, name, value) {\n\n\n    if (!target || target[name] === undefined) \n    {\n        return;\n    }\n\n    if (typeof target[name] == 'number' || typeof target[name] == 'boolean' || typeof target[name] == 'string') {\n        target[name] = value;\n    } else if (target[name] !== null) {\n        Object.assign(target[name], value);\n    }\n\n}\n\nSaveState.prototype.load = function (IOCore) {\n\n    /* Cartridge Reference */\n    this.assign(IOCore.cartridge, \"romCode\"               ,this.romCode                       );\n\n    /* General */\n    this.assign(IOCore, \"accumulatedClocks\"               , this.accumulatedClocks            );\n    this.assign(IOCore, \"cyclesOveriteratedPreviously\"    , this.cyclesOveriteratedPreviously );\n    this.assign(IOCore, \"cyclesToIterate\"                 , this.cyclesToIterate              );\n    this.assign(IOCore, \"graphicsClocks\"                  , this.graphicsClocks               );\n    this.assign(IOCore, \"nextEventClocks\"                 , this.nextEventClocks              );\n    this.assign(IOCore, \"systemStatus\"                    , this.systemStatus                 );\n    this.assign(IOCore, \"timerClocks\"                     , this.timerClocks                  );\n\n    /* Memory */\n    this.assign(IOCore.memory, \"internalRAM\"              , this.internalRAM             );\n    this.assign(IOCore.memory, \"externalRAM\"              , this.externalRAM             );\n    this.assign(IOCore.memory, \"WRAMControlFlags\"         , this.WRAMControlFlags        );\n    this.assign(IOCore.memory, \"lastBIOSREAD\"             , this.lastBIOSREAD            ); \n\n    /* DMA */\n    this.assign(IOCore.dma, \"currentMatch\"                , this.dma.currentMatch        );\n    this.assign(IOCore.dma, \"fetch\"                       , this.dma.fetch               );\n\n    this.assign(IOCore.dmaChannel0, \"destination\"         , this.dma0.destination        );\n    this.assign(IOCore.dmaChannel0, \"destinationControl\"  , this.dma0.destinationControl );       \n    this.assign(IOCore.dmaChannel0, \"destinationShadow\"   , this.dma0.destinationShadow  );      \n    this.assign(IOCore.dmaChannel0, \"dmaType\"             , this.dma0.dmaType            );       \n    this.assign(IOCore.dmaChannel0, \"enabled\"             , this.dma0.enabled            );        \n    this.assign(IOCore.dmaChannel0, \"irqFlagging\"         , this.dma0.irqFlagging        );\n    this.assign(IOCore.dmaChannel0, \"is32Bit\"             , this.dma0.is32Bit            );        \n    this.assign(IOCore.dmaChannel0, \"pending\"             , this.dma0.pending            );         \n    this.assign(IOCore.dmaChannel0, \"repeat\"              , this.dma0.repeat             );       \n    this.assign(IOCore.dmaChannel0, \"source\"              , this.dma0.source             );      \n    this.assign(IOCore.dmaChannel0, \"sourceControl\"       , this.dma0.sourceControl      );  \n    this.assign(IOCore.dmaChannel0, \"sourceShadow\"        , this.dma0.sourceShadow       ); \n    this.assign(IOCore.dmaChannel0, \"wordCount\"           , this.dma0.wordCount          );           \n    this.assign(IOCore.dmaChannel0, \"wordCountShadow\"     , this.dma0.wordCountShadow    );\n\n    this.assign(IOCore.dmaChannel1, \"destination\"         , this.dma1.destination        );\n    this.assign(IOCore.dmaChannel1, \"destinationControl\"  , this.dma1.destinationControl );       \n    this.assign(IOCore.dmaChannel1, \"destinationShadow\"   , this.dma1.destinationShadow  );      \n    this.assign(IOCore.dmaChannel1, \"dmaType\"             , this.dma1.dmaType            );       \n    this.assign(IOCore.dmaChannel1, \"enabled\"             , this.dma1.enabled            );        \n    this.assign(IOCore.dmaChannel1, \"irqFlagging\"         , this.dma1.irqFlagging        );\n    this.assign(IOCore.dmaChannel1, \"is32Bit\"             , this.dma1.is32Bit            );        \n    this.assign(IOCore.dmaChannel1, \"pending\"             , this.dma1.pending            );         \n    this.assign(IOCore.dmaChannel1, \"repeat\"              , this.dma1.repeat             );       \n    this.assign(IOCore.dmaChannel1, \"source\"              , this.dma1.source             );      \n    this.assign(IOCore.dmaChannel1, \"sourceControl\"       , this.dma1.sourceControl      );  \n    this.assign(IOCore.dmaChannel1, \"sourceShadow\"        , this.dma1.sourceShadow       ); \n    this.assign(IOCore.dmaChannel1, \"wordCount\"           , this.dma1.wordCount          );           \n    this.assign(IOCore.dmaChannel1, \"wordCountShadow\"     , this.dma1.wordCountShadow    );\n\n    this.assign(IOCore.dmaChannel2, \"destination\"         , this.dma2.destination        );\n    this.assign(IOCore.dmaChannel2, \"destinationControl\"  , this.dma2.destinationControl );       \n    this.assign(IOCore.dmaChannel2, \"destinationShadow\"   , this.dma2.destinationShadow  );      \n    this.assign(IOCore.dmaChannel2, \"dmaType\"             , this.dma2.dmaType            );       \n    this.assign(IOCore.dmaChannel2, \"enabled\"             , this.dma2.enabled            );        \n    this.assign(IOCore.dmaChannel2, \"irqFlagging\"         , this.dma2.irqFlagging        );\n    this.assign(IOCore.dmaChannel2, \"is32Bit\"             , this.dma2.is32Bit            );        \n    this.assign(IOCore.dmaChannel2, \"pending\"             , this.dma2.pending            );         \n    this.assign(IOCore.dmaChannel2, \"repeat\"              , this.dma2.repeat             );       \n    this.assign(IOCore.dmaChannel2, \"source\"              , this.dma2.source             );      \n    this.assign(IOCore.dmaChannel2, \"sourceControl\"       , this.dma2.sourceControl      );  \n    this.assign(IOCore.dmaChannel2, \"sourceShadow\"        , this.dma2.sourceShadow       ); \n    this.assign(IOCore.dmaChannel2, \"wordCount\"           , this.dma2.wordCount          );           \n    this.assign(IOCore.dmaChannel2, \"wordCountShadow\"     , this.dma2.wordCountShadow    );\n\n    this.assign(IOCore.dmaChannel3, \"destination\"            , this.dma3.destination            );      \n    this.assign(IOCore.dmaChannel3, \"destinationControl\"     , this.dma3.destinationControl     );             \n    this.assign(IOCore.dmaChannel3, \"destinationShadow\"      , this.dma3.destinationShadow      );            \n    this.assign(IOCore.dmaChannel3, \"displaySyncEnableDelay\" , this.dma3.displaySyncEnableDelay );                 \n    this.assign(IOCore.dmaChannel3, \"dmaType\"                , this.dma3.dmaType                );  \n    this.assign(IOCore.dmaChannel3, \"enabled\"                , this.dma3.enabled                );  \n    this.assign(IOCore.dmaChannel3, \"gamePakDMA\"             , this.dma3.gamePakDMA             );     \n    this.assign(IOCore.dmaChannel3, \"irqFlagging\"            , this.dma3.irqFlagging            );      \n    this.assign(IOCore.dmaChannel3, \"is32Bit\"                , this.dma3.is32Bit                );  \n    this.assign(IOCore.dmaChannel3, \"pending\"                , this.dma3.pending                );  \n    this.assign(IOCore.dmaChannel3, \"repeat\"                 , this.dma3.repeat                 ); \n    this.assign(IOCore.dmaChannel3, \"source\"                 , this.dma3.source                 ); \n    this.assign(IOCore.dmaChannel3, \"sourceControl\"          , this.dma3.sourceControl          );        \n    this.assign(IOCore.dmaChannel3, \"sourceShadow\"           , this.dma3.sourceShadow           );       \n    this.assign(IOCore.dmaChannel3, \"wordCount\"              , this.dma3.wordCount              );    \n    this.assign(IOCore.dmaChannel3, \"wordCountShadow\"        , this.dma3.wordCountShadow        );     \n                          \n    /* CPU */                             \n    this.assign(IOCore.cpu, \"registers\"                   , this.registers                  );   \n    this.assign(IOCore.cpu, \"registersUSR\"                , this.registersUSR               );\n    this.assign(IOCore.cpu, \"registersFIQ\"                , this.registersFIQ               );\n    this.assign(IOCore.cpu, \"registersSVC\"                , this.registersSVC               );\n    this.assign(IOCore.cpu, \"registersABT\"                , this.registersABT               );\n    this.assign(IOCore.cpu, \"registersIRQ\"                , this.registersIRQ               );\n    this.assign(IOCore.cpu, \"registersUND\"                , this.registersUND               );\n    this.assign(IOCore.cpu, \"modeFlags\"                   , this.modeFlags                  );\n    this.assign(IOCore.cpu, \"SPSR\"                        , this.SPSR                       );\n    this.assign(IOCore.cpu, \"mul64ResultHigh\"             , this.mul64ResultHigh            );\n    this.assign(IOCore.cpu, \"mul64ResultLow\"              , this.mul64ResultLow             );\n    this.assign(IOCore.cpu, \"triggeredIRQ\"                , this.triggeredIRQ               );\n\n    this.assign(IOCore.THUMB, \"decode\"                    , this.THUMB.decode               );\n    this.assign(IOCore.THUMB, \"execute\"                   , this.THUMB.execute              );\n    this.assign(IOCore.THUMB, \"fetch\"                     , this.THUMB.fetch                );\n\n    this.assign(IOCore.ARM, \"decode\"                      , this.ARM.decode                 );\n    this.assign(IOCore.ARM, \"execute\"                     , this.ARM.execute                );\n    this.assign(IOCore.ARM, \"fetch\"                       , this.ARM.fetch                  );\n     \n    /* Timers */           \n    this.assign(IOCore.timer, \"timer0Counter\"             , this.timer0Counter              );\n    this.assign(IOCore.timer, \"timer0Reload\"              , this.timer0Reload               );\n    this.assign(IOCore.timer, \"timer0Control\"             , this.timer0Control              );\n    this.assign(IOCore.timer, \"timer0Enabled\"             , this.timer0Enabled              ); \n    this.assign(IOCore.timer, \"timer0IRQ\"                 , this.timer0IRQ                  ); \n    this.assign(IOCore.timer, \"timer0Precounter\"          , this.timer0Precounter           );\n    this.assign(IOCore.timer, \"timer0Prescalar\"           , this.timer0Prescalar            );\n    this.assign(IOCore.timer, \"timer0PrescalarShifted\"    , this.timer0PrescalarShifted     );\n    this.assign(IOCore.timer, \"timer1Counter\"             , this.timer1Counter              );\n    this.assign(IOCore.timer, \"timer1Reload\"              , this.timer1Reload               );\n    this.assign(IOCore.timer, \"timer1Control\"             , this.timer1Control              );\n    this.assign(IOCore.timer, \"timer1Enabled\"             , this.timer1Enabled              ); \n    this.assign(IOCore.timer, \"timer1IRQ\"                 , this.timer1IRQ                  ); \n    this.assign(IOCore.timer, \"timer1Precounter\"          , this.timer1Precounter           );\n    this.assign(IOCore.timer, \"timer1Prescalar\"           , this.timer1Prescalar            );\n    this.assign(IOCore.timer, \"timer1PrescalarShifted\"    , this.timer1PrescalarShifted     );\n    this.assign(IOCore.timer, \"timer1CountUp\"             , this.timer1CountUp              ); \n    this.assign(IOCore.timer, \"timer2Counter\"             , this.timer2Counter              );\n    this.assign(IOCore.timer, \"timer2Reload\"              , this.timer2Reload               );\n    this.assign(IOCore.timer, \"timer2Control\"             , this.timer2Control              );\n    this.assign(IOCore.timer, \"timer2Enabled\"             , this.timer2Enabled              ); \n    this.assign(IOCore.timer, \"timer2IRQ\"                 , this.timer2IRQ                  ); \n    this.assign(IOCore.timer, \"timer2Precounter\"          , this.timer2Precounter           );\n    this.assign(IOCore.timer, \"timer2Prescalar\"           , this.timer2Prescalar            );\n    this.assign(IOCore.timer, \"timer2PrescalarShifted\"    , this.timer2PrescalarShifted     );\n    this.assign(IOCore.timer, \"timer2CountUp\"             , this.timer2CountUp              ); \n    this.assign(IOCore.timer, \"timer3Counter\"             , this.timer3Counter              );\n    this.assign(IOCore.timer, \"timer3Reload\"              , this.timer3Reload               );\n    this.assign(IOCore.timer, \"timer3Control\"             , this.timer3Control              );\n    this.assign(IOCore.timer, \"timer3Enabled\"             , this.timer3Enabled              ); \n    this.assign(IOCore.timer, \"timer3IRQ\"                 , this.timer3IRQ                  ); \n    this.assign(IOCore.timer, \"timer3Precounter\"          , this.timer3Precounter           );\n    this.assign(IOCore.timer, \"timer3Prescalar\"           , this.timer3Prescalar            );\n    this.assign(IOCore.timer, \"timer3PrescalarShifted\"    , this.timer3PrescalarShifted     );\n    this.assign(IOCore.timer, \"timer3CountUp\"             , this.timer3CountUp              ); \n    this.assign(IOCore.timer, \"timer1UseMainClocks\"       , this.timer1UseMainClocks        ); \n    this.assign(IOCore.timer, \"timer1UseChainedClocks\"    , this.timer1UseChainedClocks     ); \n    this.assign(IOCore.timer, \"timer2UseMainClocks\"       , this.timer2UseMainClocks        ); \n    this.assign(IOCore.timer, \"timer2UseChainedClocks\"    , this.timer2UseChainedClocks     ); \n    this.assign(IOCore.timer, \"timer3UseMainClocks\"       , this.timer3UseMainClocks        ); \n    this.assign(IOCore.timer, \"timer3UseChainedClocks\"    , this.timer3UseChainedClocks     );  \n    \n    /* Wait */    \n    this.assign(IOCore.wait, \"WRAMConfiguration\"          , this.WRAMConfiguration          );\n    this.assign(IOCore.wait, \"WRAMWaitState\"              , this.WRAMWaitState              );    \n    this.assign(IOCore.wait, \"SRAMWaitState\"              , this.SRAMWaitState              );    \n    this.assign(IOCore.wait, \"WAITCNT0\"                   , this.WAITCNT0                   );         \n    this.assign(IOCore.wait, \"WAITCNT1\"                   , this.WAITCNT1                   );         \n    this.assign(IOCore.wait, \"POSTBOOT\"                   , this.POSTBOOT                   );         \n    this.assign(IOCore.wait, \"isRendering\"                , this.isRendering                );      \n    this.assign(IOCore.wait, \"isOAMRendering\"             , this.isOAMRendering             );   \n    this.assign(IOCore.wait, \"nonSequential\"              , this.nonSequential              );    \n    this.assign(IOCore.wait, \"buffer\"                     , this.buffer                     );           \n    this.assign(IOCore.wait, \"clocks\"                     , this.clocks                     ); \n\n    /* Serial */\n    this.assign(IOCore.serial, \"SIODATA_A\"                ,this.SIODATA_A                   );     \n    this.assign(IOCore.serial, \"SIODATA_B\"                ,this.SIODATA_B                   );     \n    this.assign(IOCore.serial, \"SIODATA_C\"                ,this.SIODATA_C                   );     \n    this.assign(IOCore.serial, \"SIODATA_D\"                ,this.SIODATA_D                   );     \n    this.assign(IOCore.serial, \"SIOShiftClockExternal\"    ,this.SIOShiftClockExternal       );     \n    this.assign(IOCore.serial, \"SIOShiftClockDivider\"     ,this.SIOShiftClockDivider        );     \n    this.assign(IOCore.serial, \"SIOCNT0_DATA\"             ,this.SIOCNT0_DATA                );     \n    this.assign(IOCore.serial, \"SIOTransferStarted\"       ,this.SIOTransferStarted          );     \n    this.assign(IOCore.serial, \"SIOMULT_PLAYER_NUMBER\"    ,this.SIOMULT_PLAYER_NUMBER       );     \n    this.assign(IOCore.serial, \"SIOCOMMERROR\"             ,this.SIOCOMMERROR                );     \n    this.assign(IOCore.serial, \"SIOBaudRate\"              ,this.SIOBaudRate                 );     \n    this.assign(IOCore.serial, \"SIOCNT_UART_CTS\"          ,this.SIOCNT_UART_CTS             );   \n    this.assign(IOCore.serial, \"SIOCNT_UART_MISC\"         ,this.SIOCNT_UART_MISC            );     \n    this.assign(IOCore.serial, \"SIOCNT_UART_FIFO\"         ,this.SIOCNT_UART_FIFO            );     \n    this.assign(IOCore.serial, \"SIOCNT_IRQ\"               ,this.SIOCNT_IRQ                  );     \n    this.assign(IOCore.serial, \"SIOCNT_MODE\"              ,this.SIOCNT_MODE                 );     \n    this.assign(IOCore.serial, \"SIOCNT_UART_RECV_ENABLE\"  ,this.SIOCNT_UART_RECV_ENABLE     );      \n    this.assign(IOCore.serial, \"SIOCNT_UART_SEND_ENABLE\"  ,this.SIOCNT_UART_SEND_ENABLE     );      \n    this.assign(IOCore.serial, \"SIOCNT_UART_PARITY_ENABLE\",this.SIOCNT_UART_PARITY_ENABLE   );       \n    this.assign(IOCore.serial, \"SIOCNT_UART_FIFO_ENABLE\"  ,this.SIOCNT_UART_FIFO_ENABLE     );      \n    this.assign(IOCore.serial, \"SIODATA8\"                 ,this.SIODATA8                    );     \n    this.assign(IOCore.serial, \"RCNTMode\"                 ,this.RCNTMode                    );     \n    this.assign(IOCore.serial, \"RCNTIRQ\"                  ,this.RCNTIRQ                     );   \n    this.assign(IOCore.serial, \"RCNTDataBits\"             ,this.RCNTDataBits                );     \n    this.assign(IOCore.serial, \"RCNTDataBitFlow\"          ,this.RCNTDataBitFlow             );     \n    this.assign(IOCore.serial, \"JOYBUS_IRQ\"               ,this.JOYBUS_IRQ                  );     \n    this.assign(IOCore.serial, \"JOYBUS_CNTL_FLAGS\"        ,this.JOYBUS_CNTL_FLAGS           );     \n    this.assign(IOCore.serial, \"JOYBUS_RECV0\"             ,this.JOYBUS_RECV0                );     \n    this.assign(IOCore.serial, \"JOYBUS_RECV1\"             ,this.JOYBUS_RECV1                );     \n    this.assign(IOCore.serial, \"JOYBUS_RECV2\"             ,this.JOYBUS_RECV2                );     \n    this.assign(IOCore.serial, \"JOYBUS_RECV3\"             ,this.JOYBUS_RECV3                );     \n    this.assign(IOCore.serial, \"JOYBUS_SEND0\"             ,this.JOYBUS_SEND0                );     \n    this.assign(IOCore.serial, \"JOYBUS_SEND1\"             ,this.JOYBUS_SEND1                );     \n    this.assign(IOCore.serial, \"JOYBUS_SEND2\"             ,this.JOYBUS_SEND2                );     \n    this.assign(IOCore.serial, \"JOYBUS_SEND3\"             ,this.JOYBUS_SEND3                );     \n    this.assign(IOCore.serial, \"JOYBUS_STAT\"              ,this.JOYBUS_STAT                 );     \n    this.assign(IOCore.serial, \"shiftClocks\"              ,this.shiftClocks                 );     \n    this.assign(IOCore.serial, \"serialBitsShifted\"        ,this.serialBitsShifted           );\n\n    /* Run Loop */\n    this.assign(IOCore, \"systemStatus\"                    ,this.systemStatus                );\n    this.assign(IOCore, \"cyclesToIterate\"                 ,this.cyclesToIterate             );\n    this.assign(IOCore, \"cyclesOveriteratedPreviously\"    ,this.cyclesOveriteratedPreviously);\n    this.assign(IOCore, \"accumulatedClocks\"               ,this.accumulatedClocks           );\n    this.assign(IOCore, \"graphicsClocks\"                  ,this.graphicsClocks              );\n    this.assign(IOCore, \"timerClocks\"                     ,this.timerClocks                 );\n    this.assign(IOCore, \"serialClocks\"                    ,this.serialClocks                );\n    this.assign(IOCore, \"nextEventClocks\"                 ,this.nextEventClocks             );\n\n    /* IRQ */\n    this.assign(IOCore.irq, \"interruptsEnabled\"           ,this.interruptsEnabled           );\n    this.assign(IOCore.irq, \"interruptsRequested\"         ,this.interruptsRequested         );\n    this.assign(IOCore.irq, \"IME\"                         ,this.IME                         );\n\nif(!this.warping) {\n\n    /* Video */\n    this.assign(IOCore.gfxState                             , \"renderedScanLine\"    ,this.renderedScanLine           );\n    this.assign(IOCore.gfxState                             , \"statusFlags\"         ,this.statusFlags                );\n    this.assign(IOCore.gfxState                             , \"IRQFlags\"            ,this.IRQFlags                   );\n    this.assign(IOCore.gfxState                             , \"VCounter\"            ,this.VCounter                   );\n    this.assign(IOCore.gfxState                             , \"currentScanLine\"     ,this.currentScanLine            );\n    this.assign(IOCore.gfxState                             , \"LCDTicks\"            ,this.LCDTicks                   );\n\n    this.assign(IOCore.gfxRenderer                          , \"IOData8\"             ,this.IOData8                    );\n    \n    this.assign(IOCore.gfxRenderer.renderer, \"displayControl\"      ,this.renderer.displayControl    );\n    this.assign(IOCore.gfxRenderer.renderer, \"display\"             ,this.renderer.display           );\n    this.assign(IOCore.gfxRenderer.renderer, \"greenSwap\"           ,this.renderer.greenSwap         );\n    this.assign(IOCore.gfxRenderer.renderer, \"WINOutside\"          ,this.renderer.WINOutside        );\n    this.assign(IOCore.gfxRenderer.renderer, \"paletteRAM\"          ,this.renderer.paletteRAM        );\n    this.assign(IOCore.gfxRenderer.renderer, \"VRAM\"                ,this.renderer.VRAM              );\n    this.assign(IOCore.gfxRenderer.renderer, \"buffer\"              ,this.renderer.buffer            );\n    this.assign(IOCore.gfxRenderer.renderer, \"frameBuffer\"         ,this.renderer.frameBuffer       );\n    this.assign(IOCore.gfxRenderer.renderer, \"swizzledFrame\"       ,this.renderer.swizzledFrame     );\n    this.assign(IOCore.gfxRenderer.renderer, \"totalLinesPassed\"    ,this.renderer.totalLinesPassed  );\n    this.assign(IOCore.gfxRenderer.renderer, \"queuedScanLines\"     ,this.renderer.queuedScanLines   );\n    this.assign(IOCore.gfxRenderer.renderer, \"lastUnrenderedLine\"  ,this.renderer.lastUnrenderedLine);\n    this.assign(IOCore.gfxRenderer.renderer, \"backdrop\"            ,this.renderer.backdrop          );\n    this.assign(IOCore.gfxRenderer.renderer, \"palette256\"          ,this.renderer.palette256        );\n    this.assign(IOCore.gfxRenderer.renderer, \"paletteOBJ256\"       ,this.renderer.paletteOBJ256     );\n    this.assign(IOCore.gfxRenderer.renderer, \"palette16\"           ,this.renderer.palette16         );\n    this.assign(IOCore.gfxRenderer.renderer, \"paletteOBJ16\"        ,this.renderer.paletteOBJ16      );\n\n    this.assign(IOCore.gfxRenderer.renderer, \"lineBuffer\"          ,this.renderer.lineBuffer        );\n\n    this.assign(IOCore.gfxRenderer.renderer.compositor, \"buffer\"     ,this.renderer.compositor.buffer   );   \n    this.assign(IOCore.gfxRenderer.renderer.compositor, \"doEffects\"  ,this.renderer.compositor.doEffects ); \n\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"BGCharacterBaseBlock\"   , this.renderer.bg0Renderer.BGCharacterBaseBlock                     );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"BGLayer\"                , this.renderer.bg0Renderer.BGLayer                                  );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"BGScreenBaseBlock\"      , this.renderer.bg0Renderer.BGScreenBaseBlock                        );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"BGXCoord\"               , this.renderer.bg0Renderer.BGXCoord                                 );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"BGYCoord\"               , this.renderer.bg0Renderer.BGYCoord                                 );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"do256\"                  , this.renderer.bg0Renderer.do256                                    );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"doMosaic\"               , this.renderer.bg0Renderer.doMosaic                                 );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"offset\"                 , this.renderer.bg0Renderer.offset                                   );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"priorityFlag\"           , this.renderer.bg0Renderer.priorityFlag                             );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"tileFetched\"            , this.renderer.bg0Renderer.tileFetched                              );\n    this.assign(IOCore.gfxRenderer.renderer.bg0Renderer                  , \"tileMode\"               , this.renderer.bg0Renderer.tileMode                                 );\n\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"BGCharacterBaseBlock\"   , this.renderer.bg1Renderer.BGCharacterBaseBlock                     );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"BGLayer\"                , this.renderer.bg1Renderer.BGLayer                                  );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"BGScreenBaseBlock\"      , this.renderer.bg1Renderer.BGScreenBaseBlock                        );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"BGXCoord\"               , this.renderer.bg1Renderer.BGXCoord                                 );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"BGYCoord\"               , this.renderer.bg1Renderer.BGYCoord                                 );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"do256\"                  , this.renderer.bg1Renderer.do256                                    );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"doMosaic\"               , this.renderer.bg1Renderer.doMosaic                                 );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"offset\"                 , this.renderer.bg1Renderer.offset                                   );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"priorityFlag\"           , this.renderer.bg1Renderer.priorityFlag                             );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"tileFetched\"            , this.renderer.bg1Renderer.tileFetched                              );\n    this.assign(IOCore.gfxRenderer.renderer.bg1Renderer                  , \"tileMode\"               , this.renderer.bg1Renderer.tileMode                                 );\n\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"BGCharacterBaseBlock\"   , this.renderer.bg2TextRenderer.BGCharacterBaseBlock                 );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"BGLayer\"                , this.renderer.bg2TextRenderer.BGLayer                              );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"BGScreenBaseBlock\"      , this.renderer.bg2TextRenderer.BGScreenBaseBlock                    );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"BGXCoord\"               , this.renderer.bg2TextRenderer.BGXCoord                             );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"BGYCoord\"               , this.renderer.bg2TextRenderer.BGYCoord                             );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"do256\"                  , this.renderer.bg2TextRenderer.do256                                );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"doMosaic\"               , this.renderer.bg2TextRenderer.doMosaic                             );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"offset\"                 , this.renderer.bg2TextRenderer.offset                               );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"priorityFlag\"           , this.renderer.bg2TextRenderer.priorityFlag                         );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"tileFetched\"            , this.renderer.bg2TextRenderer.tileFetched                          );\n    this.assign(IOCore.gfxRenderer.renderer.bg2TextRenderer              , \"tileMode\"               , this.renderer.bg2TextRenderer.tileMode                             ); \n\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"BGCharacterBaseBlock\"   , this.renderer.bg3TextRenderer.BGCharacterBaseBlock                 );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"BGLayer\"                , this.renderer.bg3TextRenderer.BGLayer                              );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"BGScreenBaseBlock\"      , this.renderer.bg3TextRenderer.BGScreenBaseBlock                    );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"BGXCoord\"               , this.renderer.bg3TextRenderer.BGXCoord                             );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"BGYCoord\"               , this.renderer.bg3TextRenderer.BGYCoord                             );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"do256\"                  , this.renderer.bg3TextRenderer.do256                                );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"doMosaic\"               , this.renderer.bg3TextRenderer.doMosaic                             );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"offset\"                 , this.renderer.bg3TextRenderer.offset                               );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"priorityFlag\"           , this.renderer.bg3TextRenderer.priorityFlag                         );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"tileFetched\"            , this.renderer.bg3TextRenderer.tileFetched                          );\n    this.assign(IOCore.gfxRenderer.renderer.bg3TextRenderer              , \"tileMode\"               , this.renderer.bg3TextRenderer.tileMode                             ); \n\n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"BGLayer\"                , this.renderer.bgAffineRenderer0.BGLayer                            );       \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"BGReferenceX\"           , this.renderer.bgAffineRenderer0.BGReferenceX                       );            \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"BGReferenceY\"           , this.renderer.bgAffineRenderer0.BGReferenceY                       );            \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"BGdmx\"                  , this.renderer.bgAffineRenderer0.BGdmx                              );     \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"BGdmy\"                  , this.renderer.bgAffineRenderer0.BGdmy                              );     \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"BGdx\"                   , this.renderer.bgAffineRenderer0.BGdx                               );    \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"BGdy\"                   , this.renderer.bgAffineRenderer0.BGdy                               );    \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"doMosaic\"               , this.renderer.bgAffineRenderer0.doMosaic                           );        \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"offset\"                 , this.renderer.bgAffineRenderer0.offset                             );      \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"pb\"                     , this.renderer.bgAffineRenderer0.pb                                 );  \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"pd\"                     , this.renderer.bgAffineRenderer0.pd                                 );  \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer0            , \"priorityFlag\"           , this.renderer.bgAffineRenderer0.priorityFlag                       ); \n\n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"BGLayer\"                , this.renderer.bgAffineRenderer1.BGLayer                            );       \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"BGReferenceX\"           , this.renderer.bgAffineRenderer1.BGReferenceX                       );            \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"BGReferenceY\"           , this.renderer.bgAffineRenderer1.BGReferenceY                       );            \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"BGdmx\"                  , this.renderer.bgAffineRenderer1.BGdmx                              );     \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"BGdmy\"                  , this.renderer.bgAffineRenderer1.BGdmy                              );     \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"BGdx\"                   , this.renderer.bgAffineRenderer1.BGdx                               );    \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"BGdy\"                   , this.renderer.bgAffineRenderer1.BGdy                               );    \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"doMosaic\"               , this.renderer.bgAffineRenderer1.doMosaic                           );        \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"offset\"                 , this.renderer.bgAffineRenderer1.offset                             );      \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"pb\"                     , this.renderer.bgAffineRenderer1.pb                                 );  \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"pd\"                     , this.renderer.bgAffineRenderer1.pd                                 );  \n    this.assign(IOCore.gfxRenderer.renderer.bgAffineRenderer1            , \"priorityFlag\"           , this.renderer.bgAffineRenderer1.priorityFlag                       );   \n \n    this.assign(IOCore.gfxRenderer.renderer.bg2FrameBufferRenderer       , \"frameSelect\"            , this.renderer.bg2FrameBufferRenderer.frameSelect                   );\n\n    this.assign(IOCore.gfxRenderer.renderer.bg2MatrixRenderer            , \"BGCharacterBaseBlock\"   , this.renderer.bg2MatrixRenderer.BGCharacterBaseBlock               );                \n    this.assign(IOCore.gfxRenderer.renderer.bg2MatrixRenderer            , \"BGDisplayOverflow\"      , this.renderer.bg2MatrixRenderer.BGDisplayOverflow                  );             \n    this.assign(IOCore.gfxRenderer.renderer.bg2MatrixRenderer            , \"BGScreenBaseBlock\"      , this.renderer.bg2MatrixRenderer.BGScreenBaseBlock                  );             \n    this.assign(IOCore.gfxRenderer.renderer.bg2MatrixRenderer            , \"mapSize\"                , this.renderer.bg2MatrixRenderer.mapSize                            );   \n    this.assign(IOCore.gfxRenderer.renderer.bg2MatrixRenderer            , \"mapSizeComparer\"        , this.renderer.bg2MatrixRenderer.mapSizeComparer                    );              \n\n    this.assign(IOCore.gfxRenderer.renderer.bg3MatrixRenderer            ,\"BGCharacterBaseBlock\"    , this.renderer.bg3MatrixRenderer.BGCharacterBaseBlock               );                \n    this.assign(IOCore.gfxRenderer.renderer.bg3MatrixRenderer            ,\"BGDisplayOverflow\"       , this.renderer.bg3MatrixRenderer.BGDisplayOverflow                  );             \n    this.assign(IOCore.gfxRenderer.renderer.bg3MatrixRenderer            ,\"BGScreenBaseBlock\"       , this.renderer.bg3MatrixRenderer.BGScreenBaseBlock                  );             \n    this.assign(IOCore.gfxRenderer.renderer.bg3MatrixRenderer            ,\"mapSize\"                 , this.renderer.bg3MatrixRenderer.mapSize                            );   \n    this.assign(IOCore.gfxRenderer.renderer.bg3MatrixRenderer            ,\"mapSizeComparer\"         , this.renderer.bg3MatrixRenderer.mapSizeComparer                    );   \n\n    this.assign(IOCore.gfxRenderer.renderer.colorEffectsRenderer         ,\"alphaBlendAmountTarget1\" , this.renderer.colorEffectsRenderer.alphaBlendAmountTarget1         );\n    this.assign(IOCore.gfxRenderer.renderer.colorEffectsRenderer         ,\"alphaBlendAmountTarget2\" , this.renderer.colorEffectsRenderer.alphaBlendAmountTarget2         );\n    this.assign(IOCore.gfxRenderer.renderer.colorEffectsRenderer         ,\"brightnessEffectAmount\"  , this.renderer.colorEffectsRenderer.brightnessEffectAmount          );\n    this.assign(IOCore.gfxRenderer.renderer.colorEffectsRenderer         ,\"colorEffectsType\"        , this.renderer.colorEffectsRenderer.colorEffectsType                );\n    this.assign(IOCore.gfxRenderer.renderer.colorEffectsRenderer         ,\"effectsTarget1\"          , this.renderer.colorEffectsRenderer.effectsTarget1                  );\n    this.assign(IOCore.gfxRenderer.renderer.colorEffectsRenderer         ,\"effectsTarget2\"          , this.renderer.colorEffectsRenderer.effectsTarget2                  );\n\n    this.assign(IOCore.gfxRenderer.renderer.mosaicRenderer               ,\"BGMosaicHSize\"           , this.renderer.mosaicRenderer.BGMosaicHSize                         );\n    this.assign(IOCore.gfxRenderer.renderer.mosaicRenderer               ,\"BGMosaicVSize\"           , this.renderer.mosaicRenderer.BGMosaicVSize                         );\n    this.assign(IOCore.gfxRenderer.renderer.mosaicRenderer               ,\"OBJMosaicHSize\"          , this.renderer.mosaicRenderer.OBJMosaicHSize                        );\n    this.assign(IOCore.gfxRenderer.renderer.mosaicRenderer               ,\"OBJMosaicVSize\"          , this.renderer.mosaicRenderer.OBJMosaicVSize                        );\n\n    this.assign(IOCore.gfxRenderer.renderer.objRenderer                  ,\"cyclesToRender\"          , this.renderer.objRenderer.cyclesToRender                           );\n    this.assign(IOCore.gfxRenderer.renderer.objRenderer                  ,\"OAMRAM\"                  , this.renderer.objRenderer.OAMRAM                                   );\n    this.assign(IOCore.gfxRenderer.renderer.objRenderer                  ,\"scratchBuffer\"           , this.renderer.objRenderer.scratchBuffer                            );\n    this.assign(IOCore.gfxRenderer.renderer.objRenderer                  ,\"scratchWindowBuffer\"     , this.renderer.objRenderer.scratchWindowBuffer                      );\n    this.assign(IOCore.gfxRenderer.renderer.objRenderer                  ,\"scratchOBJBuffer\"        , this.renderer.objRenderer.scratchOBJBuffer                         );\n    this.assign(IOCore.gfxRenderer.renderer.objRenderer                  ,\"OBJMatrixParameters\"     , this.renderer.objRenderer.OBJMatrixParameters                      );\n\n    this.assign(IOCore.gfxRenderer.renderer.objWindowRenderer            ,\"WINOBJOutside\"           , this.renderer.objWindowRenderer.WINOBJOutside                      );\n\n    this.assign(IOCore.gfxRenderer.renderer.window0Renderer              , \"WINXCoordLeft\"          , this.renderer.window0Renderer.WINXCoordLeft                        );\n    this.assign(IOCore.gfxRenderer.renderer.window0Renderer              , \"WINXCoordRight\"         , this.renderer.window0Renderer.WINXCoordRight                       );\n    this.assign(IOCore.gfxRenderer.renderer.window0Renderer              , \"WINYCoordBottom\"        , this.renderer.window0Renderer.WINYCoordBottom                      );\n    this.assign(IOCore.gfxRenderer.renderer.window0Renderer              , \"WINYCoordTop\"           , this.renderer.window0Renderer.WINYCoordTop                         );\n    this.assign(IOCore.gfxRenderer.renderer.window0Renderer              , \"windowDisplayControl\"   , this.renderer.window0Renderer.windowDisplayControl                 );\n\n    this.assign(IOCore.gfxRenderer.renderer.window1Renderer              , \"WINXCoordLeft\"          , this.renderer.window1Renderer.WINXCoordLeft       );\n    this.assign(IOCore.gfxRenderer.renderer.window1Renderer              , \"WINXCoordRight\"         , this.renderer.window1Renderer.WINXCoordRight      );\n    this.assign(IOCore.gfxRenderer.renderer.window1Renderer              , \"WINYCoordBottom\"        , this.renderer.window1Renderer.WINYCoordBottom     );\n    this.assign(IOCore.gfxRenderer.renderer.window1Renderer              , \"WINYCoordTop\"           , this.renderer.window1Renderer.WINYCoordTop        );\n    this.assign(IOCore.gfxRenderer.renderer.window1Renderer              , \"windowDisplayControl\"   , this.renderer.window1Renderer.windowDisplayControl);\n\n} \n\n   /* Audio */\n   this.assign(IOCore.sound         , \"AGBDirectSoundA\"                 , this.AGBDirectSoundA                     );\n   this.assign(IOCore.sound         , \"AGBDirectSoundAFolded\"           , this.AGBDirectSoundAFolded               );\n   this.assign(IOCore.sound         , \"AGBDirectSoundALeftCanPlay\"      , this.AGBDirectSoundALeftCanPlay          );\n   this.assign(IOCore.sound         , \"AGBDirectSoundARightCanPlay\"     , this.AGBDirectSoundARightCanPlay         );\n   this.assign(IOCore.sound         , \"AGBDirectSoundAShifter\"          , this.AGBDirectSoundAShifter              );\n   this.assign(IOCore.sound         , \"AGBDirectSoundATimer\"            , this.AGBDirectSoundATimer                );\n   this.assign(IOCore.sound         , \"AGBDirectSoundB\"                 , this.AGBDirectSoundB                     );\n   this.assign(IOCore.sound         , \"AGBDirectSoundBFolded\"           , this.AGBDirectSoundBFolded               );\n   this.assign(IOCore.sound         , \"AGBDirectSoundBLeftCanPlay\"      , this.AGBDirectSoundBLeftCanPlay          );\n   this.assign(IOCore.sound         , \"AGBDirectSoundBRightCanPlay\"     , this.AGBDirectSoundBRightCanPlay         );\n   this.assign(IOCore.sound         , \"AGBDirectSoundBShifter\"          , this.AGBDirectSoundBShifter              );\n   this.assign(IOCore.sound         , \"AGBDirectSoundBTimer\"            , this.AGBDirectSoundBTimer                );\n   this.assign(IOCore.sound         , \"CGBMixerOutputCacheLeft\"         , this.CGBMixerOutputCacheLeft             );\n   this.assign(IOCore.sound         , \"CGBMixerOutputCacheLeftFolded\"   , this.CGBMixerOutputCacheLeftFolded       );\n   this.assign(IOCore.sound         , \"CGBMixerOutputCacheRight\"        , this.CGBMixerOutputCacheRight            );\n   this.assign(IOCore.sound         , \"CGBMixerOutputCacheRightFolded\"  , this.CGBMixerOutputCacheRightFolded      );\n   this.assign(IOCore.sound         , \"CGBOutputRatio\"                  , this.CGBOutputRatio                      );\n   this.assign(IOCore.sound         , \"PWMBitDepthMask\"                 , this.PWMBitDepthMask                     );\n   this.assign(IOCore.sound         , \"PWMBitDepthMaskShadow\"           , this.PWMBitDepthMaskShadow               );\n   this.assign(IOCore.sound         , \"PWMWidth\"                        , this.PWMWidth                            );\n   this.assign(IOCore.sound         , \"PWMWidthOld\"                     , this.PWMWidthOld                         );\n   this.assign(IOCore.sound         , \"PWMWidthShadow\"                  , this.PWMWidthShadow                      );\n   this.assign(IOCore.sound         , \"VinLeftChannelMasterVolume\"      , this.VinLeftChannelMasterVolume          );\n   this.assign(IOCore.sound         , \"VinRightChannelMasterVolume\"     , this.VinRightChannelMasterVolume         );\n   this.assign(IOCore.sound         , \"audioClocksUntilNextEvent\"       , this.audioClocksUntilNextEvent           );\n   this.assign(IOCore.sound         , \"audioClocksUntilNextEventCounter\", this.audioClocksUntilNextEventCounter    );\n   this.assign(IOCore.sound         , \"audioIndex\"                      , this.audioIndex                          );\n   this.assign(IOCore.sound         , \"audioResamplerFirstPassFactor\"   , this.audioResamplerFirstPassFactor       );\n   this.assign(IOCore.sound         , \"audioTicks\"                      , this.audioTicks                          );\n   this.assign(IOCore.sound         , \"downsampleInputLeft\"             , this.downsampleInputLeft                 );\n   this.assign(IOCore.sound         , \"downsampleInputRight\"            , this.downsampleInputRight                );\n   this.assign(IOCore.sound         , \"mixerOutputCacheLeft\"            , this.mixerOutputCacheLeft                );\n   this.assign(IOCore.sound         , \"mixerOutputCacheRight\"           , this.mixerOutputCacheRight               );\n   this.assign(IOCore.sound         , \"mixerSoundBIAS\"                  , this.mixerSoundBIAS                      );\n   this.assign(IOCore.sound         , \"nr50\"                            , this.nr50                                );\n   this.assign(IOCore.sound         , \"nr51\"                            , this.nr51                                );\n   this.assign(IOCore.sound         , \"nr52\"                            , this.nr52                                );\n   this.assign(IOCore.sound         , \"nr60\"                            , this.nr60                                );\n   this.assign(IOCore.sound         , \"nr61\"                            , this.nr61                                );\n   this.assign(IOCore.sound         , \"nr62\"                            , this.nr62                                );\n   this.assign(IOCore.sound         , \"nr63\"                            , this.nr63                                );\n   this.assign(IOCore.sound         , \"sequencePosition\"                , this.sequencePosition                    );\n   this.assign(IOCore.sound         , \"sequencerClocks\"                 , this.sequencerClocks                     );\n   this.assign(IOCore.sound         , \"soundMasterEnabled\"              , this.soundMasterEnabled                  );\n   \n   this.assign(IOCore.sound.channel1, \"CachedDuty\"                      , this.channel1.CachedDuty                 );      \n   this.assign(IOCore.sound.channel1, \"DutyTracker\"                     , this.channel1.DutyTracker                );      \n   this.assign(IOCore.sound.channel1, \"Enabled\"                         , this.channel1.Enabled                    );      \n   this.assign(IOCore.sound.channel1, \"FrequencyCounter\"                , this.channel1.FrequencyCounter           );      \n   this.assign(IOCore.sound.channel1, \"FrequencyTracker\"                , this.channel1.FrequencyTracker           );      \n   this.assign(IOCore.sound.channel1, \"ShadowFrequency\"                 , this.channel1.ShadowFrequency            );      \n   this.assign(IOCore.sound.channel1, \"SweepFault\"                      , this.channel1.SweepFault                 );      \n   this.assign(IOCore.sound.channel1, \"Swept\"                           , this.channel1.Swept                      );      \n   this.assign(IOCore.sound.channel1, \"canPlay\"                         , this.channel1.canPlay                    );      \n   this.assign(IOCore.sound.channel1, \"consecutive\"                     , this.channel1.consecutive                );      \n   this.assign(IOCore.sound.channel1, \"currentSampleLeft\"               , this.channel1.currentSampleLeft          );      \n   this.assign(IOCore.sound.channel1, \"currentSampleRight\"              , this.channel1.currentSampleRight         );      \n   this.assign(IOCore.sound.channel1, \"decreaseSweep\"                   , this.channel1.decreaseSweep              );      \n   this.assign(IOCore.sound.channel1, \"envelopeSweeps\"                  , this.channel1.envelopeSweeps             );      \n   this.assign(IOCore.sound.channel1, \"envelopeSweepsLast\"              , this.channel1.envelopeSweepsLast         );      \n   this.assign(IOCore.sound.channel1, \"envelopeType\"                    , this.channel1.envelopeType               );      \n   this.assign(IOCore.sound.channel1, \"envelopeVolume\"                  , this.channel1.envelopeVolume             );      \n   this.assign(IOCore.sound.channel1, \"frequency\"                       , this.channel1.frequency                  );      \n   this.assign(IOCore.sound.channel1, \"frequencySweepDivider\"           , this.channel1.frequencySweepDivider      );      \n   this.assign(IOCore.sound.channel1, \"lastTimeSweep\"                   , this.channel1.lastTimeSweep              );      \n   this.assign(IOCore.sound.channel1, \"leftEnable\"                      , this.channel1.leftEnable                 );      \n   this.assign(IOCore.sound.channel1, \"nr10\"                            , this.channel1.nr10                       );      \n   this.assign(IOCore.sound.channel1, \"nr11\"                            , this.channel1.nr11                       );      \n   this.assign(IOCore.sound.channel1, \"nr12\"                            , this.channel1.nr12                       );      \n   this.assign(IOCore.sound.channel1, \"nr14\"                            , this.channel1.nr14                       );      \n   this.assign(IOCore.sound.channel1, \"rightEnable\"                     , this.channel1.rightEnable                );      \n   this.assign(IOCore.sound.channel1, \"timeSweep\"                       , this.channel1.timeSweep                  );      \n   this.assign(IOCore.sound.channel1, \"totalLength\"                     , this.channel1.totalLength                );      \n   \n   this.assign(IOCore.sound.channel2, \"CachedDuty\"                      , this.channel2.CachedDuty                 );\n   this.assign(IOCore.sound.channel2, \"DutyTracker\"                     , this.channel2.DutyTracker                );\n   this.assign(IOCore.sound.channel2, \"Enabled\"                         , this.channel2.Enabled                    );\n   this.assign(IOCore.sound.channel2, \"FrequencyCounter\"                , this.channel2.FrequencyCounter           );\n   this.assign(IOCore.sound.channel2, \"FrequencyTracker\"                , this.channel2.FrequencyTracker           );\n   this.assign(IOCore.sound.channel2, \"ShadowFrequency\"                 , this.channel2.ShadowFrequency            );\n   this.assign(IOCore.sound.channel2, \"canPlay\"                         , this.channel2.canPlay                    );\n   this.assign(IOCore.sound.channel2, \"consecutive\"                     , this.channel2.consecutive                );\n   this.assign(IOCore.sound.channel2, \"currentSampleLeft\"               , this.channel2.currentSampleLeft          );\n   this.assign(IOCore.sound.channel2, \"currentSampleRight\"              , this.channel2.currentSampleRight         );\n   this.assign(IOCore.sound.channel2, \"envelopeSweeps\"                  , this.channel2.envelopeSweeps             );\n   this.assign(IOCore.sound.channel2, \"envelopeSweepsLast\"              , this.channel2.envelopeSweepsLast         );\n   this.assign(IOCore.sound.channel2, \"envelopeType\"                    , this.channel2.envelopeType               );\n   this.assign(IOCore.sound.channel2, \"envelopeVolume\"                  , this.channel2.envelopeVolume             );\n   this.assign(IOCore.sound.channel2, \"frequency\"                       , this.channel2.frequency                  );\n   this.assign(IOCore.sound.channel2, \"leftEnable\"                      , this.channel2.leftEnable                 );\n   this.assign(IOCore.sound.channel2, \"nr21\"                            , this.channel2.nr21                       );\n   this.assign(IOCore.sound.channel2, \"nr22\"                            , this.channel2.nr22                       );\n   this.assign(IOCore.sound.channel2, \"nr23\"                            , this.channel2.nr23                       );\n   this.assign(IOCore.sound.channel2, \"nr24\"                            , this.channel2.nr24                       );\n   this.assign(IOCore.sound.channel2, \"rightEnable\"                     , this.channel2.rightEnable                );\n   this.assign(IOCore.sound.channel2, \"totalLength\"                     , this.channel2.totalLength                );\n   \n   this.assign(IOCore.sound.channel3, \"Enabled\"                         , this.channel3.Enabled                    );         \n   this.assign(IOCore.sound.channel3, \"FrequencyPeriod\"                 , this.channel3.FrequencyPeriod            );                 \n   this.assign(IOCore.sound.channel3, \"PCM\"                             , this.channel3.PCM                        );     \n   this.assign(IOCore.sound.channel3, \"WAVERAM8\"                        , this.channel3.WAVERAM8                   );          \n   this.assign(IOCore.sound.channel3, \"WAVERAMBankAccessed\"             , this.channel3.WAVERAMBankAccessed        );                     \n   this.assign(IOCore.sound.channel3, \"WAVERAMBankSpecified\"            , this.channel3.WAVERAMBankSpecified       );                      \n   this.assign(IOCore.sound.channel3, \"WaveRAMBankSize\"                 , this.channel3.WaveRAMBankSize            );                 \n   this.assign(IOCore.sound.channel3, \"cachedSample\"                    , this.channel3.cachedSample               );              \n   this.assign(IOCore.sound.channel3, \"canPlay\"                         , this.channel3.canPlay                    );         \n   this.assign(IOCore.sound.channel3, \"consecutive\"                     , this.channel3.consecutive                );             \n   this.assign(IOCore.sound.channel3, \"counter\"                         , this.channel3.counter                    );         \n   this.assign(IOCore.sound.channel3, \"currentSampleLeft\"               , this.channel3.currentSampleLeft          );                   \n   this.assign(IOCore.sound.channel3, \"currentSampleRight\"              , this.channel3.currentSampleRight         );                    \n   this.assign(IOCore.sound.channel3, \"frequency\"                       , this.channel3.frequency                  );           \n   this.assign(IOCore.sound.channel3, \"lastSampleLookup\"                , this.channel3.lastSampleLookup           );                  \n   this.assign(IOCore.sound.channel3, \"leftEnable\"                      , this.channel3.leftEnable                 );            \n   this.assign(IOCore.sound.channel3, \"nr30\"                            , this.channel3.nr30                       );      \n   this.assign(IOCore.sound.channel3, \"nr31\"                            , this.channel3.nr31                       );      \n   this.assign(IOCore.sound.channel3, \"nr32\"                            , this.channel3.nr32                       );      \n   this.assign(IOCore.sound.channel3, \"nr33\"                            , this.channel3.nr33                       );      \n   this.assign(IOCore.sound.channel3, \"nr34\"                            , this.channel3.nr34                       );      \n   this.assign(IOCore.sound.channel3, \"patternType\"                     , this.channel3.patternType                );             \n   this.assign(IOCore.sound.channel3, \"rightEnable\"                     , this.channel3.rightEnable                );                \n   this.assign(IOCore.sound.channel3, \"totalLength\"                     , this.channel3.totalLength                );          \n   \n   this.assign(IOCore.sound.channel4, \"BitRange\"                        , this.channel4.BitRange                   );\n   this.assign(IOCore.sound.channel4, \"Enabled\"                         , this.channel4.Enabled                    );\n   this.assign(IOCore.sound.channel4, \"FrequencyPeriod\"                 , this.channel4.FrequencyPeriod            );\n   this.assign(IOCore.sound.channel4, \"VolumeShifter\"                   , this.channel4.VolumeShifter              );\n   this.assign(IOCore.sound.channel4, \"cachedSample\"                    , this.channel4.cachedSample               );\n   this.assign(IOCore.sound.channel4, \"canPlay\"                         , this.channel4.canPlay                    );\n   this.assign(IOCore.sound.channel4, \"consecutive\"                     , this.channel4.consecutive                );\n   this.assign(IOCore.sound.channel4, \"counter\"                         , this.channel4.counter                    );\n   this.assign(IOCore.sound.channel4, \"currentSampleLeft\"               , this.channel4.currentSampleLeft          );\n   this.assign(IOCore.sound.channel4, \"currentSampleRight\"              , this.channel4.currentSampleRight         );\n   this.assign(IOCore.sound.channel4, \"currentVolume\"                   , this.channel4.currentVolume              );\n   this.assign(IOCore.sound.channel4, \"envelopeSweeps\"                  , this.channel4.envelopeSweeps             );\n   this.assign(IOCore.sound.channel4, \"envelopeSweepsLast\"              , this.channel4.envelopeSweepsLast         );\n   this.assign(IOCore.sound.channel4, \"envelopeType\"                    , this.channel4.envelopeType               );\n   this.assign(IOCore.sound.channel4, \"envelopeVolume\"                  , this.channel4.envelopeVolume             );\n   this.assign(IOCore.sound.channel4, \"lastSampleLookup\"                , this.channel4.lastSampleLookup           );\n   this.assign(IOCore.sound.channel4, \"leftEnable\"                      , this.channel4.leftEnable                 );\n   this.assign(IOCore.sound.channel4, \"noiseSampleTable\"                , this.channel4.noiseSampleTable           );\n   this.assign(IOCore.sound.channel4, \"nr42\"                            , this.channel4.nr42                       );\n   this.assign(IOCore.sound.channel4, \"nr43\"                            , this.channel4.nr43                       );\n   this.assign(IOCore.sound.channel4, \"nr44\"                            , this.channel4.nr44                       );\n   this.assign(IOCore.sound.channel4, \"rightEnable\"                     , this.channel4.rightEnable                );\n   this.assign(IOCore.sound.channel4, \"totalLength\"                     , this.channel4.totalLength                );\n   \n   this.assign(IOCore.sound.FIFOABuffer, \"buffer\"                       , this.FIFOA.buffer                        );   \n   this.assign(IOCore.sound.FIFOABuffer, \"count\"                        , this.FIFOA.count                         );   \n   this.assign(IOCore.sound.FIFOABuffer, \"position\"                     , this.FIFOA.position                      ); \n   \n   this.assign(IOCore.sound.FIFOBBuffer, \"buffer\"                       , this.FIFOB.buffer                        );   \n   this.assign(IOCore.sound.FIFOBBuffer, \"count\"                        , this.FIFOB.count                         );   \n   this.assign(IOCore.sound.FIFOBBuffer, \"position\"                     , this.FIFOB.position                      );    \n\n   /* Serial */\n   this.assign(IOCore.serial, \"JOYBUS_CNTL_FLAGS\"        , this.JOYBUS_CNTL_FLAGS        );\n   this.assign(IOCore.serial, \"JOYBUS_IRQ\"               , this.JOYBUS_IRQ               );\n   this.assign(IOCore.serial, \"JOYBUS_RECV0\"             , this.JOYBUS_RECV0             );\n   this.assign(IOCore.serial, \"JOYBUS_RECV1\"             , this.JOYBUS_RECV1             );\n   this.assign(IOCore.serial, \"JOYBUS_RECV2\"             , this.JOYBUS_RECV2             );\n   this.assign(IOCore.serial, \"JOYBUS_RECV3\"             , this.JOYBUS_RECV3             );\n   this.assign(IOCore.serial, \"JOYBUS_SEND0\"             , this.JOYBUS_SEND0             );\n   this.assign(IOCore.serial, \"JOYBUS_SEND1\"             , this.JOYBUS_SEND1             );\n   this.assign(IOCore.serial, \"JOYBUS_SEND2\"             , this.JOYBUS_SEND2             );\n   this.assign(IOCore.serial, \"JOYBUS_SEND3\"             , this.JOYBUS_SEND3             );\n   this.assign(IOCore.serial, \"JOYBUS_STAT\"              , this.JOYBUS_STAT              );\n   this.assign(IOCore.serial, \"RCNTDataBitFlow\"          , this.RCNTDataBitFlow          );\n   this.assign(IOCore.serial, \"RCNTDataBits\"             , this.RCNTDataBits             );\n   this.assign(IOCore.serial, \"RCNTIRQ\"                  , this.RCNTIRQ                  );\n   this.assign(IOCore.serial, \"RCNTMode\"                 , this.RCNTMode                 );\n   this.assign(IOCore.serial, \"SIOBaudRate\"              , this.SIOBaudRate              );\n   this.assign(IOCore.serial, \"SIOCNT0_DATA\"             , this.SIOCNT0_DATA             );\n   this.assign(IOCore.serial, \"SIOCNT_IRQ\"               , this.SIOCNT_IRQ               );\n   this.assign(IOCore.serial, \"SIOCNT_MODE\"              , this.SIOCNT_MODE              );\n   this.assign(IOCore.serial, \"SIOCNT_UART_CTS\"          , this.SIOCNT_UART_CTS          );\n   this.assign(IOCore.serial, \"SIOCNT_UART_FIFO\"         , this.SIOCNT_UART_FIFO         );\n   this.assign(IOCore.serial, \"SIOCNT_UART_FIFO_ENABLE\"  , this.SIOCNT_UART_FIFO_ENABLE  );\n   this.assign(IOCore.serial, \"SIOCNT_UART_MISC\"         , this.SIOCNT_UART_MISC         );\n   this.assign(IOCore.serial, \"SIOCNT_UART_PARITY_ENABLE\", this.SIOCNT_UART_PARITY_ENABLE);\n   this.assign(IOCore.serial, \"SIOCNT_UART_RECV_ENABLE\"  , this.SIOCNT_UART_RECV_ENABLE  );\n   this.assign(IOCore.serial, \"SIOCNT_UART_SEND_ENABLE\"  , this.SIOCNT_UART_SEND_ENABLE  );\n   this.assign(IOCore.serial, \"SIOCOMMERROR\"             , this.SIOCOMMERROR             );\n   this.assign(IOCore.serial, \"SIODATA8\"                 , this.SIODATA8                 );\n   this.assign(IOCore.serial, \"SIODATA_A\"                , this.SIODATA_A                );\n   this.assign(IOCore.serial, \"SIODATA_B\"                , this.SIODATA_B                );\n   this.assign(IOCore.serial, \"SIODATA_C\"                , this.SIODATA_C                );\n   this.assign(IOCore.serial, \"SIODATA_D\"                , this.SIODATA_D                );\n   this.assign(IOCore.serial, \"SIOMULT_PLAYER_NUMBER\"    , this.SIOMULT_PLAYER_NUMBER    );\n   this.assign(IOCore.serial, \"SIOShiftClockDivider\"     , this.SIOShiftClockDivider     );\n   this.assign(IOCore.serial, \"SIOShiftClockExternal\"    , this.SIOShiftClockExternal    );\n   this.assign(IOCore.serial, \"SIOTransferStarted\"       , this.SIOTransferStarted       );\n   this.assign(IOCore.serial, \"serialBitsShifted\"        , this.serialBitsShifted        );\n   this.assign(IOCore.serial, \"shiftClocks\"              , this.shiftClocks              );\n\n   /* Save */\n   this.assign(IOCore.saves    , \"saveType\"     ,this.saveType);\n   // TODO: switch reference to saveType?\n\n   this.assign(IOCore.saves.GPIOChip, \"data\"      , this.GPIOChip.data     );      \n   this.assign(IOCore.saves.GPIOChip, \"direction\" , this.GPIOChip.direction);           \n   this.assign(IOCore.saves.GPIOChip, \"readWrite\" , this.GPIOChip.readWrite);           \n   this.assign(IOCore.saves.GPIOChip, \"type\"      , this.GPIOChip.type     );      \n\n   this.assign(IOCore.saves.GPIOChip.rtc, \"pins\"           , this.GPIOChip.RTC.pins          );\n   this.assign(IOCore.saves.GPIOChip.rtc, \"direction\"      , this.GPIOChip.RTC.direction     );\n   this.assign(IOCore.saves.GPIOChip.rtc, \"totalBytes\"     , this.GPIOChip.RTC.totalBytes    );\n   this.assign(IOCore.saves.GPIOChip.rtc, \"bytesRemaining\" , this.GPIOChip.RTC.bytesRemaining);\n   this.assign(IOCore.saves.GPIOChip.rtc, \"transferStep\"   , this.GPIOChip.RTC.transferStep  );\n   this.assign(IOCore.saves.GPIOChip.rtc, \"reading\"        , this.GPIOChip.RTC.reading       );\n   this.assign(IOCore.saves.GPIOChip.rtc, \"bitsRead\"       , this.GPIOChip.RTC.bitsRead      );\n   this.assign(IOCore.saves.GPIOChip.rtc, \"bits\"           , this.GPIOChip.RTC.bits          );\n   this.assign(IOCore.saves.GPIOChip.rtc, \"command\"        , this.GPIOChip.RTC.command       );\n   this.assign(IOCore.saves.GPIOChip.rtc, \"control\"        , this.GPIOChip.RTC.control       );\n   this.assign(IOCore.saves.GPIOChip.rtc, \"time\"           , this.GPIOChip.RTC.time          );\n\n   this.assign(IOCore.saves.UNDETERMINED, \"saves\"   , this.UNDETERMINED.saves   );\n   this.assign(IOCore.saves.UNDETERMINED, \"possible\", this.UNDETERMINED.possible);\n\n   this.assign(IOCore.saves.SRAMChip, \"TILTChip\"         , this.SRAMChip.TILTChip        );\n   this.assign(IOCore.saves.SRAMChip, \"TILTChipUnlocked\" , this.SRAMChip.TILTChipUnlocked);\n   this.assign(IOCore.saves.SRAMChip, \"saves\"            , this.SRAMChip.saves           );\n\n   this.assign(IOCore.saves.FLASHChip, \"BANKOffset\"             , this.FLASHChip.BANKOffset             );    \n   this.assign(IOCore.saves.FLASHChip, \"flashCommand\"           , this.FLASHChip.flashCommand           );    \n   this.assign(IOCore.saves.FLASHChip, \"flashCommandUnlockStage\", this.FLASHChip.flashCommandUnlockStage);    \n   this.assign(IOCore.saves.FLASHChip, \"largestSizePossible\"    , this.FLASHChip.largestSizePossible    );    \n   this.assign(IOCore.saves.FLASHChip, \"notATMEL\"               , this.FLASHChip.notATMEL               );    \n   this.assign(IOCore.saves.FLASHChip, \"saves\"                  , this.FLASHChip.saves                  );         \n   this.assign(IOCore.saves.FLASHChip, \"writeBytesLeft\"         , this.FLASHChip.writeBytesLeft         );    \n\n   this.assign(IOCore.saves.EEPROMChip, \"address\"             , this.EEPROMChip.address            );    \n   this.assign(IOCore.saves.EEPROMChip, \"bitsProcessed\"       , this.EEPROMChip.bitsProcessed      );          \n   this.assign(IOCore.saves.EEPROMChip, \"buffer\"              , this.EEPROMChip.buffer             );   \n   this.assign(IOCore.saves.EEPROMChip, \"largestSizePossible\" , this.EEPROMChip.largestSizePossible);                \n   this.assign(IOCore.saves.EEPROMChip, \"mode\"                , this.EEPROMChip.mode               ); \n   this.assign(IOCore.saves.EEPROMChip, \"saves\"               , this.EEPROMChip.saves              );  \n}\n\n\nfunction MultiSaveState(slot, currentRom, newSave) {\n    \n    if (currentRom == \"FR\") {\n\n        this.frSave = {} \n        Object.assign(this.frSave, newSave);\n\n\n        this.cSave  = {}\n        Object.assign(this.cSave, slot[\"C\"]);\n        this.cSave.assign = undefined;\n        this.cSave.load = undefined;\n\n\n        this.eSave  = {}\n        Object.assign(this.eSave, slot[\"E\"]);\n        this.eSave.assign = undefined;\n        this.eSave.load = undefined;\n\n    } else if (currentRom == \"C\") {\n\n        this.frSave  = {}\n        Object.assign(this.frSave, slot[\"FR\"]);\n        this.frSave.assign = undefined;\n        this.frSave.load = undefined;\n\n        this.cSave = {} \n        Object.assign(this.cSave, newSave);\n\n\n        this.eSave  = {}\n        Object.assign(this.eSave, slot[\"E\"]);\n        this.eSave.assign = undefined;\n        this.eSave.load = undefined;\n\n    } else if (currentRom == \"E\") {\n\n        this.frSave  = {}\n        Object.assign(this.frSave, slot[\"FR\"]);\n        this.frSave.assign = undefined;\n        this.frSave.load = undefined;\n\n        this.cSave  = {}\n        Object.assign(this.cSave, slot[\"C\"]);\n        this.cSave.assign = undefined;\n        this.cSave.load = undefined;\n\n        this.eSave = {} \n        Object.assign(this.eSave, newSave);\n    }\n    \n    this.romCode = currentRom;\n    this.preview = createPreviewImage();\n}\n\nMultiSaveState.prototype.getSlot = function(slot) {\n    let saveState = {};\n    if (slot == \"FR\") {\n        Object.assign(saveState, this.frSave);\n    } else if (slot == \"C\") {\n        Object.assign(saveState, this.cSave);\n    }\n    else if (slot == \"E\") {\n        Object.assign(saveState, this.eSave);\n    }\n    saveState.assign = SaveState.prototype.assign;\n    saveState.load = SaveState.prototype.load;\n    return saveState;\n}\n\nfunction createPreviewImage() {\n    let canvas = document.createElement('canvas');\n    canvas.width = 160;\n    canvas.height = 160;\n    let ctx = canvas.getContext('2d');\n    ctx.drawImage(document.getElementById(\"emulator_target\"), 0, 0, 160, 160);\n    return canvas.toDataURL('image/jpeg', 0.4);\n}\n"],"names":["SaveStateManager","Iodine","this","slot","initStoredStates","ROM_CODES","lastLoaded","SaveState","IOCore","warping","romCode","structuredClone","cartridge","accumulatedClocks","cyclesOveriteratedPreviously","cyclesToIterate","graphicsClocks","nextEventClocks","systemStatus","timerClocks","internalRAM","memory","externalRAM","WRAMControlFlags","lastBIOSREAD","dma","currentMatch","fetch","dma0","destination","dmaChannel0","destinationControl","destinationShadow","dmaType","enabled","irqFlagging","is32Bit","pending","repeat","source","sourceControl","sourceShadow","wordCount","wordCountShadow","dma1","dmaChannel1","dma2","dmaChannel2","dma3","dmaChannel3","displaySyncEnableDelay","gamePakDMA","registers","cpu","registersUSR","registersFIQ","registersSVC","registersABT","registersIRQ","registersUND","modeFlags","SPSR","mul64ResultHigh","mul64ResultLow","triggeredIRQ","THUMB","decode","execute","ARM","timer0Counter","timer","timer0Reload","timer0Control","timer0Enabled","timer0IRQ","timer0Precounter","timer0Prescalar","timer0PrescalarShifted","timer1Counter","timer1Reload","timer1Control","timer1Enabled","timer1IRQ","timer1Precounter","timer1Prescalar","timer1PrescalarShifted","timer1CountUp","timer2Counter","timer2Reload","timer2Control","timer2Enabled","timer2IRQ","timer2Precounter","timer2Prescalar","timer2PrescalarShifted","timer2CountUp","timer3Counter","timer3Reload","timer3Control","timer3Enabled","timer3IRQ","timer3Precounter","timer3Prescalar","timer3PrescalarShifted","timer3CountUp","timer1UseMainClocks","timer1UseChainedClocks","timer2UseMainClocks","timer2UseChainedClocks","timer3UseMainClocks","timer3UseChainedClocks","WRAMConfiguration","wait","WRAMWaitState","SRAMWaitState","WAITCNT0","WAITCNT1","POSTBOOT","isRendering","isOAMRendering","nonSequential","buffer","clocks","SIODATA_A","serial","SIODATA_B","SIODATA_C","SIODATA_D","SIOShiftClockExternal","SIOShiftClockDivider","SIOCNT0_DATA","SIOTransferStarted","SIOMULT_PLAYER_NUMBER","SIOCOMMERROR","SIOBaudRate","SIOCNT_UART_CTS","SIOCNT_UART_MISC","SIOCNT_UART_FIFO","SIOCNT_IRQ","SIOCNT_MODE","SIOCNT_UART_RECV_ENABLE","SIOCNT_UART_SEND_ENABLE","SIOCNT_UART_PARITY_ENABLE","SIOCNT_UART_FIFO_ENABLE","SIODATA8","RCNTMode","RCNTIRQ","RCNTDataBits","RCNTDataBitFlow","JOYBUS_IRQ","JOYBUS_CNTL_FLAGS","JOYBUS_RECV0","JOYBUS_RECV1","JOYBUS_RECV2","JOYBUS_RECV3","JOYBUS_SEND0","JOYBUS_SEND1","JOYBUS_SEND2","JOYBUS_SEND3","JOYBUS_STAT","shiftClocks","serialBitsShifted","serialClocks","interruptsEnabled","irq","interruptsRequested","IME","renderedScanLine","gfxState","statusFlags","IRQFlags","VCounter","currentScanLine","LCDTicks","IOData8","gfxRenderer","renderer","displayControl","display","greenSwap","WINOutside","paletteRAM","VRAM","frameBuffer","swizzledFrame","totalLinesPassed","queuedScanLines","lastUnrenderedLine","backdrop","palette256","paletteOBJ256","palette16","paletteOBJ16","lineBuffer","compositor","doEffects","bg0Renderer","BGCharacterBaseBlock","BGLayer","BGScreenBaseBlock","BGXCoord","BGYCoord","do256","doMosaic","offset","priorityFlag","tileFetched","tileMode","bg1Renderer","bg2TextRenderer","bg3TextRenderer","bgAffineRenderer0","BGReferenceX","BGReferenceY","BGdmx","BGdmy","BGdx","BGdy","pb","pd","bgAffineRenderer1","bg2FrameBufferRenderer","frameSelect","bg2MatrixRenderer","BGDisplayOverflow","mapSize","mapSizeComparer","bg3MatrixRenderer","colorEffectsRenderer","alphaBlendAmountTarget1","alphaBlendAmountTarget2","brightnessEffectAmount","colorEffectsType","effectsTarget1","effectsTarget2","mosaicRenderer","BGMosaicHSize","BGMosaicVSize","OBJMosaicHSize","OBJMosaicVSize","objRenderer","cyclesToRender","OAMRAM","scratchBuffer","scratchWindowBuffer","scratchOBJBuffer","OBJMatrixParameters","objWindowRenderer","WINOBJOutside","window0Renderer","WINXCoordLeft","WINXCoordRight","WINYCoordBottom","WINYCoordTop","windowDisplayControl","window1Renderer","AGBDirectSoundA","sound","AGBDirectSoundAFolded","AGBDirectSoundALeftCanPlay","AGBDirectSoundARightCanPlay","AGBDirectSoundAShifter","AGBDirectSoundATimer","AGBDirectSoundB","AGBDirectSoundBFolded","AGBDirectSoundBLeftCanPlay","AGBDirectSoundBRightCanPlay","AGBDirectSoundBShifter","AGBDirectSoundBTimer","CGBMixerOutputCacheLeft","CGBMixerOutputCacheLeftFolded","CGBMixerOutputCacheRight","CGBMixerOutputCacheRightFolded","CGBOutputRatio","PWMBitDepthMask","PWMBitDepthMaskShadow","PWMWidth","PWMWidthOld","PWMWidthShadow","VinLeftChannelMasterVolume","VinRightChannelMasterVolume","audioClocksUntilNextEvent","audioClocksUntilNextEventCounter","audioIndex","audioResamplerFirstPassFactor","audioTicks","downsampleInputLeft","downsampleInputRight","mixerOutputCacheLeft","mixerOutputCacheRight","mixerSoundBIAS","nr50","nr51","nr52","nr60","nr61","nr62","nr63","sequencePosition","sequencerClocks","soundMasterEnabled","channel1","CachedDuty","DutyTracker","Enabled","FrequencyCounter","FrequencyTracker","ShadowFrequency","SweepFault","Swept","canPlay","consecutive","currentSampleLeft","currentSampleRight","decreaseSweep","envelopeSweeps","envelopeSweepsLast","envelopeType","envelopeVolume","frequency","frequencySweepDivider","lastTimeSweep","leftEnable","nr10","nr11","nr12","nr14","rightEnable","timeSweep","totalLength","channel2","nr21","nr22","nr23","nr24","channel3","FrequencyPeriod","PCM","WAVERAM8","WAVERAMBankAccessed","WAVERAMBankSpecified","WaveRAMBankSize","cachedSample","counter","lastSampleLookup","nr30","nr31","nr32","nr33","nr34","patternType","channel4","BitRange","VolumeShifter","currentVolume","noiseSampleTable","nr42","nr43","nr44","FIFOA","FIFOABuffer","count","position","FIFOB","FIFOBBuffer","saveType","saves","GPIOChip","data","direction","readWrite","type","RTC","pins","rtc","totalBytes","bytesRemaining","transferStep","reading","bitsRead","bits","command","control","time","UNDETERMINED","possible","SRAMChip","TILTChip","TILTChipUnlocked","FLASHChip","BANKOffset","flashCommand","flashCommandUnlockStage","largestSizePossible","notATMEL","writeBytesLeft","EEPROMChip","address","bitsProcessed","mode","MultiSaveState","currentRom","newSave","frSave","Object","assign","cSave","undefined","load","eSave","preview","createPreviewImage","canvas","document","createElement","width","height","getContext","drawImage","getElementById","toDataURL","prototype","saveState","playing","emulatorStatus","pause","storageManager","persist","play","loadState","isAutosave","speed","IodineGUI","getSpeed","isWarping","reverseNextWarp","volume","audio","setSpeed","async","CommandExecutor","delay","fixSpeed","slots","forEach","save","find","saveMultiState","currentState","multiSave","loadMultiState","callback","then","s","getSlot","target","name","value"],"version":3,"file":"build-index.6c88a7a9.js.map"}