{"mappings":"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","sources":["dist/IodineGBA/core/sound/Channel1.js"],"sourcesContent":["\"use strict\";\n/*\n Copyright (C) 2012-2015 Grant Galitz\n \n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n \n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n \n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction GameBoyAdvanceChannel1Synth(sound) {\n    this.sound = sound;\n    this.currentSampleLeft = 0;\n    this.currentSampleRight = 0;\n    this.SweepFault = false;\n    this.lastTimeSweep = 0;\n    this.timeSweep = 0;\n    this.frequencySweepDivider = 0;\n    this.decreaseSweep = false;\n    this.nr11 = 0;\n    this.CachedDuty = 0xF0000000;\n    this.totalLength = 0x40;\n    this.nr12 = 0;\n    this.envelopeVolume = 0;\n    this.frequency = 0;\n    this.FrequencyTracker = 0x8000;\n    this.nr14 = 0;\n    this.consecutive = true;\n    this.ShadowFrequency = 0x8000;\n    this.canPlay = false;\n    this.Enabled = 0;\n    this.envelopeSweeps = 0;\n    this.envelopeSweepsLast = -1;\n    this.FrequencyCounter = 0;\n    this.DutyTracker = 0;\n    this.Swept = false;\n    this.leftEnable = 0;\n    this.rightEnable = 0;\n}\nGameBoyAdvanceChannel1Synth.prototype.disabled = function () {\n    //Clear NR10:\n    this.nr10 = 0;\n    this.SweepFault = false;\n    this.lastTimeSweep = 0;\n    this.timeSweep = 0;\n    this.frequencySweepDivider = 0;\n    this.decreaseSweep = false;\n    //Clear NR11:\n    this.nr11 = 0;\n    this.CachedDuty = 0xF0000000;\n    this.totalLength = 0x40;\n    //Clear NR12:\n    this.nr12 = 0;\n    this.envelopeVolume = 0;\n    //Clear NR13:\n    this.frequency = 0;\n    this.FrequencyTracker = 0x8000;\n    //Clear NR14:\n    this.nr14 = 0;\n    this.consecutive = true;\n    this.ShadowFrequency = 0x8000;\n    this.canPlay = false;\n    this.Enabled = 0;\n    this.envelopeSweeps = 0;\n    this.envelopeSweepsLast = -1;\n    this.FrequencyCounter = 0;\n    this.DutyTracker = 0;\n}\nGameBoyAdvanceChannel1Synth.prototype.clockAudioLength = function () {\n    if ((this.totalLength | 0) > 1) {\n        this.totalLength = ((this.totalLength | 0) - 1) | 0;\n    }\n    else if ((this.totalLength | 0) == 1) {\n        this.totalLength = 0;\n        this.enableCheck();\n        this.sound.unsetNR52(0xFE);    //Channel #1 On Flag Off\n    }\n}\nGameBoyAdvanceChannel1Synth.prototype.enableCheck = function () {\n    if ((this.consecutive || (this.totalLength | 0) > 0) && !this.SweepFault && this.canPlay) {\n        this.Enabled = 0xF;\n    }\n    else {\n        this.Enabled = 0;\n    }\n}\nGameBoyAdvanceChannel1Synth.prototype.volumeEnableCheck = function () {\n    this.canPlay = ((this.nr12 | 0) > 7);\n    this.enableCheck();\n}\nGameBoyAdvanceChannel1Synth.prototype.outputLevelCache = function () {\n    var duty = this.CachedDuty >> (this.DutyTracker | 0);\n    var envelopeVolume = this.envelopeVolume & this.Enabled & duty;\n    this.currentSampleLeft = this.leftEnable & envelopeVolume;\n    this.currentSampleRight = this.rightEnable & envelopeVolume;\n}\nGameBoyAdvanceChannel1Synth.prototype.setChannelOutputEnable = function (data) {\n    data = data | 0;\n    //Set by NR51 handler:\n    this.rightEnable = (data << 31) >> 31;\n    this.leftEnable = (data << 27) >> 31;\n}\nGameBoyAdvanceChannel1Synth.prototype.clockAudioSweep = function () {\n    //Channel 1:\n    if (!this.SweepFault && (this.timeSweep | 0) > 0) {\n        this.timeSweep = ((this.timeSweep | 0) - 1) | 0\n        if ((this.timeSweep | 0) == 0) {\n            this.runAudioSweep();\n        }\n    }\n}\nGameBoyAdvanceChannel1Synth.prototype.runAudioSweep = function () {\n    //Channel 1:\n    if ((this.lastTimeSweep | 0) > 0) {\n        if ((this.frequencySweepDivider | 0) > 0) {\n            this.Swept = true;\n            if (this.decreaseSweep) {\n                this.ShadowFrequency = ((this.ShadowFrequency | 0) - (this.ShadowFrequency >> (this.frequencySweepDivider | 0))) | 0;\n                this.frequency = this.ShadowFrequency & 0x7FF;\n                this.FrequencyTracker = (0x800 - (this.frequency | 0)) << 4;\n            }\n            else {\n                this.ShadowFrequency = ((this.ShadowFrequency | 0) + (this.ShadowFrequency >> (this.frequencySweepDivider | 0))) | 0;\n                this.frequency = this.ShadowFrequency | 0;\n                if ((this.ShadowFrequency | 0) <= 0x7FF) {\n                    this.FrequencyTracker = (0x800 - (this.frequency | 0)) << 4;\n                    //Run overflow check twice:\n                    if ((((this.ShadowFrequency | 0) + (this.ShadowFrequency >> (this.frequencySweepDivider | 0))) | 0) > 0x7FF) {\n                        this.SweepFault = true;\n                        this.enableCheck();\n                        this.sound.unsetNR52(0xFE);    //Channel #1 On Flag Off\n                    }\n                }\n                else {\n                    this.frequency &= 0x7FF;\n                    this.SweepFault = true;\n                    this.enableCheck();\n                    this.sound.unsetNR52(0xFE);    //Channel #1 On Flag Off\n                }\n            }\n            this.timeSweep = this.lastTimeSweep | 0;\n        }\n        else {\n            //Channel has sweep disabled and timer becomes a length counter:\n            this.SweepFault = true;\n            this.enableCheck();\n        }\n    }\n}\nGameBoyAdvanceChannel1Synth.prototype.audioSweepPerformDummy = function () {\n    //Channel 1:\n    if ((this.frequencySweepDivider | 0) > 0) {\n        if (!this.decreaseSweep) {\n            var channel1ShadowFrequency = ((this.ShadowFrequency | 0) + (this.ShadowFrequency >> (this.frequencySweepDivider | 0))) | 0;\n            if ((channel1ShadowFrequency | 0) <= 0x7FF) {\n                //Run overflow check twice:\n                if ((((channel1ShadowFrequency | 0) + (channel1ShadowFrequency >> (this.frequencySweepDivider | 0))) | 0) > 0x7FF) {\n                    this.SweepFault = true;\n                    this.enableCheck();\n                    this.sound.unsetNR52(0xFE);    //Channel #1 On Flag Off\n                }\n            }\n            else {\n                this.SweepFault = true;\n                this.enableCheck();\n                this.sound.unsetNR52(0xFE);    //Channel #1 On Flag Off\n            }\n        }\n    }\n}\nGameBoyAdvanceChannel1Synth.prototype.clockAudioEnvelope = function () {\n    if ((this.envelopeSweepsLast | 0) > -1) {\n        if ((this.envelopeSweeps | 0) > 0) {\n            this.envelopeSweeps = ((this.envelopeSweeps | 0) - 1) | 0;\n        }\n        else {\n            if (!this.envelopeType) {\n                if ((this.envelopeVolume | 0) > 0) {\n                    this.envelopeVolume = ((this.envelopeVolume | 0) - 1) | 0;\n                    this.envelopeSweeps = this.envelopeSweepsLast | 0;\n                }\n                else {\n                    this.envelopeSweepsLast = -1;\n                }\n            }\n            else if ((this.envelopeVolume | 0) < 0xF) {\n                this.envelopeVolume = ((this.envelopeVolume | 0) + 1) | 0;\n                this.envelopeSweeps = this.envelopeSweepsLast | 0;\n            }\n            else {\n                this.envelopeSweepsLast = -1;\n            }\n        }\n    }\n}\nGameBoyAdvanceChannel1Synth.prototype.computeAudioChannel = function () {\n    if ((this.FrequencyCounter | 0) == 0) {\n        this.FrequencyCounter = this.FrequencyTracker | 0;\n        this.DutyTracker = ((this.DutyTracker | 0) + 4) & 0x1C;\n    }\n}\nGameBoyAdvanceChannel1Synth.prototype.readSOUND1CNT8_0 = function () {\n    //NR10:\n    return this.nr10 | 0;\n}\nGameBoyAdvanceChannel1Synth.prototype.writeSOUND1CNT8_0 = function (data) {\n    data = data | 0;\n    //NR10:\n    if (this.decreaseSweep && (data & 0x08) == 0) {\n        if (this.Swept) {\n            this.SweepFault = true;\n        }\n    }\n    this.lastTimeSweep = (data & 0x70) >> 4;\n    this.frequencySweepDivider = data & 0x07;\n    this.decreaseSweep = ((data & 0x08) != 0);\n    this.nr10 = data & 0xFF;\n    this.enableCheck();\n}\nGameBoyAdvanceChannel1Synth.prototype.readSOUND1CNT8_2 = function () {\n    //NR11:\n    return this.nr11 | 0;\n}\nGameBoyAdvanceChannel1Synth.prototype.writeSOUND1CNT8_2 = function (data) {\n    data = data | 0;\n    //NR11:\n    switch ((data >> 6) & 0x3) {\n        case 0:\n            this.CachedDuty = 0xF0000000;\n            break;\n        case 1:\n            this.CachedDuty = 0xF000000F;\n            break;\n        case 2:\n            this.CachedDuty = 0xFFF0000F;\n            break;\n        default:\n            this.CachedDuty = 0x0FFFFFF0;\n    }\n    this.totalLength = (0x40 - (data & 0x3F)) | 0;\n    this.nr11 = data & 0xFF;\n    this.enableCheck();\n}\nGameBoyAdvanceChannel1Synth.prototype.readSOUND1CNT8_3 = function () {\n    //NR12:\n    return this.nr12 | 0;\n}\nGameBoyAdvanceChannel1Synth.prototype.writeSOUND1CNT8_3 = function (data) {\n    data = data | 0;\n    //NR12:\n    this.envelopeType = ((data & 0x08) != 0);\n    this.nr12 = data & 0xFF;\n    this.volumeEnableCheck();\n}\nGameBoyAdvanceChannel1Synth.prototype.writeSOUND1CNT_X0 = function (data) {\n    data = data | 0;\n    //NR13:\n    this.frequency = (this.frequency & 0x700) | (data & 0xFF);\n    this.FrequencyTracker = (0x800 - (this.frequency | 0)) << 4;\n}\nGameBoyAdvanceChannel1Synth.prototype.readSOUND1CNTX8 = function () {\n    //NR14:\n    return this.nr14 | 0;\n}\nGameBoyAdvanceChannel1Synth.prototype.writeSOUND1CNT_X1 = function (data) {\n    data = data | 0;\n    //NR14:\n    this.consecutive = ((data & 0x40) == 0);\n    this.frequency = ((data & 0x7) << 8) | (this.frequency & 0xFF);\n    this.FrequencyTracker = (0x800 - (this.frequency | 0)) << 4;\n    if ((data & 0x80) != 0) {\n        //Reload nr10:\n        this.timeSweep = this.lastTimeSweep | 0;\n        this.Swept = false;\n        //Reload nr12:\n        this.envelopeVolume = this.nr12 >> 4;\n        this.envelopeSweepsLast = ((this.nr12 & 0x7) - 1) | 0;\n        if ((this.totalLength | 0) == 0) {\n            this.totalLength = 0x40;\n        }\n        if ((this.lastTimeSweep | 0) > 0 || (this.frequencySweepDivider | 0) > 0) {\n            this.sound.setNR52(0x1);\n        }\n        else {\n            this.sound.unsetNR52(0xFE);\n        }\n        if ((data & 0x40) != 0) {\n            this.sound.setNR52(0x1);\n        }\n        this.ShadowFrequency = this.frequency | 0;\n        //Reset frequency overflow check + frequency sweep type check:\n        this.SweepFault = false;\n        //Supposed to run immediately:\n        this.audioSweepPerformDummy();\n    }\n    this.enableCheck();\n    this.nr14 = data & 0xFF;\n}"],"names":["GameBoyAdvanceChannel1Synth","sound","this","currentSampleLeft","currentSampleRight","SweepFault","lastTimeSweep","timeSweep","frequencySweepDivider","decreaseSweep","nr11","CachedDuty","totalLength","nr12","envelopeVolume","frequency","FrequencyTracker","nr14","consecutive","ShadowFrequency","canPlay","Enabled","envelopeSweeps","envelopeSweepsLast","FrequencyCounter","DutyTracker","Swept","leftEnable","rightEnable","prototype","disabled","nr10","clockAudioLength","enableCheck","unsetNR52","volumeEnableCheck","outputLevelCache","duty","setChannelOutputEnable","data","clockAudioSweep","runAudioSweep","audioSweepPerformDummy","channel1ShadowFrequency","clockAudioEnvelope","envelopeType","computeAudioChannel","readSOUND1CNT8_0","writeSOUND1CNT8_0","readSOUND1CNT8_2","writeSOUND1CNT8_2","readSOUND1CNT8_3","writeSOUND1CNT8_3","writeSOUND1CNT_X0","readSOUND1CNTX8","writeSOUND1CNT_X1","setNR52"],"version":3,"file":"build-index.e60b7906.js.map"}