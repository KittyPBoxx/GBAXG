{"mappings":"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","sources":["dist/IodineGBA/core/graphics/OBJ.js"],"sourcesContent":["\"use strict\";\n/*\n Copyright (C) 2012-2015 Grant Galitz\n\n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction GameBoyAdvanceOBJRenderer(gfx) {\n    this.gfx = gfx;\n}\nGameBoyAdvanceOBJRenderer.prototype.lookupXSize = [\n    //Square:\n    8,  16, 32, 64,\n    //Vertical Rectangle:\n    16, 32, 32, 64,\n    //Horizontal Rectangle:\n    8,   8, 16, 32\n];\nGameBoyAdvanceOBJRenderer.prototype.lookupYSize = [\n    //Square:\n    8,  16, 32, 64,\n    //Vertical Rectangle:\n    8,   8, 16, 32,\n    //Horizontal Rectangle:\n    16, 32, 32, 64\n];\nif (__VIEWS_SUPPORTED__) {\n    if (typeof getUint8Array(1).fill == \"function\") {\n        GameBoyAdvanceOBJRenderer.prototype.initialize = function () {\n            this.paletteOBJ256 = this.gfx.paletteOBJ256;\n            this.paletteOBJ16 = this.gfx.paletteOBJ16;\n            this.VRAM = this.gfx.VRAM;\n            this.cyclesToRender = 1210;\n            this.VRAM32 = this.gfx.VRAM32;\n            this.OAMRAM = getUint8Array(0x400);\n            this.OAMRAM16 = getUint16View(this.OAMRAM);\n            this.OAMRAM32 = getInt32View(this.OAMRAM);\n            this.scratchBuffer = getInt32ViewCustom(this.gfx.buffer, 0x500, 0x5F0);\n            this.scratchWindowBuffer = getInt32Array(240);\n            this.scratchOBJBuffer = getInt32ViewCustom(this.gfx.buffer, 0x600, 0x680);\n            this.OBJMatrixParameters = getInt32Array(0x80);\n            this.initializeOAMTable();\n        }\n        GameBoyAdvanceOBJRenderer.prototype.clearScratch = function () {\n            this.scratchBuffer.fill(0x3800000);\n            this.scratchWindowBuffer.fill(0x3800000);\n        }\n    }\n    else {\n        GameBoyAdvanceOBJRenderer.prototype.initialize = function () {\n            this.paletteOBJ256 = this.gfx.paletteOBJ256;\n            this.paletteOBJ16 = this.gfx.paletteOBJ16;\n            this.VRAM = this.gfx.VRAM;\n            this.cyclesToRender = 1210;\n            this.VRAM32 = this.gfx.VRAM32;\n            this.OAMRAM = getUint8Array(0x400);\n            this.OAMRAM16 = getUint16View(this.OAMRAM);\n            this.OAMRAM32 = getInt32View(this.OAMRAM);\n            this.scratchBuffer = getInt32ViewCustom(this.gfx.buffer, 0x500, 0x5F0);\n            this.scratchWindowBuffer = getInt32Array(240);\n            this.scratchOBJBuffer = getInt32ViewCustom(this.gfx.buffer, 0x600, 0x680);\n            this.clearingBuffer = getInt32Array(240);\n            this.initializeClearingBuffer();\n            this.OBJMatrixParameters = getInt32Array(0x80);\n            this.initializeOAMTable();\n        }\n        GameBoyAdvanceOBJRenderer.prototype.clearScratch = function () {\n            this.scratchBuffer.set(this.clearingBuffer);\n            this.scratchWindowBuffer.set(this.clearingBuffer);\n        }\n        GameBoyAdvanceOBJRenderer.prototype.initializeClearingBuffer = function () {\n            for (var position = 0; (position | 0) < 240; position = ((position | 0) + 1) | 0) {\n                this.clearingBuffer[position | 0] = 0x3800000;\n            }\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.outputSpriteNormal = function (xcoord, xcoordEnd, bitFlags) {\n        xcoord = xcoord | 0;\n        xcoordEnd = xcoordEnd | 0;\n        bitFlags = bitFlags | 0;\n        for (var xSource = 0; (xcoord | 0) < (xcoordEnd | 0); xcoord = ((xcoord | 0) + 1) | 0, xSource = ((xSource | 0) + 1) | 0) {\n            var pixel = bitFlags | this.scratchOBJBuffer[xSource | 0];\n            //Overwrite by priority:\n            if ((xcoord | 0) > -1 && (pixel & 0x3800000) < (this.scratchBuffer[xcoord | 0] & 0x3800000)) {\n                this.scratchBuffer[xcoord | 0] = pixel | 0;\n            }\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.outputSpriteFlipped = function (xcoord, xcoordEnd, bitFlags, xSize) {\n        xcoord = xcoord | 0;\n        xcoordEnd = xcoordEnd | 0;\n        bitFlags = bitFlags | 0;\n        xSize = xSize | 0;\n        for (var xSource = ((xSize | 0) - 1) | 0; (xcoord | 0) < (xcoordEnd | 0); xcoord = ((xcoord | 0) + 1) | 0, xSource = ((xSource | 0) - 1) | 0) {\n            var pixel = bitFlags | this.scratchOBJBuffer[xSource | 0];\n            //Overwrite by priority:\n            if ((xcoord | 0) > -1 && (pixel & 0x3800000) < (this.scratchBuffer[xcoord | 0] & 0x3800000)) {\n                this.scratchBuffer[xcoord | 0] = pixel | 0;\n            }\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.outputSpriteNormalOBJWIN = function (xcoord, xcoordEnd) {\n        xcoord = xcoord | 0;\n        xcoordEnd = xcoordEnd | 0;\n        for (var xSource = 0; (xcoord | 0) < (xcoordEnd | 0); xcoord = ((xcoord | 0) + 1) | 0, xSource = ((xSource | 0) + 1) | 0) {\n            if ((xcoord | 0) > -1 && (this.scratchOBJBuffer[xSource | 0] | 0) != 0) {\n                this.scratchWindowBuffer[xcoord | 0] = 0;\n            }\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.outputSpriteFlippedOBJWIN = function (xcoord, xcoordEnd, xSize) {\n        xcoord = xcoord | 0;\n        xcoordEnd = xcoordEnd | 0;\n        xSize = xSize | 0;\n        for (var xSource = ((xSize | 0) - 1) | 0; (xcoord | 0) < (xcoordEnd | 0); xcoord = ((xcoord | 0) + 1) | 0, xSource = ((xSource | 0) - 1) | 0) {\n            if ((xcoord | 0) > -1 && (this.scratchOBJBuffer[xSource | 0] | 0) != 0) {\n                this.scratchWindowBuffer[xcoord | 0] = 0;\n            }\n        }\n    }\n}\nelse {\n    GameBoyAdvanceOBJRenderer.prototype.initialize = function () {\n        this.paletteOBJ256 = this.gfx.paletteOBJ256;\n        this.paletteOBJ16 = this.gfx.paletteOBJ16;\n        this.VRAM = this.gfx.VRAM;\n        this.cyclesToRender = 1210;\n        this.OAMRAM = getUint8Array(0x400);\n        this.offset = 0x500;\n        this.scratchBuffer = this.gfx.buffer;\n        this.scratchWindowBuffer = getInt32Array(240);\n        this.scratchOBJBuffer = getInt32Array(128);\n        this.gfx.mosaicRenderer.attachOBJBuffer(this.scratchOBJBuffer);\n        this.OBJMatrixParameters = getInt32Array(0x80);\n        this.initializeOAMTable();\n    }\n    GameBoyAdvanceOBJRenderer.prototype.clearScratch = function () {\n        for (var position = 0; position < 240; ++position) {\n            this.scratchBuffer[position | this.offset] = 0x3800000;\n            this.scratchWindowBuffer[position] = 0x3800000;\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.outputSpriteNormal = function (xcoord, xcoordEnd, bitFlags) {\n        for (var xSource = 0; xcoord < xcoordEnd; ++xcoord, ++xSource) {\n            var pixel = bitFlags | this.scratchOBJBuffer[xSource];\n            //Overwrite by priority:\n            if ((xcoord | 0) > -1 && (pixel & 0x3800000) < (this.scratchBuffer[xcoord | this.offset] & 0x3800000)) {\n                this.scratchBuffer[xcoord | this.offset] = pixel;\n            }\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.outputSpriteFlipped = function (xcoord, xcoordEnd, bitFlags, xSize) {\n        for (var xSource = xSize - 1; xcoord < xcoordEnd; ++xcoord, --xSource) {\n            var pixel = bitFlags | this.scratchOBJBuffer[xSource];\n            //Overwrite by priority:\n            if (xcoord > -1 && (pixel & 0x3800000) < (this.scratchBuffer[xcoord | this.offset] & 0x3800000)) {\n                this.scratchBuffer[xcoord | this.offset] = pixel;\n            }\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.outputSpriteNormalOBJWIN = function (xcoord, xcoordEnd) {\n        for (var xSource = 0; xcoord < xcoordEnd; ++xcoord, ++xSource) {\n            if (xcoord > -1 && this.scratchOBJBuffer[xSource] != 0) {\n                this.scratchWindowBuffer[xcoord] = 0;\n            }\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.outputSpriteFlippedOBJWIN = function (xcoord, xcoordEnd, xSize) {\n        for (var xSource = xSize - 1; xcoord < xcoordEnd; ++xcoord, --xSource) {\n            if (xcoord > -1 && this.scratchOBJBuffer[xSource] != 0) {\n                this.scratchWindowBuffer[xcoord] = 0;\n            }\n        }\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.initializeOAMTable = function () {\n    this.OAMTable = [];\n    for (var spriteNumber = 0; (spriteNumber | 0) < 128; spriteNumber = ((spriteNumber | 0) + 1) | 0) {\n        this.OAMTable[spriteNumber | 0] = this.makeOAMAttributeTable();\n    }\n}\nif (typeof TypedObject == \"object\" && typeof TypedObject.StructType == \"object\") {\n    GameBoyAdvanceOBJRenderer.prototype.makeOAMAttributeTable = function () {\n        return new TypedObject.StructType({\n                                          ycoord:TypedObject.int32,\n                                          matrix2D:TypedObject.int32,\n                                          doubleSizeOrDisabled:TypedObject.int32,\n                                          mode:TypedObject.int32,\n                                          mosaic:TypedObject.int32,\n                                          monolithicPalette:TypedObject.int32,\n                                          shape:TypedObject.int32,\n                                          xcoord:TypedObject.int32,\n                                          matrixParameters:TypedObject.int32,\n                                          horizontalFlip:TypedObject.int32,\n                                          verticalFlip:TypedObject.int32,\n                                          size:TypedObject.int32,\n                                          tileNumber:TypedObject.int32,\n                                          priority:TypedObject.int32,\n                                          paletteNumber:TypedObject.int32\n                                          });\n    }\n}\nelse {\n    GameBoyAdvanceOBJRenderer.prototype.makeOAMAttributeTable = function () {\n        return {\n        ycoord:0,\n        matrix2D:0,\n        doubleSizeOrDisabled:0,\n        mode:0,\n        mosaic:0,\n        monolithicPalette:0,\n        shape:0,\n        xcoord:0,\n        matrixParameters:0,\n        horizontalFlip:0,\n        verticalFlip:0,\n        size:0,\n        tileNumber:0,\n        priority:0,\n        paletteNumber:0\n        };\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.renderScanLine = function (line) {\n    line = line | 0;\n    this.performRenderLoop(line | 0);\n}\nGameBoyAdvanceOBJRenderer.prototype.performRenderLoop = function (line) {\n    line = line | 0;\n    this.clearScratch();\n    var cycles = this.cyclesToRender | 0;\n    for (var objNumber = 0; (objNumber | 0) < 0x80; objNumber = ((objNumber | 0) + 1) | 0) {\n        cycles = this.renderSprite(line | 0, this.OAMTable[objNumber | 0], cycles | 0) | 0;\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.renderSprite = function (line, sprite, cycles) {\n    line = line | 0;\n    cycles = cycles | 0;\n    if (this.isDrawable(sprite)) {\n        if ((sprite.mosaic | 0) != 0) {\n            //Correct line number for mosaic:\n            line = ((line | 0) - (this.gfx.mosaicRenderer.getOBJMosaicYOffset(line | 0) | 0)) | 0;\n        }\n        //Obtain horizontal size info:\n        var xSize = this.lookupXSize[(sprite.shape << 2) | sprite.size] << (sprite.doubleSizeOrDisabled | 0);\n        //Obtain vertical size info:\n        var ySize = this.lookupYSize[(sprite.shape << 2) | sprite.size] << (sprite.doubleSizeOrDisabled | 0);\n        //Obtain some offsets:\n        var ycoord = sprite.ycoord | 0;\n        var yOffset = ((line | 0) - (ycoord | 0)) | 0;\n        //Overflow Correction:\n        if ((yOffset | 0) < 0 || (((ycoord | 0) + (ySize | 0)) | 0) > 0x100) {\n            /*\n             HW re-offsets any \"negative\" y-coord values to on-screen unsigned.\n             Also a bug triggers this on 8-bit ending coordinate overflow from large sprites.\n             */\n            yOffset = ((yOffset | 0) + 0x100) | 0;\n        }\n        //Make a sprite line:\n        ySize = ((ySize | 0) - 1) | 0;\n        if ((yOffset & ySize) == (yOffset | 0)) {\n            //Compute clocks required to draw the sprite:\n            cycles = this.computeCycles(cycles | 0, sprite.matrix2D | 0, xSize | 0) | 0;\n            //If there's enough cycles, render:\n            if ((cycles | 0) >= 0) {\n                switch (sprite.mode | 0) {\n                    case 0:\n                        //Normal/Semi-transparent Sprite:\n                        this.renderRegularSprite(sprite, xSize | 0, ySize | 0, yOffset | 0);\n                        break;\n                    case 1:\n                        //Semi-transparent Sprite:\n                        this.renderSemiTransparentSprite(sprite, xSize | 0, ySize | 0, yOffset | 0);\n                        break;\n                    case 2:\n                        //OBJ-WIN Sprite:\n                        this.renderOBJWINSprite(sprite, xSize | 0, ySize | 0, yOffset | 0);\n                }\n            }\n        }\n    }\n    return cycles | 0;\n}\nGameBoyAdvanceOBJRenderer.prototype.computeCycles = function (cycles, matrix2D, cyclesToSubtract) {\n    cycles = cycles | 0;\n    matrix2D = matrix2D | 0;\n    cyclesToSubtract = cyclesToSubtract | 0;\n    if ((matrix2D | 0) != 0) {\n        //Scale & Rotation:\n        cyclesToSubtract = cyclesToSubtract << 1;\n        cyclesToSubtract = ((cyclesToSubtract | 0) + 10) | 0;\n        cycles = ((cycles | 0) - (cyclesToSubtract | 0)) | 0;\n\n    }\n    else {\n        //Regular Scrolling:\n        cycles = ((cycles | 0) - (cyclesToSubtract | 0)) | 0;\n    }\n    return cycles | 0;\n}\nGameBoyAdvanceOBJRenderer.prototype.renderRegularSprite = function (sprite, xSize, ySize, yOffset) {\n    xSize = xSize | 0;\n    ySize = ySize | 0;\n    yOffset = yOffset | 0;\n    if ((sprite.matrix2D | 0) != 0) {\n        //Scale & Rotation:\n        this.renderMatrixSprite(sprite, xSize | 0, ((ySize | 0) + 1) | 0, yOffset | 0);\n    }\n    else {\n        //Regular Scrolling:\n        this.renderNormalSprite(sprite, xSize | 0, ySize | 0, yOffset | 0);\n    }\n    //Copy OBJ scratch buffer to scratch line buffer:\n    this.outputSpriteToScratch(sprite, xSize | 0);\n}\nGameBoyAdvanceOBJRenderer.prototype.renderSemiTransparentSprite = function (sprite, xSize, ySize, yOffset) {\n    xSize = xSize | 0;\n    ySize = ySize | 0;\n    yOffset = yOffset | 0;\n    if ((sprite.matrix2D | 0) != 0) {\n        //Scale & Rotation:\n        this.renderMatrixSprite(sprite, xSize | 0, ((ySize | 0) + 1) | 0, yOffset | 0);\n    }\n    else {\n        //Regular Scrolling:\n        this.renderNormalSprite(sprite, xSize | 0, ySize | 0, yOffset | 0);\n    }\n    //Copy OBJ scratch buffer to scratch line buffer:\n    this.outputSemiTransparentSpriteToScratch(sprite, xSize | 0);\n}\nGameBoyAdvanceOBJRenderer.prototype.renderOBJWINSprite = function (sprite, xSize, ySize, yOffset) {\n    xSize = xSize | 0;\n    ySize = ySize | 0;\n    yOffset = yOffset | 0;\n    if ((sprite.matrix2D | 0) != 0) {\n        //Scale & Rotation:\n        this.renderMatrixSpriteOBJWIN(sprite, xSize | 0, ((ySize | 0) + 1) | 0, yOffset | 0);\n    }\n    else {\n        //Regular Scrolling:\n        this.renderNormalSpriteOBJWIN(sprite, xSize | 0, ySize | 0, yOffset | 0);\n    }\n    //Copy OBJ scratch buffer to scratch obj-window line buffer:\n    this.outputSpriteToOBJWINScratch(sprite, xSize | 0);\n}\nif (typeof Math.imul == \"function\") {\n    //Math.imul found, insert the optimized path in:\n    GameBoyAdvanceOBJRenderer.prototype.renderMatrixSprite = function (sprite, xSize, ySize, yOffset) {\n        xSize = xSize | 0;\n        ySize = ySize | 0;\n        yOffset = yOffset | 0;\n        var xDiff = (-(xSize >> 1)) | 0;\n        var yDiff = ((yOffset | 0) - (ySize >> 1)) | 0;\n        var xSizeOriginal = xSize >> (sprite.doubleSizeOrDisabled | 0);\n        var xSizeFixed = xSizeOriginal << 8;\n        var ySizeOriginal = ySize >> (sprite.doubleSizeOrDisabled | 0);\n        var ySizeFixed = ySizeOriginal << 8;\n        var dx = this.OBJMatrixParameters[sprite.matrixParameters | 0] | 0;\n        var dmx = this.OBJMatrixParameters[sprite.matrixParameters | 1] | 0;\n        var dy = this.OBJMatrixParameters[sprite.matrixParameters | 2] | 0;\n        var dmy = this.OBJMatrixParameters[sprite.matrixParameters | 3] | 0;\n        var pa = Math.imul(dx | 0, xDiff | 0) | 0;\n        var pb = Math.imul(dmx | 0, yDiff | 0) | 0;\n        var pc = Math.imul(dy | 0, xDiff | 0) | 0;\n        var pd = Math.imul(dmy | 0, yDiff | 0) | 0;\n        var x = ((pa | 0) + (pb | 0)) | 0;\n        x = ((x | 0) + (xSizeFixed >> 1)) | 0;\n        var y = ((pc | 0) + (pd | 0)) | 0;\n        y = ((y | 0) + (ySizeFixed >> 1)) | 0;\n        for (var position = 0; (position | 0) < (xSize | 0); position = (position + 1) | 0, x = ((x | 0) + (dx | 0)) | 0, y = ((y | 0) + (dy | 0)) | 0) {\n            if ((x | 0) >= 0 && (y | 0) >= 0 && (x | 0) < (xSizeFixed | 0) && (y | 0) < (ySizeFixed | 0)) {\n                //Coordinates in range, fetch pixel:\n                this.scratchOBJBuffer[position | 0] = this.fetchMatrixPixel(sprite, x >> 8, y >> 8, xSizeOriginal | 0) | 0;\n            }\n            else {\n                //Coordinates outside of range, transparency defaulted:\n                this.scratchOBJBuffer[position | 0] = 0x3800000;\n            }\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.renderMatrixSpriteOBJWIN = function (sprite, xSize, ySize, yOffset) {\n        xSize = xSize | 0;\n        ySize = ySize | 0;\n        yOffset = yOffset | 0;\n        var xDiff = (-(xSize >> 1)) | 0;\n        var yDiff = ((yOffset | 0) - (ySize >> 1)) | 0;\n        var xSizeOriginal = xSize >> (sprite.doubleSizeOrDisabled | 0);\n        var xSizeFixed = xSizeOriginal << 8;\n        var ySizeOriginal = ySize >> (sprite.doubleSizeOrDisabled | 0);\n        var ySizeFixed = ySizeOriginal << 8;\n        var dx = this.OBJMatrixParameters[sprite.matrixParameters | 0] | 0;\n        var dmx = this.OBJMatrixParameters[sprite.matrixParameters | 1] | 0;\n        var dy = this.OBJMatrixParameters[sprite.matrixParameters | 2] | 0;\n        var dmy = this.OBJMatrixParameters[sprite.matrixParameters | 3] | 0;\n        var pa = Math.imul(dx | 0, xDiff | 0) | 0;\n        var pb = Math.imul(dmx | 0, yDiff | 0) | 0;\n        var pc = Math.imul(dy | 0, xDiff | 0) | 0;\n        var pd = Math.imul(dmy | 0, yDiff | 0) | 0;\n        var x = ((pa | 0) + (pb | 0)) | 0;\n        x = ((x | 0) + (xSizeFixed >> 1)) | 0;\n        var y = ((pc | 0) + (pd | 0)) | 0;\n        y = ((y | 0) + (ySizeFixed >> 1)) | 0;\n        for (var position = 0; (position | 0) < (xSize | 0); position = (position + 1) | 0, x = ((x | 0) + (dx | 0)) | 0, y = ((y | 0) + (dy | 0)) | 0) {\n            if ((x | 0) >= 0 && (y | 0) >= 0 && (x | 0) < (xSizeFixed | 0) && (y | 0) < (ySizeFixed | 0)) {\n                //Coordinates in range, fetch pixel:\n                this.scratchOBJBuffer[position | 0] = this.fetchMatrixPixelOBJWIN(sprite, x >> 8, y >> 8, xSizeOriginal | 0) | 0;\n            }\n            else {\n                //Coordinates outside of range, transparency defaulted:\n                this.scratchOBJBuffer[position | 0] = 0;\n            }\n        }\n    }\n}\nelse {\n    //Math.imul not found, use the compatibility method:\n    GameBoyAdvanceOBJRenderer.prototype.renderMatrixSprite = function (sprite, xSize, ySize, yOffset) {\n        var xDiff = -(xSize >> 1);\n        var yDiff = yOffset - (ySize >> 1);\n        var xSizeOriginal = xSize >> sprite.doubleSizeOrDisabled;\n        var xSizeFixed = xSizeOriginal << 8;\n        var ySizeOriginal = ySize >> sprite.doubleSizeOrDisabled;\n        var ySizeFixed = ySizeOriginal << 8;\n        var dx = this.OBJMatrixParameters[sprite.matrixParameters];\n        var dmx = this.OBJMatrixParameters[sprite.matrixParameters | 1];\n        var dy = this.OBJMatrixParameters[sprite.matrixParameters | 2];\n        var dmy = this.OBJMatrixParameters[sprite.matrixParameters | 3];\n        var pa = dx * xDiff;\n        var pb = dmx * yDiff;\n        var pc = dy * xDiff;\n        var pd = dmy * yDiff;\n        var x = pa + pb + (xSizeFixed >> 1);\n        var y = pc + pd + (ySizeFixed >> 1);\n        for (var position = 0; position < xSize; ++position, x += dx, y += dy) {\n            if (x >= 0 && y >= 0 && x < xSizeFixed && y < ySizeFixed) {\n                //Coordinates in range, fetch pixel:\n                this.scratchOBJBuffer[position] = this.fetchMatrixPixel(sprite, x >> 8, y >> 8, xSizeOriginal);\n            }\n            else {\n                //Coordinates outside of range, transparency defaulted:\n                this.scratchOBJBuffer[position] = 0x3800000;\n            }\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.renderMatrixSpriteOBJWIN = function (sprite, xSize, ySize, yOffset) {\n        var xDiff = -(xSize >> 1);\n        var yDiff = yOffset - (ySize >> 1);\n        var xSizeOriginal = xSize >> sprite.doubleSizeOrDisabled;\n        var xSizeFixed = xSizeOriginal << 8;\n        var ySizeOriginal = ySize >> sprite.doubleSizeOrDisabled;\n        var ySizeFixed = ySizeOriginal << 8;\n        var dx = this.OBJMatrixParameters[sprite.matrixParameters];\n        var dmx = this.OBJMatrixParameters[sprite.matrixParameters | 1];\n        var dy = this.OBJMatrixParameters[sprite.matrixParameters | 2];\n        var dmy = this.OBJMatrixParameters[sprite.matrixParameters | 3];\n        var pa = dx * xDiff;\n        var pb = dmx * yDiff;\n        var pc = dy * xDiff;\n        var pd = dmy * yDiff;\n        var x = pa + pb + (xSizeFixed >> 1);\n        var y = pc + pd + (ySizeFixed >> 1);\n        for (var position = 0; position < xSize; ++position, x += dx, y += dy) {\n            if (x >= 0 && y >= 0 && x < xSizeFixed && y < ySizeFixed) {\n                //Coordinates in range, fetch pixel:\n                this.scratchOBJBuffer[position] = this.fetchMatrixPixelOBJWIN(sprite, x >> 8, y >> 8, xSizeOriginal);\n            }\n            else {\n                //Coordinates outside of range, transparency defaulted:\n                this.scratchOBJBuffer[position] = 0;\n            }\n        }\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.fetchMatrixPixel = function (sprite, x, y, xSize) {\n    x = x | 0;\n    y = y | 0;\n    xSize = xSize | 0;\n    if ((sprite.monolithicPalette | 0) != 0) {\n        //256 Colors / 1 Palette:\n        var address = this.tileNumberToAddress256(sprite.tileNumber | 0, xSize | 0, y | 0) | 0;\n        address = ((address | 0) + (this.tileRelativeAddressOffset(x | 0, y | 0) | 0)) | 0;\n        return this.paletteOBJ256[this.VRAM[address | 0] | 0] | 0;\n    }\n    else {\n        //16 Colors / 16 palettes:\n        var address = this.tileNumberToAddress16(sprite.tileNumber | 0, xSize | 0, y | 0) | 0;\n        address = ((address | 0) + ((this.tileRelativeAddressOffset(x | 0, y | 0) >> 1) | 0)) | 0;\n        if ((x & 0x1) == 0) {\n            return this.paletteOBJ16[sprite.paletteNumber | this.VRAM[address | 0] & 0xF] | 0;\n        }\n        else {\n            return this.paletteOBJ16[sprite.paletteNumber | this.VRAM[address | 0] >> 4] | 0;\n        }\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.fetchMatrixPixelOBJWIN = function (sprite, x, y, xSize) {\n    x = x | 0;\n    y = y | 0;\n    xSize = xSize | 0;\n    if ((sprite.monolithicPalette | 0) != 0) {\n        //256 Colors / 1 Palette:\n        var address = this.tileNumberToAddress256(sprite.tileNumber | 0, xSize | 0, y | 0) | 0;\n        address = ((address | 0) + (this.tileRelativeAddressOffset(x | 0, y | 0) | 0)) | 0;\n        return this.VRAM[address | 0] | 0;\n    }\n    else {\n        //16 Colors / 16 palettes:\n        var address = this.tileNumberToAddress16(sprite.tileNumber | 0, xSize | 0, y | 0) | 0;\n        address = ((address | 0) + ((this.tileRelativeAddressOffset(x | 0, y | 0) >> 1) | 0)) | 0;\n        if ((x & 0x1) == 0) {\n            return this.VRAM[address | 0] & 0xF;\n        }\n        else {\n            return this.VRAM[address | 0] >> 4;\n        }\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.tileRelativeAddressOffset = function (x, y) {\n    x = x | 0;\n    y = y | 0;\n    return ((((y & 7) + (x & -8)) << 3) + (x & 0x7)) | 0;\n}\nGameBoyAdvanceOBJRenderer.prototype.renderNormalSprite = function (sprite, xSize, ySize, yOffset) {\n    xSize = xSize | 0;\n    ySize = ySize | 0;\n    yOffset = yOffset | 0;\n    if ((sprite.verticalFlip | 0) != 0) {\n        //Flip y-coordinate offset:\n        yOffset = ((ySize | 0) - (yOffset | 0)) | 0;\n    }\n    if ((sprite.monolithicPalette | 0) != 0) {\n        //256 Colors / 1 Palette:\n        var address = this.tileNumberToAddress256(sprite.tileNumber | 0, xSize | 0, yOffset | 0) | 0;\n        address = ((address | 0) + ((yOffset & 7) << 3)) | 0;\n        this.render256ColorPaletteSprite(address | 0, xSize | 0);\n    }\n    else {\n        //16 Colors / 16 palettes:\n        var address = this.tileNumberToAddress16(sprite.tileNumber | 0, xSize | 0, yOffset | 0) | 0;\n        address = ((address | 0) + ((yOffset & 7) << 2)) | 0;\n        this.render16ColorPaletteSprite(address | 0, xSize | 0, sprite.paletteNumber | 0);\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.renderNormalSpriteOBJWIN = function (sprite, xSize, ySize, yOffset) {\n    xSize = xSize | 0;\n    ySize = ySize | 0;\n    yOffset = yOffset | 0;\n    if ((sprite.verticalFlip | 0) != 0) {\n        //Flip y-coordinate offset:\n        yOffset = ((ySize | 0) - (yOffset | 0)) | 0;\n    }\n    if ((sprite.monolithicPalette | 0) != 0) {\n        //256 Colors / 1 Palette:\n        var address = this.tileNumberToAddress256(sprite.tileNumber | 0, xSize | 0, yOffset | 0) | 0;\n        address = ((address | 0) + ((yOffset & 7) << 3)) | 0;\n        this.render256ColorPaletteSpriteOBJWIN(address | 0, xSize | 0);\n    }\n    else {\n        //16 Colors / 16 palettes:\n        var address = this.tileNumberToAddress16(sprite.tileNumber | 0, xSize | 0, yOffset | 0) | 0;\n        address = ((address | 0) + ((yOffset & 7) << 2)) | 0;\n        this.render16ColorPaletteSpriteOBJWIN(address | 0, xSize | 0);\n    }\n}\nif (__LITTLE_ENDIAN__) {\n    GameBoyAdvanceOBJRenderer.prototype.render256ColorPaletteSprite = function (address, xSize) {\n        address = address >> 2;\n        xSize = xSize | 0;\n        var data = 0;\n        for (var objBufferPos = 0; (objBufferPos | 0) < (xSize | 0); objBufferPos = ((objBufferPos | 0) + 8) | 0) {\n            data = this.VRAM32[address | 0] | 0;\n            this.scratchOBJBuffer[objBufferPos | 0] = this.paletteOBJ256[data & 0xFF] | 0;\n            this.scratchOBJBuffer[objBufferPos | 1] = this.paletteOBJ256[(data >> 8) & 0xFF] | 0;\n            this.scratchOBJBuffer[objBufferPos | 2] = this.paletteOBJ256[(data >> 16) & 0xFF] | 0;\n            this.scratchOBJBuffer[objBufferPos | 3] = this.paletteOBJ256[data >>> 24] | 0;\n            data = this.VRAM32[address | 1] | 0;\n            this.scratchOBJBuffer[objBufferPos | 4] = this.paletteOBJ256[data & 0xFF] | 0;\n            this.scratchOBJBuffer[objBufferPos | 5] = this.paletteOBJ256[(data >> 8) & 0xFF] | 0;\n            this.scratchOBJBuffer[objBufferPos | 6] = this.paletteOBJ256[(data >> 16) & 0xFF] | 0;\n            this.scratchOBJBuffer[objBufferPos | 7] = this.paletteOBJ256[data >>> 24] | 0;\n            address = ((address | 0) + 0x10) | 0;\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.render256ColorPaletteSpriteOBJWIN = function (address, xSize) {\n        address = address >> 2;\n        xSize = xSize | 0;\n        var data = 0;\n        for (var objBufferPos = 0; (objBufferPos | 0) < (xSize | 0); objBufferPos = ((objBufferPos | 0) + 8) | 0) {\n            data = this.VRAM32[address | 0] | 0;\n            this.scratchOBJBuffer[objBufferPos | 0] = data & 0xFF;\n            this.scratchOBJBuffer[objBufferPos | 1] = (data >> 8) & 0xFF;\n            this.scratchOBJBuffer[objBufferPos | 2] = (data >> 16) & 0xFF;\n            this.scratchOBJBuffer[objBufferPos | 3] = data >>> 24;\n            data = this.VRAM32[address | 1] | 0;\n            this.scratchOBJBuffer[objBufferPos | 4] = data & 0xFF;\n            this.scratchOBJBuffer[objBufferPos | 5] = (data >> 8) & 0xFF;\n            this.scratchOBJBuffer[objBufferPos | 6] = (data >> 16) & 0xFF;\n            this.scratchOBJBuffer[objBufferPos | 7] = data >>> 24;\n            address = ((address | 0) + 0x10) | 0;\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.render16ColorPaletteSprite = function (address, xSize, paletteOffset) {\n        address = address >> 2;\n        xSize = xSize | 0;\n        paletteOffset = paletteOffset | 0;\n        var data = 0;\n        for (var objBufferPos = 0; (objBufferPos | 0) < (xSize | 0); objBufferPos = ((objBufferPos | 0) + 8) | 0) {\n            data = this.VRAM32[address | 0] | 0;\n            this.scratchOBJBuffer[objBufferPos | 0] = this.paletteOBJ16[paletteOffset | (data & 0xF)] | 0;\n            this.scratchOBJBuffer[objBufferPos | 1] = this.paletteOBJ16[paletteOffset | ((data >> 4) & 0xF)] | 0;\n            this.scratchOBJBuffer[objBufferPos | 2] = this.paletteOBJ16[paletteOffset | ((data >> 8) & 0xF)] | 0;\n            this.scratchOBJBuffer[objBufferPos | 3] = this.paletteOBJ16[paletteOffset | ((data >> 12) & 0xF)] | 0;\n            this.scratchOBJBuffer[objBufferPos | 4] = this.paletteOBJ16[paletteOffset | ((data >> 16) & 0xF)] | 0;\n            this.scratchOBJBuffer[objBufferPos | 5] = this.paletteOBJ16[paletteOffset | ((data >> 20) & 0xF)] | 0;\n            this.scratchOBJBuffer[objBufferPos | 6] = this.paletteOBJ16[paletteOffset | ((data >> 24) & 0xF)] | 0;\n            this.scratchOBJBuffer[objBufferPos | 7] = this.paletteOBJ16[paletteOffset | (data >>> 28)] | 0;\n            address = ((address | 0) + 0x8) | 0;\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.render16ColorPaletteSpriteOBJWIN = function (address, xSize) {\n        address = address >> 2;\n        xSize = xSize | 0;\n        var data = 0;\n        for (var objBufferPos = 0; (objBufferPos | 0) < (xSize | 0); objBufferPos = ((objBufferPos | 0) + 8) | 0) {\n            data = this.VRAM32[address | 0] | 0;\n            this.scratchOBJBuffer[objBufferPos | 0] = data & 0xF;\n            this.scratchOBJBuffer[objBufferPos | 1] = (data >> 4) & 0xF;\n            this.scratchOBJBuffer[objBufferPos | 2] = (data >> 8) & 0xF;\n            this.scratchOBJBuffer[objBufferPos | 3] = (data >> 12) & 0xF;\n            this.scratchOBJBuffer[objBufferPos | 4] = (data >> 16) & 0xF;\n            this.scratchOBJBuffer[objBufferPos | 5] = (data >> 20) & 0xF;\n            this.scratchOBJBuffer[objBufferPos | 6] = (data >> 24) & 0xF;\n            this.scratchOBJBuffer[objBufferPos | 7] = data >>> 28;\n            address = ((address | 0) + 0x8) | 0;\n        }\n    }\n}\nelse {\n    GameBoyAdvanceOBJRenderer.prototype.render256ColorPaletteSprite = function (address, xSize) {\n        for (var objBufferPos = 0; objBufferPos < xSize;) {\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ256[this.VRAM[address++]];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ256[this.VRAM[address++]];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ256[this.VRAM[address++]];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ256[this.VRAM[address++]];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ256[this.VRAM[address++]];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ256[this.VRAM[address++]];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ256[this.VRAM[address++]];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ256[this.VRAM[address]];\n            address += 0x39;\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.render256ColorPaletteSpriteOBJWIN = function (address, xSize) {\n        for (var objBufferPos = 0; objBufferPos < xSize;) {\n            this.scratchOBJBuffer[objBufferPos++] = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.VRAM[address];\n            address += 0x39;\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.render16ColorPaletteSprite = function (address, xSize, paletteOffset) {\n        var data = 0;\n        for (var objBufferPos = 0; objBufferPos < xSize;) {\n            data = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ16[paletteOffset | (data & 0xF)];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ16[paletteOffset | (data >> 4)];\n            data = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ16[paletteOffset | (data & 0xF)];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ16[paletteOffset | (data >> 4)];\n            data = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ16[paletteOffset | (data & 0xF)];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ16[paletteOffset | (data >> 4)];\n            data = this.VRAM[address];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ16[paletteOffset | (data & 0xF)];\n            this.scratchOBJBuffer[objBufferPos++] = this.paletteOBJ16[paletteOffset | (data >> 4)];\n            address += 0x1D;\n        }\n    }\n    GameBoyAdvanceOBJRenderer.prototype.render16ColorPaletteSpriteOBJWIN = function (address, xSize) {\n        var data = 0;\n        for (var objBufferPos = 0; objBufferPos < xSize;) {\n            data = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = data & 0xF;\n            this.scratchOBJBuffer[objBufferPos++] = data >> 4;\n            data = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = data & 0xF;\n            this.scratchOBJBuffer[objBufferPos++] = data >> 4;\n            data = this.VRAM[address++];\n            this.scratchOBJBuffer[objBufferPos++] = data & 0xF;\n            this.scratchOBJBuffer[objBufferPos++] = data >> 4;\n            data = this.VRAM[address];\n            this.scratchOBJBuffer[objBufferPos++] = data & 0xF;\n            this.scratchOBJBuffer[objBufferPos++] = data >> 4;\n            address += 0x1D;\n        }\n    }\n}\nif (typeof Math.imul == \"function\") {\n    //Math.imul found, insert the optimized path in:\n    GameBoyAdvanceOBJRenderer.prototype.tileNumberToAddress256 = function (tileNumber, xSize, yOffset) {\n        tileNumber = tileNumber | 0;\n        xSize = xSize | 0;\n        yOffset = yOffset | 0;\n        if ((this.gfx.displayControl & 0x40) == 0) {\n            //2D Mapping (32 8x8 tiles by 32 8x8 tiles):\n            //Hardware ignores the LSB in this case:\n            tileNumber = ((tileNumber & -2) + (Math.imul(yOffset >> 3, 0x20) | 0)) | 0;\n        }\n        else {\n            //1D Mapping:\n            //256 Color Palette:\n            tileNumber = ((tileNumber | 0) + (Math.imul(yOffset >> 3, xSize >> 2) | 0)) | 0;\n        }\n        //Starting address of currently drawing sprite line:\n        return ((tileNumber << 5) + 0x10000) | 0;\n    }\n    GameBoyAdvanceOBJRenderer.prototype.tileNumberToAddress16 = function (tileNumber, xSize, yOffset) {\n        tileNumber = tileNumber | 0;\n        xSize = xSize | 0;\n        yOffset = yOffset | 0;\n        if ((this.gfx.displayControl & 0x40) == 0) {\n            //2D Mapping (32 8x8 tiles by 32 8x8 tiles):\n            tileNumber = ((tileNumber | 0) + (Math.imul(yOffset >> 3, 0x20) | 0)) | 0;\n        }\n        else {\n            //1D Mapping:\n            //16 Color Palette:\n            tileNumber = ((tileNumber | 0) + (Math.imul(yOffset >> 3, xSize >> 3) | 0)) | 0;\n        }\n        //Starting address of currently drawing sprite line:\n        return ((tileNumber << 5) + 0x10000) | 0;\n    }\n}\nelse {\n    //Math.imul not found, use the compatibility method:\n    GameBoyAdvanceOBJRenderer.prototype.tileNumberToAddress256 = function (tileNumber, xSize, yOffset) {\n        if ((this.gfx.displayControl & 0x40) == 0) {\n            //2D Mapping (32 8x8 tiles by 32 8x8 tiles):\n            //Hardware ignores the LSB in this case:\n            tileNumber &= -2;\n            tileNumber += (yOffset >> 3) * 0x20;\n        }\n        else {\n            //1D Mapping:\n            tileNumber += (yOffset >> 3) * (xSize >> 2);\n        }\n        //Starting address of currently drawing sprite line:\n        return (tileNumber << 5) + 0x10000;\n    }\n    GameBoyAdvanceOBJRenderer.prototype.tileNumberToAddress16 = function (tileNumber, xSize, yOffset) {\n        if ((this.gfx.displayControl & 0x40) == 0) {\n            //2D Mapping (32 8x8 tiles by 32 8x8 tiles):\n            tileNumber += (yOffset >> 3) * 0x20;\n        }\n        else {\n            //1D Mapping:\n            tileNumber += (yOffset >> 3) * (xSize >> 3);\n        }\n        //Starting address of currently drawing sprite line:\n        return (tileNumber << 5) + 0x10000;\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.outputSpriteToScratch = function (sprite, xSize) {\n    xSize = xSize | 0;\n    //Simulate x-coord wrap around logic:\n    var xcoord = sprite.xcoord | 0;\n    if ((xcoord | 0) > ((0x200 - (xSize | 0)) | 0)) {\n        xcoord = ((xcoord | 0) - 0x200) | 0;\n    }\n    //Perform the mosaic transform:\n    if ((sprite.mosaic | 0) != 0) {\n        this.gfx.mosaicRenderer.renderOBJMosaicHorizontal(xcoord | 0, xSize | 0);\n    }\n    //Resolve end point:\n    var xcoordEnd = Math.min(((xcoord | 0) + (xSize | 0)) | 0, 240) | 0;\n    //Flag for compositor to ID the pixels as OBJ:\n    var bitFlags = (sprite.priority << 23) | 0x100000;\n    if ((sprite.horizontalFlip | 0) == 0 || (sprite.matrix2D | 0) != 0) {\n        //Normal:\n        this.outputSpriteNormal(xcoord | 0, xcoordEnd | 0, bitFlags | 0);\n    }\n    else {\n        //Flipped Horizontally:\n        this.outputSpriteFlipped(xcoord | 0, xcoordEnd | 0, bitFlags | 0, xSize | 0);\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.outputSemiTransparentSpriteToScratch = function (sprite, xSize) {\n    xSize = xSize | 0;\n    //Simulate x-coord wrap around logic:\n    var xcoord = sprite.xcoord | 0;\n    if ((xcoord | 0) > ((0x200 - (xSize | 0)) | 0)) {\n        xcoord = ((xcoord | 0) - 0x200) | 0;\n    }\n    //Perform the mosaic transform:\n    if ((sprite.mosaic | 0) != 0) {\n        this.gfx.mosaicRenderer.renderOBJMosaicHorizontal(xcoord | 0, xSize | 0);\n    }\n    //Resolve end point:\n    var xcoordEnd = Math.min(((xcoord | 0) + (xSize | 0)) | 0, 240) | 0;\n    //Flag for compositor to ID the pixels as OBJ:\n    var bitFlags = (sprite.priority << 23) | 0x500000;\n    if ((sprite.horizontalFlip | 0) == 0 || (sprite.matrix2D | 0) != 0) {\n        //Normal:\n        this.outputSpriteNormal(xcoord | 0, xcoordEnd | 0, bitFlags | 0);\n    }\n    else {\n        //Flipped Horizontally:\n        this.outputSpriteFlipped(xcoord | 0, xcoordEnd | 0, bitFlags | 0, xSize | 0);\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.outputSpriteToOBJWINScratch = function (sprite, xSize) {\n    xSize = xSize | 0;\n    //Simulate x-coord wrap around logic:\n    var xcoord = sprite.xcoord | 0;\n    if ((xcoord | 0) > ((0x200 - (xSize | 0)) | 0)) {\n        xcoord = ((xcoord | 0) - 0x200) | 0;\n    }\n    //Perform the mosaic transform:\n    if ((sprite.mosaic | 0) != 0) {\n        this.gfx.mosaicRenderer.renderOBJMosaicHorizontal(xcoord | 0, xSize | 0);\n    }\n    //Resolve end point:\n    var xcoordEnd = Math.min(((xcoord | 0) + (xSize | 0)) | 0, 240) | 0;\n    if ((sprite.horizontalFlip | 0) == 0 || (sprite.matrix2D | 0) != 0) {\n        //Normal:\n        this.outputSpriteNormalOBJWIN(xcoord | 0, xcoordEnd | 0);\n    }\n    else {\n        //Flipped Horizontally:\n        this.outputSpriteFlippedOBJWIN(xcoord | 0, xcoordEnd | 0, xSize | 0);\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.isDrawable = function (sprite) {\n    //Make sure we pass some checks that real hardware does:\n    if ((sprite.mode | 0) <= 2) {\n        if ((sprite.doubleSizeOrDisabled | 0) == 0 || (sprite.matrix2D | 0) != 0) {\n            if ((sprite.shape | 0) < 3) {\n                if ((this.gfx.displayControl & 0x7) < 3 || (sprite.tileNumber | 0) >= 0x200) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nGameBoyAdvanceOBJRenderer.prototype.setHBlankIntervalFreeStatus = function (data) {\n    data = data | 0;\n    if ((data | 0) != 0) {\n        this.cyclesToRender = 954;\n    }\n    else {\n        this.cyclesToRender = 1210;\n    }\n}\nGameBoyAdvanceOBJRenderer.prototype.readOAM = function (address) {\n    return this.OAMRAM[address & 0x3FF] | 0;\n}\nif (__LITTLE_ENDIAN__) {\n    GameBoyAdvanceOBJRenderer.prototype.writeOAM16 = function (address, data) {\n        address = address | 0;\n        data = data | 0;\n        var OAMTable = this.OAMTable[address >> 2];\n        switch (address & 0x3) {\n                //Attrib 0:\n            case 0:\n                OAMTable.ycoord = data & 0xFF;\n                OAMTable.matrix2D = data & 0x100;\n                OAMTable.doubleSizeOrDisabled = (data & 0x200) >> 9;\n                OAMTable.mode = (data >> 10) & 0x3;\n                OAMTable.mosaic = data & 0x1000;\n                OAMTable.monolithicPalette = data & 0x2000;\n                OAMTable.shape = data >> 14;\n                break;\n                //Attrib 1:\n            case 1:\n                OAMTable.xcoord = data & 0x1FF;\n                OAMTable.matrixParameters = (data >> 7) & 0x7C;\n                OAMTable.horizontalFlip = data & 0x1000;\n                OAMTable.verticalFlip = data & 0x2000;\n                OAMTable.size = data >> 14;\n                break;\n                //Attrib 2:\n            case 2:\n                OAMTable.tileNumber = data & 0x3FF;\n                OAMTable.priority = (data >> 10) & 0x3;\n                OAMTable.paletteNumber = (data >> 8) & 0xF0;\n                break;\n                //Scaling/Rotation Parameter:\n            default:\n                this.OBJMatrixParameters[address >> 2] = (data << 16) >> 16;\n        }\n        this.OAMRAM16[address | 0] = data & 0xFFFF;\n    }\n    GameBoyAdvanceOBJRenderer.prototype.writeOAM32 = function (address, data) {\n        address = address | 0;\n        data = data | 0;\n        var OAMTable = this.OAMTable[address >> 1];\n        if ((address & 0x1) == 0) {\n            //Attrib 0:\n            OAMTable.ycoord = data & 0xFF;\n            OAMTable.matrix2D = data & 0x100;\n            OAMTable.doubleSizeOrDisabled = (data & 0x200) >> 9;\n            OAMTable.mode = (data >> 10) & 0x3;\n            OAMTable.mosaic = data & 0x1000;\n            OAMTable.monolithicPalette = data & 0x2000;\n            OAMTable.shape = (data >> 14) & 0x3;\n            //Attrib 1:\n            OAMTable.xcoord = (data >> 16) & 0x1FF;\n            OAMTable.matrixParameters = (data >> 23) & 0x7C;\n            OAMTable.horizontalFlip = data & 0x10000000;\n            OAMTable.verticalFlip = data & 0x20000000;\n            OAMTable.size = data >>> 30;\n        }\n        else {\n            //Attrib 2:\n            OAMTable.tileNumber = data & 0x3FF;\n            OAMTable.priority = (data >> 10) & 0x3;\n            OAMTable.paletteNumber = (data >> 8) & 0xF0;\n            //Scaling/Rotation Parameter:\n            this.OBJMatrixParameters[address >> 1] = data >> 16;\n        }\n        this.OAMRAM32[address | 0] = data | 0;\n    }\n    GameBoyAdvanceOBJRenderer.prototype.readOAM16 = function (address) {\n        address = address | 0;\n        return this.OAMRAM16[address & 0x1FF] | 0;\n    }\n    GameBoyAdvanceOBJRenderer.prototype.readOAM32 = function (address) {\n        address = address | 0;\n        return this.OAMRAM32[address & 0xFF] | 0;\n    }\n}\nelse {\n    GameBoyAdvanceOBJRenderer.prototype.writeOAM16 = function (address, data) {\n        address = address | 0;\n        data = data | 0;\n        address = address & 0x1FF;\n        var OAMTable = this.OAMTable[address >> 2];\n        switch (address & 0x3) {\n                //Attrib 0:\n            case 0:\n                OAMTable.ycoord = data & 0xFF;\n                OAMTable.matrix2D = data & 0x100;\n                OAMTable.doubleSizeOrDisabled = (data & 0x200) >> 9;\n                OAMTable.mode = (data >> 10) & 0x3;\n                OAMTable.mosaic = data & 0x1000;\n                OAMTable.monolithicPalette = data & 0x2000;\n                OAMTable.shape = data >> 14;\n                break;\n                //Attrib 1:\n            case 1:\n                OAMTable.xcoord = data & 0x1FF;\n                OAMTable.matrixParameters = (data >> 7) & 0x7C;\n                OAMTable.horizontalFlip = data & 0x1000;\n                OAMTable.verticalFlip = data & 0x2000;\n                OAMTable.size = data >> 14;\n                break;\n                //Attrib 2:\n            case 2:\n                OAMTable.tileNumber = data & 0x3FF;\n                OAMTable.priority = (data >> 10) & 0x3;\n                OAMTable.paletteNumber = (data >> 8) & 0xF0;\n                break;\n                //Scaling/Rotation Parameter:\n            default:\n                this.OBJMatrixParameters[address >> 2] = (data << 16) >> 16;\n        }\n        address = address << 1;\n        this.OAMRAM[address | 0] = data & 0xFF;\n        this.OAMRAM[address | 1] = data >> 8;\n    }\n    GameBoyAdvanceOBJRenderer.prototype.writeOAM32 = function (address, data) {\n        address = address | 0;\n        data = data | 0;\n        address = address & 0xFF;\n        var OAMTable = this.OAMTable[address >> 1];\n        if ((address & 0x1) == 0) {\n            //Attrib 0:\n            OAMTable.ycoord = data & 0xFF;\n            OAMTable.matrix2D = data & 0x100;\n            OAMTable.doubleSizeOrDisabled = (data & 0x200) >> 9;\n            OAMTable.mode = (data >> 10) & 0x3;\n            OAMTable.mosaic = data & 0x1000;\n            OAMTable.monolithicPalette = data & 0x2000;\n            OAMTable.shape = (data >> 14) & 0x3;\n            //Attrib 1:\n            OAMTable.xcoord = (data >> 16) & 0x1FF;\n            OAMTable.matrixParameters = (data >> 23) & 0x7C;\n            OAMTable.horizontalFlip = data & 0x10000000;\n            OAMTable.verticalFlip = data & 0x20000000;\n            OAMTable.size = data >>> 30;\n        }\n        else {\n            //Attrib 2:\n            OAMTable.tileNumber = data & 0x3FF;\n            OAMTable.priority = (data >> 10) & 0x3;\n            OAMTable.paletteNumber = (data >> 8) & 0xF0;\n            //Scaling/Rotation Parameter:\n            this.OBJMatrixParameters[address >> 1] = data >> 16;\n        }\n        address = address << 2;\n        this.OAMRAM[address | 0] = data & 0xFF;\n        this.OAMRAM[address | 1] = (data >> 8) & 0xFF;\n        this.OAMRAM[address | 2] = (data >> 16) & 0xFF;\n        this.OAMRAM[address | 3] = data >>> 24;\n    }\n    GameBoyAdvanceOBJRenderer.prototype.readOAM16 = function (address) {\n        address &= 0x1FF;\n        address <<= 1;\n        return this.OAMRAM[address] | (this.OAMRAM[address | 1] << 8);\n    }\n    GameBoyAdvanceOBJRenderer.prototype.readOAM32 = function (address) {\n        address &= 0xFF;\n        address <<= 2;\n        return this.OAMRAM[address] | (this.OAMRAM[address | 1] << 8) | (this.OAMRAM[address | 2] << 16)  | (this.OAMRAM[address | 3] << 24);\n    }\n}\n"],"names":["GameBoyAdvanceOBJRenderer","gfx","this","prototype","lookupXSize","lookupYSize","__VIEWS_SUPPORTED__","getUint8Array","fill","initialize","paletteOBJ256","paletteOBJ16","VRAM","cyclesToRender","VRAM32","OAMRAM","OAMRAM16","getUint16View","OAMRAM32","getInt32View","scratchBuffer","getInt32ViewCustom","buffer","scratchWindowBuffer","getInt32Array","scratchOBJBuffer","OBJMatrixParameters","initializeOAMTable","clearScratch","clearingBuffer","initializeClearingBuffer","set","position","outputSpriteNormal","xcoord","xcoordEnd","bitFlags","xSource","pixel","outputSpriteFlipped","xSize","outputSpriteNormalOBJWIN","outputSpriteFlippedOBJWIN","offset","mosaicRenderer","attachOBJBuffer","OAMTable","spriteNumber","makeOAMAttributeTable","TypedObject","StructType","ycoord","int32","matrix2D","doubleSizeOrDisabled","mode","mosaic","monolithicPalette","shape","matrixParameters","horizontalFlip","verticalFlip","size","tileNumber","priority","paletteNumber","renderScanLine","line","performRenderLoop","cycles","objNumber","renderSprite","sprite","isDrawable","getOBJMosaicYOffset","ySize","yOffset","computeCycles","renderRegularSprite","renderSemiTransparentSprite","renderOBJWINSprite","cyclesToSubtract","renderMatrixSprite","renderNormalSprite","outputSpriteToScratch","outputSemiTransparentSpriteToScratch","renderMatrixSpriteOBJWIN","renderNormalSpriteOBJWIN","outputSpriteToOBJWINScratch","Math","imul","xDiff","yDiff","xSizeOriginal","xSizeFixed","ySizeFixed","dx","dmx","dy","dmy","x","y","fetchMatrixPixel","fetchMatrixPixelOBJWIN","address","tileNumberToAddress256","tileRelativeAddressOffset","tileNumberToAddress16","render256ColorPaletteSprite","render16ColorPaletteSprite","render256ColorPaletteSpriteOBJWIN","render16ColorPaletteSpriteOBJWIN","__LITTLE_ENDIAN__","data","objBufferPos","paletteOffset","displayControl","renderOBJMosaicHorizontal","min","setHBlankIntervalFreeStatus","readOAM","writeOAM16","writeOAM32","readOAM16","readOAM32"],"version":3,"file":"build-index.9ac791e4.js.map"}