{"mappings":"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","sources":["dist/IodineGBA/core/memory/DMA2.js"],"sourcesContent":["\"use strict\";\n/*\n Copyright (C) 2012-2015 Grant Galitz\n \n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n \n The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n \n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction GameBoyAdvanceDMA2(IOCore) {\n    this.IOCore = IOCore;\n}\nGameBoyAdvanceDMA2.prototype.DMA_ENABLE_TYPE = [            //DMA Channel 2 Mapping:\n    0x1,\n    0x2,\n    0x4,\n    0x10\n];\nGameBoyAdvanceDMA2.prototype.initialize = function () {\n    this.enabled = 0;\n    this.pending = 0;\n    this.source = 0;\n    this.sourceShadow = 0;\n    this.destination = 0;\n    this.destinationShadow = 0;\n    this.wordCount = 0;\n    this.wordCountShadow = 0;\n    this.irqFlagging = 0;\n    this.dmaType = 0;\n    this.is32Bit = 0;\n    this.repeat = 0;\n    this.sourceControl = 0;\n    this.destinationControl = 0;\n    this.DMACore = this.IOCore.dma;\n    this.memory = this.IOCore.memory;\n    this.gfxState = this.IOCore.gfxState;\n    this.irq = this.IOCore.irq;\n    this.sound = this.IOCore.sound;\n    this.wait = this.IOCore.wait;\n}\nGameBoyAdvanceDMA2.prototype.validateDMASource = function (address) {\n    address = address | 0;\n    if ((address | 0) >= 0x2000000) {\n        this.source = address | 0;\n    }\n}\nGameBoyAdvanceDMA2.prototype.validateDMADestination = function (address) {\n    address = address | 0;\n    if ((address | 0) <= 0x7FFFFFF) {\n        this.destination = address | 0;\n    }\n}\nGameBoyAdvanceDMA2.prototype.writeDMASource8_0 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFFFF00;\n    data = data & 0xFF;\n    source = source | data;\n    this.validateDMASource(source | 0);\n}\nGameBoyAdvanceDMA2.prototype.writeDMASource8_1 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFF00FF;\n    data = data & 0xFF;\n    source = source | (data << 8);\n    this.validateDMASource(source | 0)\n}\nGameBoyAdvanceDMA2.prototype.writeDMASource8_2 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xF00FFFF;\n    data = data & 0xFF;\n    source = ource | (data << 16);\n    this.validateDMASource(source | 0)\n}\nGameBoyAdvanceDMA2.prototype.writeDMASource8_3 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFFFFF;\n    data = data & 0xF;\n    source = source | (data << 24);\n    this.validateDMASource(source | 0)\n}\nGameBoyAdvanceDMA2.prototype.writeDMASource16_0 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFF0000;\n    data = data & 0xFFFF;\n    source = source | data;\n    this.validateDMASource(source | 0)\n}\nGameBoyAdvanceDMA2.prototype.writeDMASource16_1 = function (data) {\n    data = data | 0;\n    var source = this.source & 0xFFFF;\n    data = data & 0xFFF;\n    source = source | (data << 16);\n    this.validateDMASource(source | 0)\n}\nGameBoyAdvanceDMA2.prototype.writeDMASource32 = function (data) {\n    data = data | 0;\n    var source = data & 0xFFFFFFF;\n    this.validateDMASource(source | 0)\n}\nGameBoyAdvanceDMA2.prototype.writeDMADestination8_0 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFFFF00;\n    data = data & 0xFF;\n    destination = destination | data;\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA2.prototype.writeDMADestination8_1 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFF00FF;\n    data = data & 0xFF;\n    destination = destination | (data << 8);\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA2.prototype.writeDMADestination8_2 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xF00FFFF;\n    data = data & 0xFF;\n    destination = destination | (data << 16);\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA2.prototype.writeDMADestination8_3 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFFFFF;\n    data = data & 0xF;\n    destination = destination | (data << 24);\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA2.prototype.writeDMADestination16_0 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFF0000;\n    data = data & 0xFFFF;\n    destination = destination | data;\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA2.prototype.writeDMADestination16_1 = function (data) {\n    data = data | 0;\n    var destination = this.destination & 0xFFFF;\n    data = data & 0xFFF;\n    destination = destination | (data << 16);\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA2.prototype.writeDMADestination32 = function (data) {\n    data = data | 0;\n    var destination = data & 0xFFFFFFF;\n    this.validateDMADestination(destination | 0);\n}\nGameBoyAdvanceDMA2.prototype.writeDMAWordCount8_0 = function (data) {\n    data = data | 0;\n    this.wordCount = this.wordCount & 0x3F00;\n    data = data & 0xFF;\n    this.wordCount = this.wordCount | data;\n}\nGameBoyAdvanceDMA2.prototype.writeDMAWordCount8_1 = function (data) {\n    data = data | 0;\n    this.wordCount = this.wordCount & 0xFF;\n    data = data & 0x3F;\n    this.wordCount = this.wordCount | (data << 8);\n}\nGameBoyAdvanceDMA2.prototype.writeDMAWordCount16 = function (data) {\n    data = data | 0;\n    this.wordCount = data & 0x3FFF;\n}\nGameBoyAdvanceDMA2.prototype.writeDMAControl8_0 = function (data) {\n    data = data | 0;\n    this.destinationControl = (data >> 5) & 0x3;\n    this.sourceControl = this.sourceControl & 0x2;\n    this.sourceControl = this.sourceControl | ((data >> 7) & 0x1);\n}\nGameBoyAdvanceDMA2.prototype.writeDMAControl8_1 = function (data) {\n    data = data | 0;\n    //Spill state machine clocks:\n    this.IOCore.updateCoreClocking();\n    this.sourceControl = (this.sourceControl & 0x1) | ((data & 0x1) << 1);\n    this.repeat = data & 0x2;\n    this.is32Bit = data & 0x4;\n    this.dmaType = (data >> 4) & 0x3;\n    this.irqFlagging = data & 0x40;\n    this.enableDMAChannel(data & 0x80);\n    //Calculate next event:\n    this.IOCore.updateCoreEventTime();\n}\nGameBoyAdvanceDMA2.prototype.writeDMAControl16 = function (data) {\n    data = data | 0;\n    //Spill state machine clocks:\n    this.IOCore.updateCoreClocking();\n    this.destinationControl = (data >> 5) & 0x3;\n    this.sourceControl = (data >> 7) & 0x3;\n    this.repeat = (data >> 8) & 0x2;\n    this.is32Bit = (data >> 8) & 0x4;\n    this.dmaType = (data >> 12) & 0x3;\n    this.irqFlagging = (data >> 8) & 0x40;\n    this.enableDMAChannel(data & 0x8000);\n    //Calculate next event:\n    this.IOCore.updateCoreEventTime();\n}\nGameBoyAdvanceDMA2.prototype.writeDMAControl32 = function (data) {\n    data = data | 0;\n    this.writeDMAWordCount16(data | 0);\n    this.writeDMAControl16(data >> 16);\n}\nGameBoyAdvanceDMA2.prototype.readDMAControl8_0 = function () {\n    var data = this.destinationControl << 5;\n    data = data | ((this.sourceControl & 0x1) << 7);\n    return data | 0;\n}\nGameBoyAdvanceDMA2.prototype.readDMAControl8_1 = function () {\n    var data = this.sourceControl >> 1;\n    data = data | this.repeat;\n    data = data | this.is32Bit;\n    data = data | (this.dmaType << 4);\n    data = data | this.irqFlagging;\n    if ((this.enabled | 0) != 0) {\n        data = data | 0x80;\n    }\n    return data | 0;\n}\nGameBoyAdvanceDMA2.prototype.readDMAControl16 = function () {\n    var data = this.destinationControl << 5;\n    data = data | (this.sourceControl << 7);\n    data = data | (this.repeat << 8);\n    data = data | (this.is32Bit << 8);\n    data = data | (this.dmaType << 12);\n    data = data | (this.irqFlagging << 8);\n    if ((this.enabled | 0) != 0) {\n        data = data | 0x8000;\n    }\n    return data | 0;\n}\nGameBoyAdvanceDMA2.prototype.getMatchStatus = function () {\n    return this.enabled & this.pending;\n}\nGameBoyAdvanceDMA2.prototype.soundFIFOBRequest = function () {\n    this.requestDMA(0x10);\n}\nGameBoyAdvanceDMA2.prototype.requestDMA = function (DMAType) {\n    DMAType = DMAType | 0;\n    if ((this.enabled & DMAType) != 0) {\n        this.pending = DMAType | 0;\n        this.DMACore.update();\n    }\n}\nGameBoyAdvanceDMA2.prototype.enableDMAChannel = function (enabled) {\n    enabled = enabled | 0;\n    if ((enabled | 0) != 0) {\n        //If DMA was previously disabled, reload control registers:\n        if ((this.enabled | 0) == 0) {\n            switch (this.dmaType | 0) {\n                case 0x3:\n                    //Direct Sound DMA Hardwired To Wordcount Of 4:\n                    this.wordCountShadow = 0x4;\n                    break;\n                case 0:\n                    //Flag immediate DMA transfers for processing now:\n                    this.pending = 0x1;\n                default:\n                    //Shadow copy the word count:\n                    this.wordCountShadow = this.wordCount | 0;\n            }\n            //Shadow copy the source address:\n            this.sourceShadow = this.source | 0;\n            //Shadow copy the destination address:\n            this.destinationShadow = this.destination | 0;\n        }\n        //DMA type changed:\n        this.enabled = this.DMA_ENABLE_TYPE[this.dmaType | 0] | 0;\n        //this.pending = this.pending & this.enabled;\n        //Assert the FIFO A DMA request signal:\n        this.sound.checkFIFOBPendingSignal();\n    }\n    else {\n        //DMA Disabled:\n        this.enabled = 0;\n    }\n    //Run some DMA channel activity checks:\n    this.DMACore.update();\n}\nGameBoyAdvanceDMA2.prototype.handleDMACopy = function () {\n    //Get the source addess:\n    var source = this.sourceShadow | 0;\n    //Transfer Data:\n    if ((this.enabled | 0) == 0x10) {\n        //32-bit Transfer:\n        this.copySound(source | 0);\n    }\n    else {\n        //Get the destination address:\n        var destination = this.destinationShadow | 0;\n        if ((this.is32Bit | 0) == 4) {\n            //32-bit Transfer:\n            this.copy32(source | 0, destination | 0);\n        }\n        else {\n            //16-bit Transfer:\n            this.copy16(source | 0, destination | 0);\n        }\n    }\n}\nGameBoyAdvanceDMA2.prototype.copy16 = function (source, destination) {\n    source = source | 0;\n    destination = destination | 0;\n    var data = this.memory.memoryReadDMAFull16(source | 0) | 0;\n    this.memory.memoryWriteDMA16(destination | 0, data | 0);\n    this.decrementWordCount(source | 0, destination | 0, 2);\n    this.DMACore.updateFetch(data | (data << 16));\n}\nGameBoyAdvanceDMA2.prototype.copy32 = function (source, destination) {\n    source = source | 0;\n    destination = destination | 0;\n    var data = this.memory.memoryReadDMAFull32(source | 0) | 0;\n    this.memory.memoryWriteDMA32(destination | 0, data | 0);\n    this.decrementWordCount(source | 0, destination | 0, 4);\n    this.DMACore.updateFetch(data | 0);\n}\nGameBoyAdvanceDMA2.prototype.copySound = function (source) {\n    source = source | 0;\n    var data = this.memory.memoryReadDMAFull32(source | 0) | 0;\n    this.wait.singleClock();\n    this.IOCore.updateTimerClocking();\n    this.sound.writeFIFOB32(data | 0);\n    this.soundDMAUpdate(source | 0);\n    this.DMACore.updateFetch(data | 0);\n}\nGameBoyAdvanceDMA2.prototype.decrementWordCount = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    //Decrement the word count:\n    var wordCountShadow = ((this.wordCountShadow | 0) - 1) & 0x3FFF;\n    if ((wordCountShadow | 0) == 0) {\n        //DMA transfer ended, handle accordingly:\n        wordCountShadow = this.finalizeDMA(source | 0, destination | 0, transferred | 0) | 0;\n    }\n    else {\n        //Update addresses:\n        this.incrementDMAAddresses(source | 0, destination | 0, transferred | 0);\n    }\n    //Save the new word count:\n    this.wordCountShadow = wordCountShadow | 0;\n}\nGameBoyAdvanceDMA2.prototype.soundDMAUpdate = function (source) {\n    source = source | 0;\n    //Decrement the word count:\n    this.wordCountShadow = ((this.wordCountShadow | 0) - 1) & 0x3FFF;\n    if ((this.wordCountShadow | 0) == 0) {\n        //DMA transfer ended, handle accordingly:\n        //Reset pending requests:\n        this.pending = 0;\n        //Check Repeat Status:\n        if ((this.repeat | 0) == 0) {\n            //Disable the enable bit:\n            this.enabled = 0;\n        }\n        else {\n            //Repeating the dma:\n            //Direct Sound DMA Hardwired To Wordcount Of 4:\n            this.wordCountShadow = 0x4;\n        }\n        //Assert the FIFO B DMA request signal:\n        this.sound.checkFIFOBPendingSignal();\n        //Run the DMA channel checks:\n        this.DMACore.update();\n        //Check to see if we should flag for IRQ:\n        this.checkIRQTrigger();\n    }\n    //Update source address:\n    switch (this.sourceControl | 0) {\n        case 0:    //Increment\n        case 3:    //Forbidden (VBA has it increment)\n            this.sourceShadow = ((source | 0) + 4) | 0;\n            break;\n        case 1:\n            this.sourceShadow = ((source | 0) - 4) | 0;\n    }\n}\nGameBoyAdvanceDMA2.prototype.finalizeDMA = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    var wordCountShadow = 0;\n    //Reset pending requests:\n    this.pending = 0;\n    //Check Repeat Status:\n    if ((this.repeat | 0) == 0 || (this.enabled | 0) == 0x1) {\n        //Disable the enable bit:\n        this.enabled = 0;\n    }\n    else {\n        //Repeating the dma:\n        //Reload word count:\n        wordCountShadow = this.wordCount | 0;\n    }\n    //Assert the FIFO B DMA request signal:\n    this.sound.checkFIFOBPendingSignal();\n    //Run the DMA channel checks:\n    this.DMACore.update();\n    //Check to see if we should flag for IRQ:\n    this.checkIRQTrigger();\n    //Update addresses:\n    this.finalDMAAddresses(source | 0, destination | 0, transferred | 0);\n    return wordCountShadow | 0;\n}\nGameBoyAdvanceDMA2.prototype.checkIRQTrigger = function () {\n    if ((this.irqFlagging | 0) != 0) {\n        this.irq.requestIRQ(0x400);\n    }\n}\nGameBoyAdvanceDMA2.prototype.finalDMAAddresses = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    //Update source address:\n    switch (this.sourceControl | 0) {\n        case 0:    //Increment\n        case 3:    //Forbidden (VBA has it increment)\n            this.sourceShadow = ((source | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:    //Decrement\n            this.sourceShadow = ((source | 0) - (transferred | 0)) | 0;\n    }\n    //Update destination address:\n    switch (this.destinationControl | 0) {\n        case 0:    //Increment\n            this.destinationShadow = ((destination | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:    //Decrement\n            this.destinationShadow = ((destination | 0) - (transferred | 0)) | 0;\n            break;\n        case 3:    //Reload\n            this.destinationShadow = this.destination | 0;\n    }\n}\nGameBoyAdvanceDMA2.prototype.incrementDMAAddresses = function (source, destination, transferred) {\n    source = source | 0;\n    destination = destination | 0;\n    transferred = transferred | 0;\n    //Update source address:\n    switch (this.sourceControl | 0) {\n        case 0:    //Increment\n        case 3:    //Forbidden (VBA has it increment)\n            this.sourceShadow = ((source | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:\n            this.sourceShadow = ((source | 0) - (transferred | 0)) | 0;\n    }\n    //Update destination address:\n    switch (this.destinationControl | 0) {\n        case 0:    //Increment\n        case 3:    //Increment\n            this.destinationShadow = ((destination | 0) + (transferred | 0)) | 0;\n            break;\n        case 1:    //Decrement\n            this.destinationShadow = ((destination | 0) - (transferred | 0)) | 0;\n    }\n}\nGameBoyAdvanceDMA2.prototype.nextEventTime = function () {\n    var clocks = 0x7FFFFFFF;\n    switch (this.enabled | 0) {\n            //V_BLANK\n        case 0x2:\n            clocks = this.gfxState.nextVBlankEventTime() | 0;\n            break;\n            //H_BLANK:\n        case 0x4:\n            clocks = this.gfxState.nextHBlankDMAEventTime() | 0;\n            break;\n            //FIFO_B:\n        case 0x10:\n            clocks = this.sound.nextFIFOBEventTime() | 0;\n    }\n    return clocks | 0;\n}"],"names":["GameBoyAdvanceDMA2","IOCore","this","prototype","DMA_ENABLE_TYPE","initialize","enabled","pending","source","sourceShadow","destination","destinationShadow","wordCount","wordCountShadow","irqFlagging","dmaType","is32Bit","repeat","sourceControl","destinationControl","DMACore","dma","memory","gfxState","irq","sound","wait","validateDMASource","address","validateDMADestination","writeDMASource8_0","data","writeDMASource8_1","writeDMASource8_2","ource","writeDMASource8_3","writeDMASource16_0","writeDMASource16_1","writeDMASource32","writeDMADestination8_0","writeDMADestination8_1","writeDMADestination8_2","writeDMADestination8_3","writeDMADestination16_0","writeDMADestination16_1","writeDMADestination32","writeDMAWordCount8_0","writeDMAWordCount8_1","writeDMAWordCount16","writeDMAControl8_0","writeDMAControl8_1","updateCoreClocking","enableDMAChannel","updateCoreEventTime","writeDMAControl16","writeDMAControl32","readDMAControl8_0","readDMAControl8_1","readDMAControl16","getMatchStatus","soundFIFOBRequest","requestDMA","DMAType","update","checkFIFOBPendingSignal","handleDMACopy","copySound","copy32","copy16","memoryReadDMAFull16","memoryWriteDMA16","decrementWordCount","updateFetch","memoryReadDMAFull32","memoryWriteDMA32","singleClock","updateTimerClocking","writeFIFOB32","soundDMAUpdate","transferred","finalizeDMA","incrementDMAAddresses","checkIRQTrigger","finalDMAAddresses","requestIRQ","nextEventTime","clocks","nextVBlankEventTime","nextHBlankDMAEventTime","nextFIFOBEventTime"],"version":3,"file":"index.161ae59a.js.map"}